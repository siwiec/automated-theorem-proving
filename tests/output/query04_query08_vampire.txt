% Refutation found. Thanks to Tanya!
% SZS status Theorem for query04_query08_tptp4X
% SZS output start Proof for query04_query08_tptp4X
1. ! [X0,X1,X2,X3,X4] : (from_2(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [input]
2. ! [X0] : (where_3(X0) <=> eq(X0,X0)) [input]
3. ! [X0] : (select_1(X0) <=> ? [X1,X2,X3,X4] : (where_3(X0) & from_2(X0,X1,X2,X3,X4))) [input]
4. ! [X0] : (main_query_1(X0) <=> select_1(X0)) [input]
5. ! [X5,X1,X2,X3,X4] : (from_5(X5,X1,X2,X3,X4) <=> tab1(X5,X1,X2,X3,X4)) [input]
6. ! [X5] : (where_6(X5) <=> (gte(X5,X5) & lte(X5,X5))) [input]
7. ! [X5] : (select_4(X5) <=> ? [X1,X2,X3,X4] : (where_6(X5) & from_5(X5,X1,X2,X3,X4))) [input]
8. ! [X5] : (main_query_2(X5) <=> select_4(X5)) [input]
9. ! [X6] : eq(X6,X6) [input]
12. ! [X6] : lte(X6,X6) [input]
18. ! [X6,X7] : (gte(X6,X7) <=> lte(X7,X6)) [input]
42. ! [X0] : (main_query_1(X0) <=> main_query_2(X0)) [input]
43. ~! [X0] : (main_query_1(X0) <=> main_query_2(X0)) [negated conjecture 42]
44. ! [X0,X1,X2,X3,X4] : (from_5(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [rectify 5]
45. ! [X0] : (where_6(X0) <=> (gte(X0,X0) & lte(X0,X0))) [rectify 6]
46. ! [X0] : (select_4(X0) <=> ? [X1,X2,X3,X4] : (where_6(X0) & from_5(X0,X1,X2,X3,X4))) [rectify 7]
47. ! [X0] : (main_query_2(X0) <=> select_4(X0)) [rectify 8]
48. ! [X0] : eq(X0,X0) [rectify 9]
51. ! [X0] : lte(X0,X0) [rectify 12]
57. ! [X0,X1] : (gte(X0,X1) <=> lte(X1,X0)) [rectify 18]
132. ? [X0] : (main_query_1(X0) <~> main_query_2(X0)) [ennf transformation 43]
133. ! [X0,X1,X2,X3,X4] : ((from_2(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_2(X0,X1,X2,X3,X4))) [nnf transformation 1]
134. ! [X0] : ((where_3(X0) | ~eq(X0,X0)) & (eq(X0,X0) | ~where_3(X0))) [nnf transformation 2]
135. ! [X0] : ((select_1(X0) | ! [X1,X2,X3,X4] : (~where_3(X0) | ~from_2(X0,X1,X2,X3,X4))) & (? [X1,X2,X3,X4] : (where_3(X0) & from_2(X0,X1,X2,X3,X4)) | ~select_1(X0))) [nnf transformation 3]
136. ! [X0] : ((select_1(X0) | ! [X1,X2,X3,X4] : (~where_3(X0) | ~from_2(X0,X1,X2,X3,X4))) & (? [X5,X6,X7,X8] : (where_3(X0) & from_2(X0,X5,X6,X7,X8)) | ~select_1(X0))) [rectify 135]
137. ! [X0] : (? [X5,X6,X7,X8] : (where_3(X0) & from_2(X0,X5,X6,X7,X8)) => (where_3(X0) & from_2(X0,sK0(X0),sK1(X0),sK2(X0),sK3(X0)))) [choice axiom]
138. ! [X0] : ((select_1(X0) | ! [X1,X2,X3,X4] : (~where_3(X0) | ~from_2(X0,X1,X2,X3,X4))) & ((where_3(X0) & from_2(X0,sK0(X0),sK1(X0),sK2(X0),sK3(X0))) | ~select_1(X0))) [skolemisation 136,137]
139. ! [X0] : ((main_query_1(X0) | ~select_1(X0)) & (select_1(X0) | ~main_query_1(X0))) [nnf transformation 4]
140. ! [X0,X1,X2,X3,X4] : ((from_5(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_5(X0,X1,X2,X3,X4))) [nnf transformation 44]
141. ! [X0] : ((where_6(X0) | (~gte(X0,X0) | ~lte(X0,X0))) & ((gte(X0,X0) & lte(X0,X0)) | ~where_6(X0))) [nnf transformation 45]
142. ! [X0] : ((where_6(X0) | ~gte(X0,X0) | ~lte(X0,X0)) & ((gte(X0,X0) & lte(X0,X0)) | ~where_6(X0))) [flattening 141]
143. ! [X0] : ((select_4(X0) | ! [X1,X2,X3,X4] : (~where_6(X0) | ~from_5(X0,X1,X2,X3,X4))) & (? [X1,X2,X3,X4] : (where_6(X0) & from_5(X0,X1,X2,X3,X4)) | ~select_4(X0))) [nnf transformation 46]
144. ! [X0] : ((select_4(X0) | ! [X1,X2,X3,X4] : (~where_6(X0) | ~from_5(X0,X1,X2,X3,X4))) & (? [X5,X6,X7,X8] : (where_6(X0) & from_5(X0,X5,X6,X7,X8)) | ~select_4(X0))) [rectify 143]
145. ! [X0] : (? [X5,X6,X7,X8] : (where_6(X0) & from_5(X0,X5,X6,X7,X8)) => (where_6(X0) & from_5(X0,sK4(X0),sK5(X0),sK6(X0),sK7(X0)))) [choice axiom]
146. ! [X0] : ((select_4(X0) | ! [X1,X2,X3,X4] : (~where_6(X0) | ~from_5(X0,X1,X2,X3,X4))) & ((where_6(X0) & from_5(X0,sK4(X0),sK5(X0),sK6(X0),sK7(X0))) | ~select_4(X0))) [skolemisation 144,145]
147. ! [X0] : ((main_query_2(X0) | ~select_4(X0)) & (select_4(X0) | ~main_query_2(X0))) [nnf transformation 47]
150. ! [X0,X1] : ((gte(X0,X1) | ~lte(X1,X0)) & (lte(X1,X0) | ~gte(X0,X1))) [nnf transformation 57]
151. ? [X0] : ((~main_query_2(X0) | ~main_query_1(X0)) & (main_query_2(X0) | main_query_1(X0))) [nnf transformation 132]
152. ? [X0] : ((~main_query_2(X0) | ~main_query_1(X0)) & (main_query_2(X0) | main_query_1(X0))) => ((~main_query_2(sK8) | ~main_query_1(sK8)) & (main_query_2(sK8) | main_query_1(sK8))) [choice axiom]
153. (~main_query_2(sK8) | ~main_query_1(sK8)) & (main_query_2(sK8) | main_query_1(sK8)) [skolemisation 151,152]
154. ~from_2(X0,X1,X2,X3,X4) | tab1(X0,X1,X2,X3,X4) [cnf transformation 133]
155. ~tab1(X0,X1,X2,X3,X4) | from_2(X0,X1,X2,X3,X4) [cnf transformation 133]
157. ~eq(X0,X0) | where_3(X0) [cnf transformation 134]
158. from_2(X0,sK0(X0),sK1(X0),sK2(X0),sK3(X0)) | ~select_1(X0) [cnf transformation 138]
160. ~from_2(X0,X1,X2,X3,X4) | ~where_3(X0) | select_1(X0) [cnf transformation 138]
161. ~main_query_1(X0) | select_1(X0) [cnf transformation 139]
162. ~select_1(X0) | main_query_1(X0) [cnf transformation 139]
163. ~from_5(X0,X1,X2,X3,X4) | tab1(X0,X1,X2,X3,X4) [cnf transformation 140]
164. ~tab1(X0,X1,X2,X3,X4) | from_5(X0,X1,X2,X3,X4) [cnf transformation 140]
167. ~gte(X0,X0) | where_6(X0) | ~lte(X0,X0) [cnf transformation 142]
168. from_5(X0,sK4(X0),sK5(X0),sK6(X0),sK7(X0)) | ~select_4(X0) [cnf transformation 146]
170. ~from_5(X0,X1,X2,X3,X4) | ~where_6(X0) | select_4(X0) [cnf transformation 146]
171. ~main_query_2(X0) | select_4(X0) [cnf transformation 147]
172. ~select_4(X0) | main_query_2(X0) [cnf transformation 147]
173. eq(X0,X0) [cnf transformation 48]
176. lte(X0,X0) [cnf transformation 51]
182. ~lte(X1,X0) | gte(X0,X1) [cnf transformation 150]
206. main_query_2(sK8) | main_query_1(sK8) [cnf transformation 153]
207. ~main_query_2(sK8) | ~main_query_1(sK8) [cnf transformation 153]
232. 0 <=> main_query_1(sK8) [avatar definition]
233. main_query_1(sK8) <- {0} [avatar component clause 232]
235. 1 <=> ~main_query_1(sK8) [avatar definition]
236. ~main_query_1(sK8) <- {1} [avatar component clause 235]
238. 2 <=> main_query_2(sK8) [avatar definition]
239. main_query_2(sK8) <- {2} [avatar component clause 238]
241. 3 <=> ~main_query_2(sK8) [avatar definition]
242. ~main_query_2(sK8) <- {3} [avatar component clause 241]
243. ~1 | ~3 [avatar split clause 207,241,235]
244. 0 | 2 [avatar split clause 206,238,232]
245. select_4(sK8) <- {2} [resolution 171,239]
249. where_3(X1) [resolution 157,173]
258. gte(X1,X1) [resolution 182,176]
260. where_6(X0) | ~lte(X0,X0) [resolution 167,258]
262. where_6(X0) [subsumption resolution 260,176]
269. tab1(X0,sK0(X0),sK1(X0),sK2(X0),sK3(X0)) | ~select_1(X0) [resolution 158,154]
271. tab1(X0,sK4(X0),sK5(X0),sK6(X0),sK7(X0)) | ~select_4(X0) [resolution 168,163]
273. from_5(X0,sK0(X0),sK1(X0),sK2(X0),sK3(X0)) | ~select_1(X0) [resolution 269,164]
276. from_2(X1,sK4(X1),sK5(X1),sK6(X1),sK7(X1)) | ~select_4(X1) [resolution 271,155]
278. ~select_1(X1) | ~where_6(X1) | select_4(X1) [resolution 273,170]
279. ~select_1(X1) | select_4(X1) [subsumption resolution 278,262]
281. ~select_4(X1) | ~where_3(X1) | select_1(X1) [resolution 276,160]
282. ~select_4(X1) | select_1(X1) [subsumption resolution 281,249]
283. select_1(sK8) <- {2} [resolution 282,245]
285. main_query_1(sK8) <- {2} [resolution 283,162]
287. $false <- {1, 2} [subsumption resolution 285,236]
288. 1 | ~2 [avatar contradiction clause 287]
289. select_1(sK8) <- {0} [resolution 233,161]
290. select_4(sK8) <- {0} [resolution 289,279]
294. main_query_2(sK8) <- {0} [resolution 290,172]
296. $false <- {0, 3} [subsumption resolution 294,242]
297. ~0 | 3 [avatar contradiction clause 296]
298. $false [avatar sat refutation 243,244,288,297]
% SZS output end Proof for query04_query08_tptp4X
% ------------------------------
% Version: Vampire 4.2.2 (commit e1949dd on 2017-12-14 18:39:21 +0000)
% Termination reason: Refutation

% Memory used [KB]: 4861
% Time elapsed: 0.007 s
% ------------------------------
% ------------------------------
