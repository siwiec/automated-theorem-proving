% Refutation found. Thanks to Tanya!
% SZS status Theorem for query12_query13_tptp4X
% SZS output start Proof for query12_query13_tptp4X
1. ! [X0,X1,X2,X3,X4] : (from_2(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [input]
2. ! [X0,X1] : (where_3(X0,X1) <=> (lte(X1,X0) & lte(X0,X1))) [input]
3. ! [X0,X1] : (select_1(X0,X1) <=> ? [X2,X3,X4] : (where_3(X0,X1) & from_2(X0,X1,X2,X3,X4))) [input]
4. ! [X5,X6] : (main_query_1(X5,X6) <=> select_1(X5,X6)) [input]
5. ! [X0,X1,X2,X3,X4] : (from_5(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [input]
6. ! [X0,X1] : (where_6(X0,X1) <=> (~gt(X0,X1) & ~lt(X0,X1))) [input]
7. ! [X0,X1] : (select_4(X0,X1) <=> ? [X2,X3,X4] : (where_6(X0,X1) & from_5(X0,X1,X2,X3,X4))) [input]
8. ! [X5,X6] : (main_query_2(X5,X6) <=> select_4(X5,X6)) [input]
10. ! [X7,X8] : (eq(X7,X8) => eq(X8,X7)) [input]
12. ! [X7] : lte(X7,X7) [input]
13. ! [X7,X8] : ((lte(X8,X7) & lte(X7,X8)) <=> eq(X7,X8)) [input]
15. ! [X7,X8] : (lte(X8,X7) | lte(X7,X8)) [input]
16. ! [X7,X8] : (lt(X7,X8) <=> (~eq(X7,X8) & lte(X7,X8))) [input]
17. ! [X7,X8] : (gt(X7,X8) <=> lt(X8,X7)) [input]
23. ! [X7,X0,X1] : ((where_3(X0,X1) & eq(X1,X7)) => where_3(X0,X7)) [input]
52. ! [X5,X6] : (main_query_1(X5,X6) <=> main_query_2(X5,X6)) [input]
53. ~! [X5,X6] : (main_query_1(X5,X6) <=> main_query_2(X5,X6)) [negated conjecture 52]
54. ! [X0,X1] : (main_query_1(X0,X1) <=> select_1(X0,X1)) [rectify 4]
55. ! [X0,X1] : (main_query_2(X0,X1) <=> select_4(X0,X1)) [rectify 8]
57. ! [X0,X1] : (eq(X0,X1) => eq(X1,X0)) [rectify 10]
59. ! [X0] : lte(X0,X0) [rectify 12]
60. ! [X0,X1] : ((lte(X1,X0) & lte(X0,X1)) <=> eq(X0,X1)) [rectify 13]
62. ! [X0,X1] : (lte(X1,X0) | lte(X0,X1)) [rectify 15]
63. ! [X0,X1] : (lt(X0,X1) <=> (~eq(X0,X1) & lte(X0,X1))) [rectify 16]
64. ! [X0,X1] : (gt(X0,X1) <=> lt(X1,X0)) [rectify 17]
70. ! [X0,X1,X2] : ((where_3(X1,X2) & eq(X2,X0)) => where_3(X1,X0)) [rectify 23]
99. ~! [X0,X1] : (main_query_1(X0,X1) <=> main_query_2(X0,X1)) [rectify 53]
100. ! [X0,X1] : (eq(X1,X0) | ~eq(X0,X1)) [ennf transformation 57]
111. ! [X0,X1,X2] : (where_3(X1,X0) | (~where_3(X1,X2) | ~eq(X2,X0))) [ennf transformation 70]
112. ! [X0,X1,X2] : (where_3(X1,X0) | ~where_3(X1,X2) | ~eq(X2,X0)) [flattening 111]
169. ? [X0,X1] : (main_query_1(X0,X1) <~> main_query_2(X0,X1)) [ennf transformation 99]
170. ! [X0,X1,X2,X3,X4] : ((from_2(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_2(X0,X1,X2,X3,X4))) [nnf transformation 1]
171. ! [X0,X1] : ((where_3(X0,X1) | (~lte(X1,X0) | ~lte(X0,X1))) & ((lte(X1,X0) & lte(X0,X1)) | ~where_3(X0,X1))) [nnf transformation 2]
172. ! [X0,X1] : ((where_3(X0,X1) | ~lte(X1,X0) | ~lte(X0,X1)) & ((lte(X1,X0) & lte(X0,X1)) | ~where_3(X0,X1))) [flattening 171]
173. ! [X0,X1] : ((select_1(X0,X1) | ! [X2,X3,X4] : (~where_3(X0,X1) | ~from_2(X0,X1,X2,X3,X4))) & (? [X2,X3,X4] : (where_3(X0,X1) & from_2(X0,X1,X2,X3,X4)) | ~select_1(X0,X1))) [nnf transformation 3]
174. ! [X0,X1] : ((select_1(X0,X1) | ! [X2,X3,X4] : (~where_3(X0,X1) | ~from_2(X0,X1,X2,X3,X4))) & (? [X5,X6,X7] : (where_3(X0,X1) & from_2(X0,X1,X5,X6,X7)) | ~select_1(X0,X1))) [rectify 173]
175. ! [X1,X0] : (? [X5,X6,X7] : (where_3(X0,X1) & from_2(X0,X1,X5,X6,X7)) => (where_3(X0,X1) & from_2(X0,X1,sK0(X0,X1),sK1(X0,X1),sK2(X0,X1)))) [choice axiom]
176. ! [X0,X1] : ((select_1(X0,X1) | ! [X2,X3,X4] : (~where_3(X0,X1) | ~from_2(X0,X1,X2,X3,X4))) & ((where_3(X0,X1) & from_2(X0,X1,sK0(X0,X1),sK1(X0,X1),sK2(X0,X1))) | ~select_1(X0,X1))) [skolemisation 174,175]
177. ! [X0,X1] : ((main_query_1(X0,X1) | ~select_1(X0,X1)) & (select_1(X0,X1) | ~main_query_1(X0,X1))) [nnf transformation 54]
178. ! [X0,X1,X2,X3,X4] : ((from_5(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_5(X0,X1,X2,X3,X4))) [nnf transformation 5]
179. ! [X0,X1] : ((where_6(X0,X1) | (gt(X0,X1) | lt(X0,X1))) & ((~gt(X0,X1) & ~lt(X0,X1)) | ~where_6(X0,X1))) [nnf transformation 6]
180. ! [X0,X1] : ((where_6(X0,X1) | gt(X0,X1) | lt(X0,X1)) & ((~gt(X0,X1) & ~lt(X0,X1)) | ~where_6(X0,X1))) [flattening 179]
181. ! [X0,X1] : ((select_4(X0,X1) | ! [X2,X3,X4] : (~where_6(X0,X1) | ~from_5(X0,X1,X2,X3,X4))) & (? [X2,X3,X4] : (where_6(X0,X1) & from_5(X0,X1,X2,X3,X4)) | ~select_4(X0,X1))) [nnf transformation 7]
182. ! [X0,X1] : ((select_4(X0,X1) | ! [X2,X3,X4] : (~where_6(X0,X1) | ~from_5(X0,X1,X2,X3,X4))) & (? [X5,X6,X7] : (where_6(X0,X1) & from_5(X0,X1,X5,X6,X7)) | ~select_4(X0,X1))) [rectify 181]
183. ! [X1,X0] : (? [X5,X6,X7] : (where_6(X0,X1) & from_5(X0,X1,X5,X6,X7)) => (where_6(X0,X1) & from_5(X0,X1,sK3(X0,X1),sK4(X0,X1),sK5(X0,X1)))) [choice axiom]
184. ! [X0,X1] : ((select_4(X0,X1) | ! [X2,X3,X4] : (~where_6(X0,X1) | ~from_5(X0,X1,X2,X3,X4))) & ((where_6(X0,X1) & from_5(X0,X1,sK3(X0,X1),sK4(X0,X1),sK5(X0,X1))) | ~select_4(X0,X1))) [skolemisation 182,183]
185. ! [X0,X1] : ((main_query_2(X0,X1) | ~select_4(X0,X1)) & (select_4(X0,X1) | ~main_query_2(X0,X1))) [nnf transformation 55]
186. ! [X0,X1] : (((lte(X1,X0) & lte(X0,X1)) | ~eq(X0,X1)) & (eq(X0,X1) | (~lte(X1,X0) | ~lte(X0,X1)))) [nnf transformation 60]
187. ! [X0,X1] : (((lte(X1,X0) & lte(X0,X1)) | ~eq(X0,X1)) & (eq(X0,X1) | ~lte(X1,X0) | ~lte(X0,X1))) [flattening 186]
188. ! [X0,X1] : ((lt(X0,X1) | (eq(X0,X1) | ~lte(X0,X1))) & ((~eq(X0,X1) & lte(X0,X1)) | ~lt(X0,X1))) [nnf transformation 63]
189. ! [X0,X1] : ((lt(X0,X1) | eq(X0,X1) | ~lte(X0,X1)) & ((~eq(X0,X1) & lte(X0,X1)) | ~lt(X0,X1))) [flattening 188]
190. ! [X0,X1] : ((gt(X0,X1) | ~lt(X1,X0)) & (lt(X1,X0) | ~gt(X0,X1))) [nnf transformation 64]
191. ? [X0,X1] : ((~main_query_2(X0,X1) | ~main_query_1(X0,X1)) & (main_query_2(X0,X1) | main_query_1(X0,X1))) [nnf transformation 169]
192. ? [X0,X1] : ((~main_query_2(X0,X1) | ~main_query_1(X0,X1)) & (main_query_2(X0,X1) | main_query_1(X0,X1))) => ((~main_query_2(sK6,sK7) | ~main_query_1(sK6,sK7)) & (main_query_2(sK6,sK7) | main_query_1(sK6,sK7))) [choice axiom]
193. (~main_query_2(sK6,sK7) | ~main_query_1(sK6,sK7)) & (main_query_2(sK6,sK7) | main_query_1(sK6,sK7)) [skolemisation 191,192]
194. ~from_2(X0,X1,X2,X3,X4) | tab1(X0,X1,X2,X3,X4) [cnf transformation 170]
195. ~tab1(X0,X1,X2,X3,X4) | from_2(X0,X1,X2,X3,X4) [cnf transformation 170]
196. ~where_3(X0,X1) | lte(X0,X1) [cnf transformation 172]
197. ~where_3(X0,X1) | lte(X1,X0) [cnf transformation 172]
198. ~lte(X1,X0) | where_3(X0,X1) | ~lte(X0,X1) [cnf transformation 172]
199. from_2(X0,X1,sK0(X0,X1),sK1(X0,X1),sK2(X0,X1)) | ~select_1(X0,X1) [cnf transformation 176]
200. ~select_1(X0,X1) | where_3(X0,X1) [cnf transformation 176]
201. ~from_2(X0,X1,X2,X3,X4) | ~where_3(X0,X1) | select_1(X0,X1) [cnf transformation 176]
202. ~main_query_1(X0,X1) | select_1(X0,X1) [cnf transformation 177]
203. ~select_1(X0,X1) | main_query_1(X0,X1) [cnf transformation 177]
204. ~from_5(X0,X1,X2,X3,X4) | tab1(X0,X1,X2,X3,X4) [cnf transformation 178]
205. ~tab1(X0,X1,X2,X3,X4) | from_5(X0,X1,X2,X3,X4) [cnf transformation 178]
206. ~lt(X0,X1) | ~where_6(X0,X1) [cnf transformation 180]
207. ~gt(X0,X1) | ~where_6(X0,X1) [cnf transformation 180]
208. gt(X0,X1) | where_6(X0,X1) | lt(X0,X1) [cnf transformation 180]
209. from_5(X0,X1,sK3(X0,X1),sK4(X0,X1),sK5(X0,X1)) | ~select_4(X0,X1) [cnf transformation 184]
210. ~select_4(X0,X1) | where_6(X0,X1) [cnf transformation 184]
211. ~from_5(X0,X1,X2,X3,X4) | ~where_6(X0,X1) | select_4(X0,X1) [cnf transformation 184]
212. ~main_query_2(X0,X1) | select_4(X0,X1) [cnf transformation 185]
213. ~select_4(X0,X1) | main_query_2(X0,X1) [cnf transformation 185]
215. ~eq(X0,X1) | eq(X1,X0) [cnf transformation 100]
217. lte(X0,X0) [cnf transformation 59]
218. ~lte(X1,X0) | eq(X0,X1) | ~lte(X0,X1) [cnf transformation 187]
219. ~eq(X0,X1) | lte(X0,X1) [cnf transformation 187]
220. ~eq(X0,X1) | lte(X1,X0) [cnf transformation 187]
222. lte(X1,X0) | lte(X0,X1) [cnf transformation 62]
224. ~eq(X0,X1) | ~lt(X0,X1) [cnf transformation 189]
225. ~lte(X0,X1) | eq(X0,X1) | lt(X0,X1) [cnf transformation 189]
226. ~gt(X0,X1) | lt(X1,X0) [cnf transformation 190]
227. ~lt(X1,X0) | gt(X0,X1) [cnf transformation 190]
231. ~eq(X2,X0) | ~where_3(X1,X2) | where_3(X1,X0) [cnf transformation 112]
260. main_query_2(sK6,sK7) | main_query_1(sK6,sK7) [cnf transformation 193]
261. ~main_query_2(sK6,sK7) | ~main_query_1(sK6,sK7) [cnf transformation 193]
263. 0 <=> main_query_1(sK6,sK7) [avatar definition]
264. main_query_1(sK6,sK7) <- {0} [avatar component clause 263]
266. 1 <=> ~main_query_1(sK6,sK7) [avatar definition]
267. ~main_query_1(sK6,sK7) <- {1} [avatar component clause 266]
269. 2 <=> main_query_2(sK6,sK7) [avatar definition]
270. main_query_2(sK6,sK7) <- {2} [avatar component clause 269]
272. 3 <=> ~main_query_2(sK6,sK7) [avatar definition]
273. ~main_query_2(sK6,sK7) <- {3} [avatar component clause 272]
274. ~1 | ~3 [avatar split clause 261,272,266]
275. 0 | 2 [avatar split clause 260,269,263]
276. select_4(sK6,sK7) <- {2} [resolution 212,270]
278. where_6(sK6,sK7) <- {2} [resolution 276,210]
284. where_3(X0,X0) | ~lte(X0,X0) [resolution 198,217]
287. where_3(X0,X0) [subsumption resolution 284,217]
290. lt(X1,X0) | lt(X0,X1) | where_6(X0,X1) [resolution 208,226]
300. eq(X1,X2) | lt(X1,X2) | lte(X2,X1) [resolution 225,222]
302. lt(X1,X2) | lte(X2,X1) [subsumption resolution 300,220]
305. ~where_6(X5,X4) | lte(X4,X5) [resolution 302,206]
311. lte(sK7,sK6) <- {2} [resolution 305,278]
313. eq(sK7,sK6) | lt(sK7,sK6) <- {2} [resolution 311,225]
318. 5 <=> ~lt(sK7,sK6) [avatar definition]
319. ~lt(sK7,sK6) <- {5} [avatar component clause 318]
321. 4 <=> lt(sK7,sK6) [avatar definition]
322. lt(sK7,sK6) <- {4} [avatar component clause 321]
327. 6 <=> eq(sK7,sK6) [avatar definition]
328. eq(sK7,sK6) <- {6} [avatar component clause 327]
329. 4 | 6 | ~2 [avatar split clause 313,269,327,321]
331. 8 <=> lte(sK6,sK7) [avatar definition]
332. lte(sK6,sK7) <- {8} [avatar component clause 331]
340. 10 <=> eq(sK6,sK7) [avatar definition]
341. eq(sK6,sK7) <- {10} [avatar component clause 340]
347. 12 <=> where_3(sK6,sK7) [avatar definition]
348. where_3(sK6,sK7) <- {12} [avatar component clause 347]
351. gt(sK6,sK7) <- {4} [resolution 322,227]
359. ~where_6(sK6,sK7) <- {4} [resolution 351,207]
360. $false <- {2, 4} [subsumption resolution 359,278]
361. ~2 | ~4 [avatar contradiction clause 360]
362. select_1(sK6,sK7) <- {0} [resolution 264,202]
365. where_3(sK6,sK7) <- {0} [resolution 362,200]
366. 12 | ~0 [avatar split clause 365,263,347]
368. lte(sK7,sK6) <- {12} [resolution 348,197]
369. lte(sK6,sK7) <- {12} [resolution 348,196]
372. 8 | ~12 [avatar split clause 369,347,331]
376. eq(sK7,sK6) | ~lte(sK7,sK6) <- {8} [resolution 332,218]
379. 15 <=> ~lt(sK6,sK7) [avatar definition]
380. ~lt(sK6,sK7) <- {15} [avatar component clause 379]
385. eq(sK7,sK6) <- {8, 12} [subsumption resolution 376,368]
386. 6 | ~8 | ~12 [avatar split clause 385,347,331,327]
389. eq(sK6,sK7) <- {6} [resolution 328,215]
393. ~lt(sK7,sK6) <- {6} [resolution 328,224]
406. ~5 | ~6 [avatar split clause 393,327,318]
416. ~lt(sK6,sK7) <- {10} [resolution 341,224]
429. ~15 | ~10 [avatar split clause 416,340,379]
432. eq(sK6,sK7) | ~lte(sK6,sK7) <- {12} [resolution 368,218]
444. tab1(X2,X3,sK0(X2,X3),sK1(X2,X3),sK2(X2,X3)) | ~select_1(X2,X3) [resolution 199,194]
446. tab1(X2,X3,sK3(X2,X3),sK4(X2,X3),sK5(X2,X3)) | ~select_4(X2,X3) [resolution 209,204]
485. lt(sK6,sK7) | where_6(sK6,sK7) <- {5} [resolution 290,319]
495. where_6(sK6,sK7) <- {5, 15} [subsumption resolution 485,380]
510. from_5(X2,X3,sK0(X2,X3),sK1(X2,X3),sK2(X2,X3)) | ~select_1(X2,X3) [resolution 444,205]
519. from_2(X0,X1,sK3(X0,X1),sK4(X0,X1),sK5(X0,X1)) | ~select_4(X0,X1) [resolution 446,195]
703. ~where_6(X2,X3) | ~select_1(X2,X3) | select_4(X2,X3) [resolution 510,211]
710. ~select_1(sK6,sK7) | select_4(sK6,sK7) <- {5, 15} [resolution 703,495]
712. select_4(sK6,sK7) <- {0, 5, 15} [subsumption resolution 710,362]
715. ~select_4(X2,X3) | ~where_3(X2,X3) | select_1(X2,X3) [resolution 519,201]
723. main_query_2(sK6,sK7) <- {0, 5, 15} [resolution 712,213]
725. $false <- {0, 3, 5, 15} [subsumption resolution 723,273]
726. ~0 | 3 | 5 | 15 [avatar contradiction clause 725]
727. eq(sK6,sK7) <- {8, 12} [subsumption resolution 432,332]
728. 10 | ~8 | ~12 [avatar split clause 727,347,331,340]
729. 10 | ~6 [avatar split clause 389,327,340]
731. select_4(sK6,sK7) <- {2} [resolution 270,212]
738. lte(sK6,sK7) <- {10} [resolution 341,219]
744. ~where_3(X4,sK6) | where_3(X4,sK7) <- {10} [resolution 341,231]
909. where_3(sK6,sK7) <- {10} [resolution 744,287]
964. ~where_3(sK6,sK7) | select_1(sK6,sK7) <- {2} [resolution 715,731]
968. select_1(sK6,sK7) <- {2, 12} [subsumption resolution 964,348]
980. main_query_1(sK6,sK7) <- {2, 12} [resolution 968,203]
982. $false <- {1, 2, 12} [subsumption resolution 980,267]
983. 1 | ~2 | ~12 [avatar contradiction clause 982]
986. 8 | ~10 [avatar split clause 738,340,331]
996. 12 | ~10 [avatar split clause 909,340,347]
998. $false [avatar sat refutation 274,275,329,361,366,372,386,406,429,726,728,729,983,986,996]
% SZS output end Proof for query12_query13_tptp4X
% ------------------------------
% Version: Vampire 4.2.2 (commit e1949dd on 2017-12-14 18:39:21 +0000)
% Termination reason: Refutation

% Memory used [KB]: 5245
% Time elapsed: 0.042 s
% ------------------------------
% ------------------------------
