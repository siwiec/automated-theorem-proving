% Refutation found. Thanks to Tanya!
% SZS status Theorem for query13_query14_tptp4X
% SZS output start Proof for query13_query14_tptp4X
1. ! [X0,X1,X2,X3,X4] : (from_2(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [input]
2. ! [X0,X1] : (where_3(X0,X1) <=> (~gt(X0,X1) & ~lt(X0,X1))) [input]
3. ! [X0,X1] : (select_1(X0,X1) <=> ? [X2,X3,X4] : (where_3(X0,X1) & from_2(X0,X1,X2,X3,X4))) [input]
4. ! [X5,X6] : (main_query_1(X5,X6) <=> select_1(X5,X6)) [input]
5. ! [X0,X1,X2,X3,X4] : (from_5(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [input]
6. ! [X0,X1,X2,X3,X4] : (from_9(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [input]
7. ! [X0] : (select_8(X0) <=> ? [X1,X2,X3,X4] : ($true & from_9(X0,X1,X2,X3,X4))) [input]
8. ! [X5] : (where_6_subquery_7(X5) <=> select_8(X5)) [input]
9. ! [X0,X1] : (where_6(X0,X1) <=> (where_6_subquery_7(X0) & eq(X0,X1))) [input]
10. ! [X0,X1] : (select_4(X0,X1) <=> ? [X2,X3,X4] : (where_6(X0,X1) & from_5(X0,X1,X2,X3,X4))) [input]
11. ! [X5,X6] : (main_query_2(X5,X6) <=> select_4(X5,X6)) [input]
13. ! [X7,X8] : (eq(X7,X8) => eq(X8,X7)) [input]
16. ! [X7,X8] : ((lte(X8,X7) & lte(X7,X8)) <=> eq(X7,X8)) [input]
17. ! [X7,X8,X9] : ((lte(X8,X9) & lte(X7,X8)) => lte(X7,X9)) [input]
18. ! [X7,X8] : (lte(X8,X7) | lte(X7,X8)) [input]
19. ! [X7,X8] : (lt(X7,X8) <=> (~eq(X7,X8) & lte(X7,X8))) [input]
20. ! [X7,X8] : (gt(X7,X8) <=> lt(X8,X7)) [input]
63. ! [X5,X6] : (main_query_1(X5,X6) <=> main_query_2(X5,X6)) [input]
64. ~! [X5,X6] : (main_query_1(X5,X6) <=> main_query_2(X5,X6)) [negated conjecture 63]
65. ! [X0,X1] : (main_query_1(X0,X1) <=> select_1(X0,X1)) [rectify 4]
66. ! [X0] : (select_8(X0) <=> ? [X1,X2,X3,X4] : from_9(X0,X1,X2,X3,X4)) [true and false elimination 7]
67. ! [X0] : (where_6_subquery_7(X0) <=> select_8(X0)) [rectify 8]
68. ! [X0,X1] : (main_query_2(X0,X1) <=> select_4(X0,X1)) [rectify 11]
70. ! [X0,X1] : (eq(X0,X1) => eq(X1,X0)) [rectify 13]
73. ! [X0,X1] : ((lte(X1,X0) & lte(X0,X1)) <=> eq(X0,X1)) [rectify 16]
74. ! [X0,X1,X2] : ((lte(X1,X2) & lte(X0,X1)) => lte(X0,X2)) [rectify 17]
75. ! [X0,X1] : (lte(X1,X0) | lte(X0,X1)) [rectify 18]
76. ! [X0,X1] : (lt(X0,X1) <=> (~eq(X0,X1) & lte(X0,X1))) [rectify 19]
77. ! [X0,X1] : (gt(X0,X1) <=> lt(X1,X0)) [rectify 20]
120. ~! [X0,X1] : (main_query_1(X0,X1) <=> main_query_2(X0,X1)) [rectify 64]
121. ! [X0,X1] : (eq(X1,X0) | ~eq(X0,X1)) [ennf transformation 70]
124. ! [X0,X1,X2] : (lte(X0,X2) | (~lte(X1,X2) | ~lte(X0,X1))) [ennf transformation 74]
125. ! [X0,X1,X2] : (lte(X0,X2) | ~lte(X1,X2) | ~lte(X0,X1)) [flattening 124]
206. ? [X0,X1] : (main_query_1(X0,X1) <~> main_query_2(X0,X1)) [ennf transformation 120]
207. ! [X0,X1,X2,X3,X4] : ((from_2(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_2(X0,X1,X2,X3,X4))) [nnf transformation 1]
208. ! [X0,X1] : ((where_3(X0,X1) | (gt(X0,X1) | lt(X0,X1))) & ((~gt(X0,X1) & ~lt(X0,X1)) | ~where_3(X0,X1))) [nnf transformation 2]
209. ! [X0,X1] : ((where_3(X0,X1) | gt(X0,X1) | lt(X0,X1)) & ((~gt(X0,X1) & ~lt(X0,X1)) | ~where_3(X0,X1))) [flattening 208]
210. ! [X0,X1] : ((select_1(X0,X1) | ! [X2,X3,X4] : (~where_3(X0,X1) | ~from_2(X0,X1,X2,X3,X4))) & (? [X2,X3,X4] : (where_3(X0,X1) & from_2(X0,X1,X2,X3,X4)) | ~select_1(X0,X1))) [nnf transformation 3]
211. ! [X0,X1] : ((select_1(X0,X1) | ! [X2,X3,X4] : (~where_3(X0,X1) | ~from_2(X0,X1,X2,X3,X4))) & (? [X5,X6,X7] : (where_3(X0,X1) & from_2(X0,X1,X5,X6,X7)) | ~select_1(X0,X1))) [rectify 210]
212. ! [X1,X0] : (? [X5,X6,X7] : (where_3(X0,X1) & from_2(X0,X1,X5,X6,X7)) => (where_3(X0,X1) & from_2(X0,X1,sK0(X0,X1),sK1(X0,X1),sK2(X0,X1)))) [choice axiom]
213. ! [X0,X1] : ((select_1(X0,X1) | ! [X2,X3,X4] : (~where_3(X0,X1) | ~from_2(X0,X1,X2,X3,X4))) & ((where_3(X0,X1) & from_2(X0,X1,sK0(X0,X1),sK1(X0,X1),sK2(X0,X1))) | ~select_1(X0,X1))) [skolemisation 211,212]
214. ! [X0,X1] : ((main_query_1(X0,X1) | ~select_1(X0,X1)) & (select_1(X0,X1) | ~main_query_1(X0,X1))) [nnf transformation 65]
215. ! [X0,X1,X2,X3,X4] : ((from_5(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_5(X0,X1,X2,X3,X4))) [nnf transformation 5]
216. ! [X0,X1,X2,X3,X4] : ((from_9(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_9(X0,X1,X2,X3,X4))) [nnf transformation 6]
217. ! [X0] : ((select_8(X0) | ! [X1,X2,X3,X4] : ~from_9(X0,X1,X2,X3,X4)) & (? [X1,X2,X3,X4] : from_9(X0,X1,X2,X3,X4) | ~select_8(X0))) [nnf transformation 66]
218. ! [X0] : ((select_8(X0) | ! [X1,X2,X3,X4] : ~from_9(X0,X1,X2,X3,X4)) & (? [X5,X6,X7,X8] : from_9(X0,X5,X6,X7,X8) | ~select_8(X0))) [rectify 217]
219. ! [X0] : (? [X5,X6,X7,X8] : from_9(X0,X5,X6,X7,X8) => from_9(X0,sK3(X0),sK4(X0),sK5(X0),sK6(X0))) [choice axiom]
220. ! [X0] : ((select_8(X0) | ! [X1,X2,X3,X4] : ~from_9(X0,X1,X2,X3,X4)) & (from_9(X0,sK3(X0),sK4(X0),sK5(X0),sK6(X0)) | ~select_8(X0))) [skolemisation 218,219]
221. ! [X0] : ((where_6_subquery_7(X0) | ~select_8(X0)) & (select_8(X0) | ~where_6_subquery_7(X0))) [nnf transformation 67]
222. ! [X0,X1] : ((where_6(X0,X1) | (~where_6_subquery_7(X0) | ~eq(X0,X1))) & ((where_6_subquery_7(X0) & eq(X0,X1)) | ~where_6(X0,X1))) [nnf transformation 9]
223. ! [X0,X1] : ((where_6(X0,X1) | ~where_6_subquery_7(X0) | ~eq(X0,X1)) & ((where_6_subquery_7(X0) & eq(X0,X1)) | ~where_6(X0,X1))) [flattening 222]
224. ! [X0,X1] : ((select_4(X0,X1) | ! [X2,X3,X4] : (~where_6(X0,X1) | ~from_5(X0,X1,X2,X3,X4))) & (? [X2,X3,X4] : (where_6(X0,X1) & from_5(X0,X1,X2,X3,X4)) | ~select_4(X0,X1))) [nnf transformation 10]
225. ! [X0,X1] : ((select_4(X0,X1) | ! [X2,X3,X4] : (~where_6(X0,X1) | ~from_5(X0,X1,X2,X3,X4))) & (? [X5,X6,X7] : (where_6(X0,X1) & from_5(X0,X1,X5,X6,X7)) | ~select_4(X0,X1))) [rectify 224]
226. ! [X1,X0] : (? [X5,X6,X7] : (where_6(X0,X1) & from_5(X0,X1,X5,X6,X7)) => (where_6(X0,X1) & from_5(X0,X1,sK7(X0,X1),sK8(X0,X1),sK9(X0,X1)))) [choice axiom]
227. ! [X0,X1] : ((select_4(X0,X1) | ! [X2,X3,X4] : (~where_6(X0,X1) | ~from_5(X0,X1,X2,X3,X4))) & ((where_6(X0,X1) & from_5(X0,X1,sK7(X0,X1),sK8(X0,X1),sK9(X0,X1))) | ~select_4(X0,X1))) [skolemisation 225,226]
228. ! [X0,X1] : ((main_query_2(X0,X1) | ~select_4(X0,X1)) & (select_4(X0,X1) | ~main_query_2(X0,X1))) [nnf transformation 68]
229. ! [X0,X1] : (((lte(X1,X0) & lte(X0,X1)) | ~eq(X0,X1)) & (eq(X0,X1) | (~lte(X1,X0) | ~lte(X0,X1)))) [nnf transformation 73]
230. ! [X0,X1] : (((lte(X1,X0) & lte(X0,X1)) | ~eq(X0,X1)) & (eq(X0,X1) | ~lte(X1,X0) | ~lte(X0,X1))) [flattening 229]
231. ! [X0,X1] : ((lt(X0,X1) | (eq(X0,X1) | ~lte(X0,X1))) & ((~eq(X0,X1) & lte(X0,X1)) | ~lt(X0,X1))) [nnf transformation 76]
232. ! [X0,X1] : ((lt(X0,X1) | eq(X0,X1) | ~lte(X0,X1)) & ((~eq(X0,X1) & lte(X0,X1)) | ~lt(X0,X1))) [flattening 231]
233. ! [X0,X1] : ((gt(X0,X1) | ~lt(X1,X0)) & (lt(X1,X0) | ~gt(X0,X1))) [nnf transformation 77]
234. ? [X0,X1] : ((~main_query_2(X0,X1) | ~main_query_1(X0,X1)) & (main_query_2(X0,X1) | main_query_1(X0,X1))) [nnf transformation 206]
235. ? [X0,X1] : ((~main_query_2(X0,X1) | ~main_query_1(X0,X1)) & (main_query_2(X0,X1) | main_query_1(X0,X1))) => ((~main_query_2(sK10,sK11) | ~main_query_1(sK10,sK11)) & (main_query_2(sK10,sK11) | main_query_1(sK10,sK11))) [choice axiom]
236. (~main_query_2(sK10,sK11) | ~main_query_1(sK10,sK11)) & (main_query_2(sK10,sK11) | main_query_1(sK10,sK11)) [skolemisation 234,235]
237. ~from_2(X0,X1,X2,X3,X4) | tab1(X0,X1,X2,X3,X4) [cnf transformation 207]
238. ~tab1(X0,X1,X2,X3,X4) | from_2(X0,X1,X2,X3,X4) [cnf transformation 207]
239. ~lt(X0,X1) | ~where_3(X0,X1) [cnf transformation 209]
240. ~gt(X0,X1) | ~where_3(X0,X1) [cnf transformation 209]
241. gt(X0,X1) | where_3(X0,X1) | lt(X0,X1) [cnf transformation 209]
242. from_2(X0,X1,sK0(X0,X1),sK1(X0,X1),sK2(X0,X1)) | ~select_1(X0,X1) [cnf transformation 213]
243. ~select_1(X0,X1) | where_3(X0,X1) [cnf transformation 213]
244. ~from_2(X0,X1,X2,X3,X4) | ~where_3(X0,X1) | select_1(X0,X1) [cnf transformation 213]
245. ~main_query_1(X0,X1) | select_1(X0,X1) [cnf transformation 214]
246. ~select_1(X0,X1) | main_query_1(X0,X1) [cnf transformation 214]
247. ~from_5(X0,X1,X2,X3,X4) | tab1(X0,X1,X2,X3,X4) [cnf transformation 215]
248. ~tab1(X0,X1,X2,X3,X4) | from_5(X0,X1,X2,X3,X4) [cnf transformation 215]
250. ~tab1(X0,X1,X2,X3,X4) | from_9(X0,X1,X2,X3,X4) [cnf transformation 216]
252. ~from_9(X0,X1,X2,X3,X4) | select_8(X0) [cnf transformation 220]
254. ~select_8(X0) | where_6_subquery_7(X0) [cnf transformation 221]
255. ~where_6(X0,X1) | eq(X0,X1) [cnf transformation 223]
257. ~eq(X0,X1) | ~where_6_subquery_7(X0) | where_6(X0,X1) [cnf transformation 223]
258. from_5(X0,X1,sK7(X0,X1),sK8(X0,X1),sK9(X0,X1)) | ~select_4(X0,X1) [cnf transformation 227]
259. ~select_4(X0,X1) | where_6(X0,X1) [cnf transformation 227]
260. ~from_5(X0,X1,X2,X3,X4) | ~where_6(X0,X1) | select_4(X0,X1) [cnf transformation 227]
261. ~main_query_2(X0,X1) | select_4(X0,X1) [cnf transformation 228]
262. ~select_4(X0,X1) | main_query_2(X0,X1) [cnf transformation 228]
264. ~eq(X0,X1) | eq(X1,X0) [cnf transformation 121]
269. ~eq(X0,X1) | lte(X1,X0) [cnf transformation 230]
270. ~lte(X1,X2) | lte(X0,X2) | ~lte(X0,X1) [cnf transformation 125]
271. lte(X1,X0) | lte(X0,X1) [cnf transformation 75]
273. ~eq(X0,X1) | ~lt(X0,X1) [cnf transformation 232]
274. ~lte(X0,X1) | eq(X0,X1) | lt(X0,X1) [cnf transformation 232]
275. ~gt(X0,X1) | lt(X1,X0) [cnf transformation 233]
276. ~lt(X1,X0) | gt(X0,X1) [cnf transformation 233]
317. main_query_2(sK10,sK11) | main_query_1(sK10,sK11) [cnf transformation 236]
318. ~main_query_2(sK10,sK11) | ~main_query_1(sK10,sK11) [cnf transformation 236]
320. 0 <=> main_query_1(sK10,sK11) [avatar definition]
321. main_query_1(sK10,sK11) <- {0} [avatar component clause 320]
323. 1 <=> ~main_query_1(sK10,sK11) [avatar definition]
324. ~main_query_1(sK10,sK11) <- {1} [avatar component clause 323]
326. 2 <=> main_query_2(sK10,sK11) [avatar definition]
327. main_query_2(sK10,sK11) <- {2} [avatar component clause 326]
329. 3 <=> ~main_query_2(sK10,sK11) [avatar definition]
330. ~main_query_2(sK10,sK11) <- {3} [avatar component clause 329]
331. ~1 | ~3 [avatar split clause 318,329,323]
332. 0 | 2 [avatar split clause 317,326,320]
369. lt(X1,X0) | lt(X0,X1) | where_3(X0,X1) [resolution 241,275]
384. ~lte(X2,X4) | lte(X2,X3) | lte(X3,X4) [resolution 270,271]
391. eq(X1,X2) | lt(X1,X2) | lte(X2,X1) [resolution 274,271]
395. lte(X2,X1) | lt(X1,X2) [subsumption resolution 391,269]
397. ~lte(X4,X3) | lte(X4,X2) | lt(X2,X3) [resolution 395,270]
420. gt(X0,X1) | where_3(X1,X0) | lt(X0,X1) [resolution 369,276]
427. lte(X2,X3) | lte(X3,X4) | lt(X4,X2) [resolution 384,395]
451. 9 <=> ~lt(sK11,sK10) [avatar definition]
452. ~lt(sK11,sK10) <- {9} [avatar component clause 451]
454. 8 <=> lt(sK11,sK10) [avatar definition]
455. lt(sK11,sK10) <- {8} [avatar component clause 454]
460. 10 <=> where_3(sK11,sK10) [avatar definition]
461. where_3(sK11,sK10) <- {10} [avatar component clause 460]
465. select_4(sK10,sK11) <- {2} [resolution 327,261]
469. where_6(sK10,sK11) <- {2} [resolution 465,259]
470. eq(sK10,sK11) <- {2} [resolution 469,255]
475. eq(sK11,sK10) <- {2} [resolution 470,264]
495. ~lt(sK11,sK10) <- {2} [resolution 475,273]
504. ~9 | ~2 [avatar split clause 495,326,451]
506. lt(sK10,sK11) | where_3(sK10,sK11) <- {9} [resolution 452,369]
511. tab1(X2,X3,sK0(X2,X3),sK1(X2,X3),sK2(X2,X3)) | ~select_1(X2,X3) [resolution 242,237]
514. tab1(X2,X3,sK7(X2,X3),sK8(X2,X3),sK9(X2,X3)) | ~select_4(X2,X3) [resolution 258,247]
537. 13 <=> ~lt(sK10,sK11) [avatar definition]
538. ~lt(sK10,sK11) <- {13} [avatar component clause 537]
540. 12 <=> lt(sK10,sK11) [avatar definition]
541. lt(sK10,sK11) <- {12} [avatar component clause 540]
546. 14 <=> where_3(sK10,sK11) [avatar definition]
547. where_3(sK10,sK11) <- {14} [avatar component clause 546]
549. 14 | 12 | 9 [avatar split clause 506,451,540,546]
550. select_1(sK10,sK11) <- {0} [resolution 321,245]
553. where_3(sK10,sK11) <- {0} [resolution 550,243]
554. 14 | ~0 [avatar split clause 553,320,546]
558. select_4(sK10,sK11) <- {2} [resolution 327,261]
563. where_6(sK10,sK11) <- {2} [resolution 558,259]
564. eq(sK10,sK11) <- {2} [resolution 563,255]
573. ~lt(sK10,sK11) <- {2} [resolution 564,273]
582. $false <- {2, 12} [subsumption resolution 573,541]
583. ~2 | ~12 [avatar contradiction clause 582]
584. select_1(sK10,sK11) <- {0} [resolution 321,245]
589. ~where_3(sK10,sK11) <- {12} [resolution 541,239]
590. $false <- {12, 14} [subsumption resolution 589,547]
591. ~12 | ~14 [avatar contradiction clause 590]
631. 16 <=> where_6(sK10,sK11) [avatar definition]
632. where_6(sK10,sK11) <- {16} [avatar component clause 631]
634. 18 <=> where_6_subquery_7(sK10) [avatar definition]
637. 19 <=> ~where_6_subquery_7(sK10) [avatar definition]
665. where_3(X2,X3) | lt(X3,X2) | ~where_3(X3,X2) [resolution 420,240]
666. ~where_3(X3,X2) | where_3(X2,X3) [subsumption resolution 665,239]
670. where_3(sK11,sK10) <- {14} [resolution 666,547]
693. lte(sK10,X11) | lte(X11,sK11) <- {9} [resolution 427,452]
697. from_5(X2,X3,sK0(X2,X3),sK1(X2,X3),sK2(X2,X3)) | ~select_1(X2,X3) [resolution 511,248]
698. from_9(X4,X5,sK0(X4,X5),sK1(X4,X5),sK2(X4,X5)) | ~select_1(X4,X5) [resolution 511,250]
704. lte(X0,sK11) | lte(sK10,X1) | lt(X1,X0) <- {9} [resolution 693,397]
714. from_2(X0,X1,sK7(X0,X1),sK8(X0,X1),sK9(X0,X1)) | ~select_4(X0,X1) [resolution 514,238]
1026. lte(sK10,sK11) | lte(sK10,sK11) <- {9} [resolution 704,452]
1029. lte(sK10,sK11) <- {9} [duplicate literal removal 1026]
1040. eq(sK10,sK11) | lt(sK10,sK11) <- {9} [resolution 1029,274]
1043. eq(sK10,sK11) <- {9, 13} [subsumption resolution 1040,538]
1054. 22 <=> eq(sK11,sK10) [avatar definition]
1055. eq(sK11,sK10) <- {22} [avatar component clause 1054]
1066. eq(sK11,sK10) <- {9, 13} [resolution 1043,264]
1080. 22 | 9 | 13 [avatar split clause 1066,537,451,1054]
1084. ~where_6(X2,X3) | ~select_1(X2,X3) | select_4(X2,X3) [resolution 697,260]
1092. ~where_3(sK11,sK10) <- {8} [resolution 455,239]
1095. $false <- {8, 10} [subsumption resolution 1092,461]
1096. ~8 | ~10 [avatar contradiction clause 1095]
1098. ~select_1(X2,X3) | select_8(X2) [resolution 698,252]
1112. ~select_4(X2,X3) | ~where_3(X2,X3) | select_1(X2,X3) [resolution 714,244]
1133. 26 <=> eq(sK10,sK11) [avatar definition]
1134. eq(sK10,sK11) <- {26} [avatar component clause 1133]
1144. eq(sK10,sK11) <- {22} [resolution 1055,264]
1161. 26 | ~22 [avatar split clause 1144,1054,1133]
1169. 28 <=> select_8(sK10) [avatar definition]
1170. select_8(sK10) <- {28} [avatar component clause 1169]
1218. ~where_6_subquery_7(sK10) | where_6(sK10,sK11) <- {26} [resolution 1134,257]
1251. select_8(sK10) <- {0} [resolution 1098,584]
1254. 28 | ~0 [avatar split clause 1251,320,1169]
1264. where_6_subquery_7(sK10) <- {28} [resolution 1170,254]
1267. 18 | ~28 [avatar split clause 1264,1169,634]
1268. 16 | ~19 | ~26 [avatar split clause 1218,1133,637,631]
1648. ~select_1(sK10,sK11) | select_4(sK10,sK11) <- {16} [resolution 1084,632]
1652. select_4(sK10,sK11) <- {0, 16} [subsumption resolution 1648,584]
1681. main_query_2(sK10,sK11) <- {0, 16} [resolution 1652,262]
1687. $false <- {0, 3, 16} [subsumption resolution 1681,330]
1688. ~0 | 3 | ~16 [avatar contradiction clause 1687]
1689. 10 | ~14 [avatar split clause 670,546,460]
1697. select_4(sK10,sK11) <- {2} [resolution 327,261]
1861. ~where_3(sK10,sK11) | select_1(sK10,sK11) <- {2} [resolution 1112,1697]
1866. select_1(sK10,sK11) <- {2, 14} [subsumption resolution 1861,547]
1870. main_query_1(sK10,sK11) <- {2, 14} [resolution 1866,246]
1872. $false <- {1, 2, 14} [subsumption resolution 1870,324]
1873. 1 | ~2 | ~14 [avatar contradiction clause 1872]
1874. $false [avatar sat refutation 331,332,504,549,554,583,591,1080,1096,1161,1254,1267,1268,1688,1689,1873]
% SZS output end Proof for query13_query14_tptp4X
% ------------------------------
% Version: Vampire 4.2.2 (commit e1949dd on 2017-12-14 18:39:21 +0000)
% Termination reason: Refutation

% Memory used [KB]: 5628
% Time elapsed: 0.039 s
% ------------------------------
% ------------------------------
