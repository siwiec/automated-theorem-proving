select alias.col11
from 
    (select col11, col12 from tab1 where col11 = col12) as alias
select alias.colalias
from 
    (select col11 as colalias, col12 from tab1 where col11 = col12) as alias
Translating query21.sql...
subquery {'value': {'select': [{'value': 'col11'}, {'value': 'col12'}], 'from': 'tab1', 'where': {'eq': ['col11', 'col12']}}, 'name': 'alias'}
subquery tab1
fof(from_4, definition, ( ! [TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (from_4(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) <=> (tab1(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) )))).
WHERE STATEMENT {'eq': ['col11', 'col12']}
fof(where_5, definition, ( ! [COL11, COL12] : (where_5(COL11, COL12) <=> (eq(COL11, COL12))))).
fof(select_3, definition, ( ! [COL11, COL12] : (select_3(COL11, COL12) <=> ( ? [TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (from_4(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) & where_5(COL11, COL12)))))).
fof(query_2, definition, ( ! [COL11, COL12] : (query_2(COL11, COL12) <=> (select_3(COL11, COL12))))).
fof(from_6, definition, ( ! [ALIAS_COL11, ALIAS_COL12] : (from_6(ALIAS_COL11, ALIAS_COL12) <=> (query_2(ALIAS_COL11, ALIAS_COL12) )))).
fof(select_1, definition, ( ! [ALIAS_COL11] : (select_1(ALIAS_COL11) <=> ( ? [ALIAS_COL12] : (from_6(ALIAS_COL11, ALIAS_COL12) & $true))))).
fof(main_query_1, definition, ( ! [COL11] : (main_query_1(COL11) <=> (select_1(COL11))))).
Translating query22.sql...
subquery {'value': {'select': [{'value': 'col11', 'name': 'colalias'}, {'value': 'col12'}], 'from': 'tab1', 'where': {'eq': ['col11', 'col12']}}, 'name': 'alias'}
subquery tab1
fof(from_10, definition, ( ! [TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (from_10(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) <=> (tab1(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) )))).
WHERE STATEMENT {'eq': ['col11', 'col12']}
fof(where_11, definition, ( ! [COL11, COL12] : (where_11(COL11, COL12) <=> (eq(COL11, COL12))))).
fof(select_9, definition, ( ! [COL11, COL12] : (select_9(COL11, COL12) <=> ( ? [TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (from_10(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) & where_11(COL11, COL12)))))).
fof(query_8, definition, ( ! [COLALIAS, COL12, COL11] : (query_8(COLALIAS, COL12, COL11) <=> (select_9(COLALIAS, COL12, COL11))))).
fof(from_12, definition, ( ! [ALIAS_COLALIAS, ALIAS_COL12, ALIAS_COL11] : (from_12(ALIAS_COLALIAS, ALIAS_COL12, ALIAS_COL11) <=> (query_8(ALIAS_COLALIAS, ALIAS_COL12, ALIAS_COL11) )))).
fof(select_7, definition, ( ! [ALIAS_COLALIAS] : (select_7(ALIAS_COLALIAS) <=> ( ? [ALIAS_COL12, ALIAS_COL11] : (from_12(ALIAS_COLALIAS, ALIAS_COL12, ALIAS_COL11) & $true))))).
fof(main_query_2, definition, ( ! [COLALIAS] : (main_query_2(COLALIAS) <=> (select_7(COLALIAS))))).

fof(reflexivity_of_equality, axiom, ( ! [X] : eq(X, X) )).
fof(symmetry_of_equality, axiom, ( ! [X,Y] : ( eq(X, Y) => eq (Y, X) ) )).
fof(transitivity_of_equality, axiom, ( ! [X,Y,Z] : ( ( eq(X, Y) & eq(Y, Z) ) => eq(X, Z) ) )).
fof(reflexivity_of_less_than_or_equal, axiom, ( ! [X] : lte(X,X) )).
fof(antisymmetry_of_less_than_or_equal, axiom, ( ! [X,Y] : ( ( lte(X,Y) & lte(Y,X) ) <=> eq(X, Y) ) )).
fof(transitivity_of_less_than_or_equal, axiom, ( ! [X,Y,Z] : ( ( lte(X,Y) & lte(Y,Z) ) => lte(X,Z) ) )).
fof(less_than_definition, definition, ( ! [X,Y] : ( ( lt(X,Y) ) <=> ( lte(X,Y) & (~ eq(X,Y))) ) )).
fof(greater_than_definition, definition, ( ! [X,Y] : ( ( gt(X,Y) ) <=>  ( lt(Y,X)) ) )).
fof(not_equal_definition, definition, ( ! [X,Y] : ( ( neq(X,Y) ) <=> (~ eq(X,Y)) ) )).
fof(greater_than_or_equal_definition, definition, ( ! [X,Y] : ( ( gte(X,Y) ) <=> (lte(Y,X))) )).
fof(substitution_select_3_COL11, axiom, ( ! [X, COL11, COL12] : (( COL11 = X & select_3(COL11, COL12)) => select_3(X, COL12)))).
fof(substitution_select_3_COL12, axiom, ( ! [X, COL11, COL12] : (( COL12 = X & select_3(COL11, COL12)) => select_3(COL11, X)))).
fof(substitution_from_6_ALIAS_COL11, axiom, ( ! [X, ALIAS_COL11, ALIAS_COL12] : (( ALIAS_COL11 = X & from_6(ALIAS_COL11, ALIAS_COL12)) => from_6(X, ALIAS_COL12)))).
fof(substitution_from_6_ALIAS_COL12, axiom, ( ! [X, ALIAS_COL11, ALIAS_COL12] : (( ALIAS_COL12 = X & from_6(ALIAS_COL11, ALIAS_COL12)) => from_6(ALIAS_COL11, X)))).
fof(substitution_tab2_COL21, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( COL21 = X & tab2(COL21, COL22, COL23, COL24, COL25)) => tab2(X, COL22, COL23, COL24, COL25)))).
fof(substitution_tab2_COL22, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( COL22 = X & tab2(COL21, COL22, COL23, COL24, COL25)) => tab2(COL21, X, COL23, COL24, COL25)))).
fof(substitution_tab2_COL23, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( COL23 = X & tab2(COL21, COL22, COL23, COL24, COL25)) => tab2(COL21, COL22, X, COL24, COL25)))).
fof(substitution_tab2_COL24, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( COL24 = X & tab2(COL21, COL22, COL23, COL24, COL25)) => tab2(COL21, COL22, COL23, X, COL25)))).
fof(substitution_tab2_COL25, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( COL25 = X & tab2(COL21, COL22, COL23, COL24, COL25)) => tab2(COL21, COL22, COL23, COL24, X)))).
fof(substitution_from_4_TAB1_COL11, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( TAB1_COL11 = X & from_4(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_4(X, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_4_TAB1_COL12, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( TAB1_COL12 = X & from_4(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_4(TAB1_COL11, X, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_4_TAB1_COL13, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( TAB1_COL13 = X & from_4(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_4(TAB1_COL11, TAB1_COL12, X, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_4_TAB1_COL14, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( TAB1_COL14 = X & from_4(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_4(TAB1_COL11, TAB1_COL12, TAB1_COL13, X, TAB1_COL15)))).
fof(substitution_from_4_TAB1_COL15, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( TAB1_COL15 = X & from_4(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_4(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, X)))).
fof(substitution_tab1_COL11, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( COL11 = X & tab1(COL11, COL12, COL13, COL14, COL15)) => tab1(X, COL12, COL13, COL14, COL15)))).
fof(substitution_tab1_COL12, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( COL12 = X & tab1(COL11, COL12, COL13, COL14, COL15)) => tab1(COL11, X, COL13, COL14, COL15)))).
fof(substitution_tab1_COL13, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( COL13 = X & tab1(COL11, COL12, COL13, COL14, COL15)) => tab1(COL11, COL12, X, COL14, COL15)))).
fof(substitution_tab1_COL14, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( COL14 = X & tab1(COL11, COL12, COL13, COL14, COL15)) => tab1(COL11, COL12, COL13, X, COL15)))).
fof(substitution_tab1_COL15, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( COL15 = X & tab1(COL11, COL12, COL13, COL14, COL15)) => tab1(COL11, COL12, COL13, COL14, X)))).
fof(substitution_query_2_COL11, axiom, ( ! [X, COL11, COL12] : (( COL11 = X & query_2(COL11, COL12)) => query_2(X, COL12)))).
fof(substitution_query_2_COL12, axiom, ( ! [X, COL11, COL12] : (( COL12 = X & query_2(COL11, COL12)) => query_2(COL11, X)))).
fof(substitution_query_8_COLALIAS, axiom, ( ! [X, COLALIAS, COL12, COL11] : (( COLALIAS = X & query_8(COLALIAS, COL12, COL11)) => query_8(X, COL12, COL11)))).
fof(substitution_query_8_COL12, axiom, ( ! [X, COLALIAS, COL12, COL11] : (( COL12 = X & query_8(COLALIAS, COL12, COL11)) => query_8(COLALIAS, X, COL11)))).
fof(substitution_query_8_COL11, axiom, ( ! [X, COLALIAS, COL12, COL11] : (( COL11 = X & query_8(COLALIAS, COL12, COL11)) => query_8(COLALIAS, COL12, X)))).
fof(substitution_where_11_COL11, axiom, ( ! [X, COL11, COL12] : (( COL11 = X & where_11(COL11, COL12)) => where_11(X, COL12)))).
fof(substitution_where_11_COL12, axiom, ( ! [X, COL11, COL12] : (( COL12 = X & where_11(COL11, COL12)) => where_11(COL11, X)))).
fof(substitution_tab_FST, axiom, ( ! [X, FST, SND, TRD] : (( FST = X & tab(FST, SND, TRD)) => tab(X, SND, TRD)))).
fof(substitution_tab_SND, axiom, ( ! [X, FST, SND, TRD] : (( SND = X & tab(FST, SND, TRD)) => tab(FST, X, TRD)))).
fof(substitution_tab_TRD, axiom, ( ! [X, FST, SND, TRD] : (( TRD = X & tab(FST, SND, TRD)) => tab(FST, SND, X)))).
fof(substitution_from_10_TAB1_COL11, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( TAB1_COL11 = X & from_10(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_10(X, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_10_TAB1_COL12, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( TAB1_COL12 = X & from_10(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_10(TAB1_COL11, X, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_10_TAB1_COL13, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( TAB1_COL13 = X & from_10(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_10(TAB1_COL11, TAB1_COL12, X, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_10_TAB1_COL14, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( TAB1_COL14 = X & from_10(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_10(TAB1_COL11, TAB1_COL12, TAB1_COL13, X, TAB1_COL15)))).
fof(substitution_from_10_TAB1_COL15, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( TAB1_COL15 = X & from_10(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_10(TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, X)))).
fof(substitution_from_12_ALIAS_COLALIAS, axiom, ( ! [X, ALIAS_COLALIAS, ALIAS_COL12, ALIAS_COL11] : (( ALIAS_COLALIAS = X & from_12(ALIAS_COLALIAS, ALIAS_COL12, ALIAS_COL11)) => from_12(X, ALIAS_COL12, ALIAS_COL11)))).
fof(substitution_from_12_ALIAS_COL12, axiom, ( ! [X, ALIAS_COLALIAS, ALIAS_COL12, ALIAS_COL11] : (( ALIAS_COL12 = X & from_12(ALIAS_COLALIAS, ALIAS_COL12, ALIAS_COL11)) => from_12(ALIAS_COLALIAS, X, ALIAS_COL11)))).
fof(substitution_from_12_ALIAS_COL11, axiom, ( ! [X, ALIAS_COLALIAS, ALIAS_COL12, ALIAS_COL11] : (( ALIAS_COL11 = X & from_12(ALIAS_COLALIAS, ALIAS_COL12, ALIAS_COL11)) => from_12(ALIAS_COLALIAS, ALIAS_COL12, X)))).
fof(substitution_select_9_COLALIAS, axiom, ( ! [X, COLALIAS, COL12, COL11] : (( COLALIAS = X & select_9(COLALIAS, COL12, COL11)) => select_9(X, COL12, COL11)))).
fof(substitution_select_9_COL12, axiom, ( ! [X, COLALIAS, COL12, COL11] : (( COL12 = X & select_9(COLALIAS, COL12, COL11)) => select_9(COLALIAS, X, COL11)))).
fof(substitution_select_9_COL11, axiom, ( ! [X, COLALIAS, COL12, COL11] : (( COL11 = X & select_9(COLALIAS, COL12, COL11)) => select_9(COLALIAS, COL12, X)))).
fof(substitution_where_5_COL11, axiom, ( ! [X, COL11, COL12] : (( COL11 = X & where_5(COL11, COL12)) => where_5(X, COL12)))).
fof(substitution_where_5_COL12, axiom, ( ! [X, COL11, COL12] : (( COL12 = X & where_5(COL11, COL12)) => where_5(COL11, X)))).

fof(equivalence_check, conjecture, ( ! [ COL11 ] : ( main_query_1(COL11) <=> main_query_2(COL11) ) )).

















Columns:
{
    "tab1": [
        "COL11",
        "COL12",
        "COL13",
        "COL14",
        "COL15"
    ],
    "tab2": [
        "COL21",
        "COL22",
        "COL23",
        "COL24",
        "COL25"
    ],
    "tab": [
        "FST",
        "SND",
        "TRD"
    ],
    "from_4": [
        "TAB1_COL11",
        "TAB1_COL12",
        "TAB1_COL13",
        "TAB1_COL14",
        "TAB1_COL15"
    ],
    "where_5": [
        "COL11",
        "COL12"
    ],
    "select_3": [
        "COL11",
        "COL12"
    ],
    "query_2": [
        "COL11",
        "COL12"
    ],
    "from_6": [
        "ALIAS_COL11",
        "ALIAS_COL12"
    ],
    "select_1": [
        "COL11"
    ],
    "main_query_1": [
        "COL11"
    ],
    "from_10": [
        "TAB1_COL11",
        "TAB1_COL12",
        "TAB1_COL13",
        "TAB1_COL14",
        "TAB1_COL15"
    ],
    "where_11": [
        "COL11",
        "COL12"
    ],
    "select_9": [
        "COLALIAS",
        "COL12"
    ],
    "query_8": [
        "COLALIAS",
        "COL12",
        "COL11"
    ],
    "from_12": [
        "ALIAS_COLALIAS",
        "ALIAS_COL12",
        "ALIAS_COL11"
    ],
    "select_7": [
        "COLALIAS"
    ],
    "main_query_2": [
        "COLALIAS"
    ]
}
External:
{
    "select_3": [],
    "select_1": [],
    "select_9": [
        "COL11"
    ],
    "select_7": []
}
Exiting with code: 0
eprover: output/query21_query22_tptp4X.tptp:220:(Column 9):select_9 used with arity 3, but registered with arity 2
