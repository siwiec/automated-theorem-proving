{
    "tab1": [
        "col11",
        "col12",
        "col13",
        "col14",
        "col15"
    ],
    "tab2": [
        "col21",
        "col22",
        "col23",
        "col24",
        "col25"
    ]
}

{
    "tab1": [
        "col11",
        "col12",
        "col13",
        "col14",
        "col15"
    ],
    "tab2": [
        "col21",
        "col22",
        "col23",
        "col24",
        "col25"
    ]
}
for tab1 ['col11', 'col12', 'col13', 'col14', 'col15']
Setting columns: tab1 ['col11', 'col12', 'col13', 'col14', 'col15']
for tab2 ['col21', 'col22', 'col23', 'col24', 'col25']
Setting columns: tab2 ['col21', 'col22', 'col23', 'col24', 'col25']
Translating query_04.sql...
select tabalias1.col11 as alias11
from tab1 as tabalias1


{
    "select": {
        "value": "tabalias1.col11",
        "name": "alias11"
    },
    "from": {
        "value": "tab1",
        "name": "tabalias1"
    }
}
subquery {'value': 'tab1', 'name': 'tabalias1'}
all new variables ['ALIAS11', 'TABALIAS1_COL12', 'TABALIAS1_COL13', 'TABALIAS1_COL14', 'TABALIAS1_COL15']
Setting columns: from_2 ['ALIAS11', 'TABALIAS1_COL12', 'TABALIAS1_COL13', 'TABALIAS1_COL14', 'TABALIAS1_COL15']
Setting external: from_2 []
fof(from_2, definition, ( ! [ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] : (from_2 ( ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15) <=> ( ( tab1 ( ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)) )))).
Setting columns: select_1 ['ALIAS11']
Setting external: select_1 []
fof(select_1, definition, ( ! [ALIAS11] : (select_1 ( ALIAS11) <=> ( ? [TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] :  ( from_2 ( ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15 )  & $true )  )  ) )).
Setting columns: main_query_1 ['ALIAS11']
Setting external: main_query_1 []
fof(main_query_1, definition, ( ! [ALIAS11] : (main_query_1 ( ALIAS11) <=> (select_1 ( ALIAS11))))).
Translating query_12.sql...
select tabalias1.col11,
tabalias1.col12
from tab1 as tabalias1
where tabalias1.col11 = tabalias1.col12


{
    "select": [
        {
            "value": "tabalias1.col11"
        },
        {
            "value": "tabalias1.col12"
        }
    ],
    "from": {
        "value": "tab1",
        "name": "tabalias1"
    },
    "where": {
        "eq": [
            "tabalias1.col11",
            "tabalias1.col12"
        ]
    }
}
subquery {'value': 'tab1', 'name': 'tabalias1'}
all new variables ['TABALIAS1_COL11', 'TABALIAS1_COL12', 'TABALIAS1_COL13', 'TABALIAS1_COL14', 'TABALIAS1_COL15']
Setting columns: from_4 ['TABALIAS1_COL11', 'TABALIAS1_COL12', 'TABALIAS1_COL13', 'TABALIAS1_COL14', 'TABALIAS1_COL15']
Setting external: from_4 []
fof(from_4, definition, ( ! [TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] : (from_4 ( TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15) <=> ( ( tab1 ( TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)) )))).
Setting columns: where_5 ['TABALIAS1_COL11']
Setting columns: where_5 ['TABALIAS1_COL11', 'TABALIAS1_COL12']
fof(where_5, definition, ( ! [TABALIAS1_COL11, TABALIAS1_COL12] : (where_5 ( TABALIAS1_COL11, TABALIAS1_COL12) <=> (eq ( TABALIAS1_COL11, TABALIAS1_COL12 ) )))).
Setting columns: select_3 ['COL11', 'COL12']
Setting external: select_3 []
fof(select_3, definition, ( ! [TABALIAS1_COL11, TABALIAS1_COL12] : (select_3 ( TABALIAS1_COL11, TABALIAS1_COL12) <=> ( ? [TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] :  ( from_4 ( TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15 )  & where_5 ( TABALIAS1_COL11, TABALIAS1_COL12 )  )  )  ) )).
Setting columns: main_query_2 ['COL11', 'COL12']
Setting external: main_query_2 []
fof(main_query_2, definition, ( ! [COL11, COL12] : (main_query_2 ( COL11, COL12) <=> (select_3 ( COL11, COL12))))).

fof(reflexivity_of_equality, axiom, ( ! [X] : eq(X, X) )).
fof(symmetry_of_equality, axiom, ( ! [X,Y] : ( eq(X, Y) => eq (Y, X) ) )).
fof(transitivity_of_equality, axiom, ( ! [X,Y,Z] : ( ( eq(X, Y) & eq(Y, Z) ) => eq(X, Z) ) )).
fof(reflexivity_of_less_than_or_equal, axiom, ( ! [X] : lte(X,X) )).
fof(antisymmetry_of_less_than_or_equal, axiom, ( ! [X,Y] : ( ( lte(X,Y) & lte(Y,X) ) <=> eq(X, Y) ) )).
fof(transitivity_of_less_than_or_equal, axiom, ( ! [X,Y,Z] : ( ( lte(X,Y) & lte(Y,Z) ) => lte(X,Z) ) )).
fof(strong_connectedness_of_less_than_or_equal, axiom, ( ! [X,Y] : ( lte(X,Y) | lte(Y,X) ) )).
fof(less_than_definition, definition, ( ! [X,Y] : ( ( lt(X,Y) ) <=> ( lte(X,Y) & (~ eq(X,Y))) ) )).
fof(greater_than_definition, definition, ( ! [X,Y] : ( ( gt(X,Y) ) <=>  ( lt(Y,X)) ) )).
fof(not_equal_definition, definition, ( ! [X,Y] : ( ( neq(X,Y) ) <=> (~ eq(X,Y)) ) )).
fof(greater_than_or_equal_definition, definition, ( ! [X,Y] : ( ( gte(X,Y) ) <=> (lte(Y,X))) )).
fof(substitution_tab1_col11, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL11, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( X, COL12, COL13, COL14, COL15)))).
fof(substitution_tab1_col12, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL12, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, X, COL13, COL14, COL15)))).
fof(substitution_tab1_col13, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL13, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, COL12, X, COL14, COL15)))).
fof(substitution_tab1_col14, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL14, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, COL12, COL13, X, COL15)))).
fof(substitution_tab1_col15, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL15, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, COL12, COL13, COL14, X)))).
fof(substitution_from_4_tabalias1_col11, axiom, ( ! [X, TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] : (( eq(TABALIAS1_COL11, X) & from_4 ( TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)) => from_4 ( X, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)))).
fof(substitution_from_4_tabalias1_col12, axiom, ( ! [X, TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] : (( eq(TABALIAS1_COL12, X) & from_4 ( TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)) => from_4 ( TABALIAS1_COL11, X, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)))).
fof(substitution_from_4_tabalias1_col13, axiom, ( ! [X, TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] : (( eq(TABALIAS1_COL13, X) & from_4 ( TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)) => from_4 ( TABALIAS1_COL11, TABALIAS1_COL12, X, TABALIAS1_COL14, TABALIAS1_COL15)))).
fof(substitution_from_4_tabalias1_col14, axiom, ( ! [X, TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] : (( eq(TABALIAS1_COL14, X) & from_4 ( TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)) => from_4 ( TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, X, TABALIAS1_COL15)))).
fof(substitution_from_4_tabalias1_col15, axiom, ( ! [X, TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] : (( eq(TABALIAS1_COL15, X) & from_4 ( TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)) => from_4 ( TABALIAS1_COL11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, X)))).
fof(substitution_where_5_tabalias1_col11, axiom, ( ! [X, TABALIAS1_COL11, TABALIAS1_COL12] : (( eq(TABALIAS1_COL11, X) & where_5 ( TABALIAS1_COL11, TABALIAS1_COL12)) => where_5 ( X, TABALIAS1_COL12)))).
fof(substitution_where_5_tabalias1_col12, axiom, ( ! [X, TABALIAS1_COL11, TABALIAS1_COL12] : (( eq(TABALIAS1_COL12, X) & where_5 ( TABALIAS1_COL11, TABALIAS1_COL12)) => where_5 ( TABALIAS1_COL11, X)))).
fof(substitution_select_3_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & select_3 ( COL11, COL12)) => select_3 ( X, COL12)))).
fof(substitution_select_3_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & select_3 ( COL11, COL12)) => select_3 ( COL11, X)))).
fof(substitution_main_query_2_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & main_query_2 ( COL11, COL12)) => main_query_2 ( X, COL12)))).
fof(substitution_main_query_2_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & main_query_2 ( COL11, COL12)) => main_query_2 ( COL11, X)))).
fof(substitution_from_2_alias11, axiom, ( ! [X, ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] : (( eq(ALIAS11, X) & from_2 ( ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)) => from_2 ( X, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)))).
fof(substitution_from_2_tabalias1_col12, axiom, ( ! [X, ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] : (( eq(TABALIAS1_COL12, X) & from_2 ( ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)) => from_2 ( ALIAS11, X, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)))).
fof(substitution_from_2_tabalias1_col13, axiom, ( ! [X, ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] : (( eq(TABALIAS1_COL13, X) & from_2 ( ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)) => from_2 ( ALIAS11, TABALIAS1_COL12, X, TABALIAS1_COL14, TABALIAS1_COL15)))).
fof(substitution_from_2_tabalias1_col14, axiom, ( ! [X, ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] : (( eq(TABALIAS1_COL14, X) & from_2 ( ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)) => from_2 ( ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, X, TABALIAS1_COL15)))).
fof(substitution_from_2_tabalias1_col15, axiom, ( ! [X, ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15] : (( eq(TABALIAS1_COL15, X) & from_2 ( ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, TABALIAS1_COL15)) => from_2 ( ALIAS11, TABALIAS1_COL12, TABALIAS1_COL13, TABALIAS1_COL14, X)))).
fof(substitution_tab2_col21, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL21, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( X, COL22, COL23, COL24, COL25)))).
fof(substitution_tab2_col22, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL22, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, X, COL23, COL24, COL25)))).
fof(substitution_tab2_col23, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL23, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, COL22, X, COL24, COL25)))).
fof(substitution_tab2_col24, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL24, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, COL22, COL23, X, COL25)))).
fof(substitution_tab2_col25, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL25, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, COL22, COL23, COL24, X)))).

fof(equivalence_check, conjecture, ( $false )).









Columns:
{
    "tab1": [
        "COL11",
        "COL12",
        "COL13",
        "COL14",
        "COL15"
    ],
    "tab2": [
        "COL21",
        "COL22",
        "COL23",
        "COL24",
        "COL25"
    ],
    "from_2": [
        "ALIAS11",
        "TABALIAS1_COL12",
        "TABALIAS1_COL13",
        "TABALIAS1_COL14",
        "TABALIAS1_COL15"
    ],
    "select_1": [
        "ALIAS11"
    ],
    "main_query_1": [
        "ALIAS11"
    ],
    "from_4": [
        "TABALIAS1_COL11",
        "TABALIAS1_COL12",
        "TABALIAS1_COL13",
        "TABALIAS1_COL14",
        "TABALIAS1_COL15"
    ],
    "where_5": [
        "TABALIAS1_COL11",
        "TABALIAS1_COL12"
    ],
    "select_3": [
        "COL11",
        "COL12"
    ],
    "main_query_2": [
        "COL11",
        "COL12"
    ]
}
External:
{
    "from_2": [],
    "select_1": [],
    "main_query_1": [],
    "from_4": [],
    "select_3": [],
    "main_query_2": []
}
Exiting with code: 1
