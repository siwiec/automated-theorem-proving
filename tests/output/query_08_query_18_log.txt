{
    "tab1": [
        "col11",
        "col12",
        "col13",
        "col14",
        "col15"
    ],
    "tab2": [
        "col21",
        "col22",
        "col23",
        "col24",
        "col25"
    ]
}

{
    "tab1": [
        "col11",
        "col12",
        "col13",
        "col14",
        "col15"
    ],
    "tab2": [
        "col21",
        "col22",
        "col23",
        "col24",
        "col25"
    ]
}
for tab1 ['col11', 'col12', 'col13', 'col14', 'col15']
Setting columns: tab1 ['col11', 'col12', 'col13', 'col14', 'col15']
for tab2 ['col21', 'col22', 'col23', 'col24', 'col25']
Setting columns: tab2 ['col21', 'col22', 'col23', 'col24', 'col25']
Translating query_08.sql...
select
    subquery_alias.col11,
    subquery_alias.col12
from
    (
        select
            tab1_alias.col11,
            tab1_alias.col12
        from
            tab1 as tab1_alias
    ) as subquery_alias

{
    "select": [
        {
            "value": "subquery_alias.col11"
        },
        {
            "value": "subquery_alias.col12"
        }
    ],
    "from": {
        "value": {
            "select": [
                {
                    "value": "tab1_alias.col11"
                },
                {
                    "value": "tab1_alias.col12"
                }
            ],
            "from": {
                "value": "tab1",
                "name": "tab1_alias"
            }
        },
        "name": "subquery_alias"
    }
}
subquery {'value': {'select': [{'value': 'tab1_alias.col11'}, {'value': 'tab1_alias.col12'}], 'from': {'value': 'tab1', 'name': 'tab1_alias'}}, 'name': 'subquery_alias'}
subquery {'value': 'tab1', 'name': 'tab1_alias'}
all new variables ['TAB1_ALIAS_COL11', 'TAB1_ALIAS_COL12', 'TAB1_ALIAS_COL13', 'TAB1_ALIAS_COL14', 'TAB1_ALIAS_COL15']
Setting columns: from_5 ['TAB1_ALIAS_COL11', 'TAB1_ALIAS_COL12', 'TAB1_ALIAS_COL13', 'TAB1_ALIAS_COL14', 'TAB1_ALIAS_COL15']
Setting external: from_5 []
fof(from_5, definition, ( ! [TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15] : (from_5 ( TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15) <=> ( ( tab1 ( TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15)) )))).
Setting columns: select_4 ['COL11', 'COL12']
Setting external: select_4 []
fof(select_4, definition, ( ! [TAB1_ALIAS_COL11, TAB1_ALIAS_COL12] : (select_4 ( TAB1_ALIAS_COL11, TAB1_ALIAS_COL12) <=> ( ? [TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15] :  ( from_5 ( TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15 )  & $true )  )  ) )).
Setting columns: subquery_from_3 ['COL11', 'COL12']
Setting external: subquery_from_3 []
fof(subquery_from_3, definition, ( ! [COL11, COL12] : (subquery_from_3 ( COL11, COL12) <=> (select_4 ( COL11, COL12))))).
all new variables ['SUBQUERY_ALIAS_COL11', 'SUBQUERY_ALIAS_COL12']
Setting columns: from_2 ['SUBQUERY_ALIAS_COL11', 'SUBQUERY_ALIAS_COL12']
Setting external: from_2 []
fof(from_2, definition, ( ! [SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12] : (from_2 ( SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12) <=> ( ( subquery_from_3 ( SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12)) )))).
Setting columns: select_1 ['COL11', 'COL12']
Setting external: select_1 []
fof(select_1, definition, ( ! [SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12] : (select_1 ( SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12) <=> ( ( from_2 ( SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12 )  & $true )  )  ) )).
Setting columns: main_query_1 ['COL11', 'COL12']
Setting external: main_query_1 []
fof(main_query_1, definition, ( ! [COL11, COL12] : (main_query_1 ( COL11, COL12) <=> (select_1 ( COL11, COL12))))).
Translating query_18.sql...
select 
    tab1.col12,
    tab2.col22
from
    tab1,
    tab2
where
    tab1.col11 < tab2.col21
{
    "select": [
        {
            "value": "tab1.col12"
        },
        {
            "value": "tab2.col22"
        }
    ],
    "from": [
        "tab1",
        "tab2"
    ],
    "where": {
        "lt": [
            "tab1.col11",
            "tab2.col21"
        ]
    }
}
subquery tab1
table name tab1 table_columns ['COL11', 'COL12', 'COL13', 'COL14', 'COL15']
subquery tab2
table name tab2 table_columns ['COL21', 'COL22', 'COL23', 'COL24', 'COL25']
all new variables ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15', 'TAB2_COL21', 'TAB2_COL22', 'TAB2_COL23', 'TAB2_COL24', 'TAB2_COL25']
Setting columns: from_7 ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15', 'TAB2_COL21', 'TAB2_COL22', 'TAB2_COL23', 'TAB2_COL24', 'TAB2_COL25']
Setting external: from_7 []
fof(from_7, definition, ( ! [TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25] : (from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25) <=> ( ( tab1 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) &  ( tab2 ( TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)) )))).
Setting columns: where_8 ['TAB1_COL11']
Setting columns: where_8 ['TAB1_COL11', 'TAB2_COL21']
fof(where_8, definition, ( ! [TAB1_COL11, TAB2_COL21] : (where_8 ( TAB1_COL11, TAB2_COL21) <=> (lt ( TAB1_COL11, TAB2_COL21 ) )))).
Setting columns: select_6 ['COL12', 'COL22']
Setting external: select_6 []
fof(select_6, definition, ( ! [TAB1_COL12, TAB2_COL22] : (select_6 ( TAB1_COL12, TAB2_COL22) <=> ( ? [TAB1_COL11, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL23, TAB2_COL24, TAB2_COL25] :  ( from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25 )  & where_8 ( TAB1_COL11, TAB2_COL21 )  )  )  ) )).
Setting columns: main_query_2 ['COL12', 'COL22']
Setting external: main_query_2 []
fof(main_query_2, definition, ( ! [COL12, COL22] : (main_query_2 ( COL12, COL22) <=> (select_6 ( COL12, COL22))))).

fof(reflexivity_of_equality, axiom, ( ! [X] : eq(X, X) )).
fof(symmetry_of_equality, axiom, ( ! [X,Y] : ( eq(X, Y) => eq (Y, X) ) )).
fof(transitivity_of_equality, axiom, ( ! [X,Y,Z] : ( ( eq(X, Y) & eq(Y, Z) ) => eq(X, Z) ) )).
fof(reflexivity_of_less_than_or_equal, axiom, ( ! [X] : lte(X,X) )).
fof(antisymmetry_of_less_than_or_equal, axiom, ( ! [X,Y] : ( ( lte(X,Y) & lte(Y,X) ) <=> eq(X, Y) ) )).
fof(transitivity_of_less_than_or_equal, axiom, ( ! [X,Y,Z] : ( ( lte(X,Y) & lte(Y,Z) ) => lte(X,Z) ) )).
fof(less_than_definition, definition, ( ! [X,Y] : ( ( lt(X,Y) ) <=> ( lte(X,Y) & (~ eq(X,Y))) ) )).
fof(greater_than_definition, definition, ( ! [X,Y] : ( ( gt(X,Y) ) <=>  ( lt(Y,X)) ) )).
fof(not_equal_definition, definition, ( ! [X,Y] : ( ( neq(X,Y) ) <=> (~ eq(X,Y)) ) )).
fof(greater_than_or_equal_definition, definition, ( ! [X,Y] : ( ( gte(X,Y) ) <=> (lte(Y,X))) )).
fof(substitution_where_8_tab1_col11, axiom, ( ! [X, TAB1_COL11, TAB2_COL21] : (( eq(TAB1_COL11, X) & where_8 ( TAB1_COL11, TAB2_COL21)) => where_8 ( X, TAB2_COL21)))).
fof(substitution_where_8_tab2_col21, axiom, ( ! [X, TAB1_COL11, TAB2_COL21] : (( eq(TAB2_COL21, X) & where_8 ( TAB1_COL11, TAB2_COL21)) => where_8 ( TAB1_COL11, X)))).
fof(substitution_select_1_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & select_1 ( COL11, COL12)) => select_1 ( X, COL12)))).
fof(substitution_select_1_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & select_1 ( COL11, COL12)) => select_1 ( COL11, X)))).
fof(substitution_main_query_2_col12, axiom, ( ! [X, COL12, COL22] : (( eq(COL12, X) & main_query_2 ( COL12, COL22)) => main_query_2 ( X, COL22)))).
fof(substitution_main_query_2_col22, axiom, ( ! [X, COL12, COL22] : (( eq(COL22, X) & main_query_2 ( COL12, COL22)) => main_query_2 ( COL12, X)))).
fof(substitution_subquery_from_3_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & subquery_from_3 ( COL11, COL12)) => subquery_from_3 ( X, COL12)))).
fof(substitution_subquery_from_3_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & subquery_from_3 ( COL11, COL12)) => subquery_from_3 ( COL11, X)))).
fof(substitution_from_7_tab1_col11, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25] : (( eq(TAB1_COL11, X) & from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)) => from_7 ( X, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)))).
fof(substitution_from_7_tab1_col12, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25] : (( eq(TAB1_COL12, X) & from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)) => from_7 ( TAB1_COL11, X, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)))).
fof(substitution_from_7_tab1_col13, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25] : (( eq(TAB1_COL13, X) & from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)) => from_7 ( TAB1_COL11, TAB1_COL12, X, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)))).
fof(substitution_from_7_tab1_col14, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25] : (( eq(TAB1_COL14, X) & from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)) => from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, X, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)))).
fof(substitution_from_7_tab1_col15, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25] : (( eq(TAB1_COL15, X) & from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)) => from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, X, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)))).
fof(substitution_from_7_tab2_col21, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25] : (( eq(TAB2_COL21, X) & from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)) => from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, X, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)))).
fof(substitution_from_7_tab2_col22, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25] : (( eq(TAB2_COL22, X) & from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)) => from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, X, TAB2_COL23, TAB2_COL24, TAB2_COL25)))).
fof(substitution_from_7_tab2_col23, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25] : (( eq(TAB2_COL23, X) & from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)) => from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, X, TAB2_COL24, TAB2_COL25)))).
fof(substitution_from_7_tab2_col24, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25] : (( eq(TAB2_COL24, X) & from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)) => from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, X, TAB2_COL25)))).
fof(substitution_from_7_tab2_col25, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25] : (( eq(TAB2_COL25, X) & from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, TAB2_COL25)) => from_7 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_COL21, TAB2_COL22, TAB2_COL23, TAB2_COL24, X)))).
fof(substitution_tab2_col21, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL21, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( X, COL22, COL23, COL24, COL25)))).
fof(substitution_tab2_col22, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL22, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, X, COL23, COL24, COL25)))).
fof(substitution_tab2_col23, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL23, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, COL22, X, COL24, COL25)))).
fof(substitution_tab2_col24, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL24, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, COL22, COL23, X, COL25)))).
fof(substitution_tab2_col25, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL25, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, COL22, COL23, COL24, X)))).
fof(substitution_from_2_subquery_alias_col11, axiom, ( ! [X, SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12] : (( eq(SUBQUERY_ALIAS_COL11, X) & from_2 ( SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12)) => from_2 ( X, SUBQUERY_ALIAS_COL12)))).
fof(substitution_from_2_subquery_alias_col12, axiom, ( ! [X, SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12] : (( eq(SUBQUERY_ALIAS_COL12, X) & from_2 ( SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12)) => from_2 ( SUBQUERY_ALIAS_COL11, X)))).
fof(substitution_tab1_col11, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL11, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( X, COL12, COL13, COL14, COL15)))).
fof(substitution_tab1_col12, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL12, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, X, COL13, COL14, COL15)))).
fof(substitution_tab1_col13, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL13, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, COL12, X, COL14, COL15)))).
fof(substitution_tab1_col14, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL14, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, COL12, COL13, X, COL15)))).
fof(substitution_tab1_col15, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL15, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, COL12, COL13, COL14, X)))).
fof(substitution_main_query_1_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & main_query_1 ( COL11, COL12)) => main_query_1 ( X, COL12)))).
fof(substitution_main_query_1_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & main_query_1 ( COL11, COL12)) => main_query_1 ( COL11, X)))).
fof(substitution_select_6_col12, axiom, ( ! [X, COL12, COL22] : (( eq(COL12, X) & select_6 ( COL12, COL22)) => select_6 ( X, COL22)))).
fof(substitution_select_6_col22, axiom, ( ! [X, COL12, COL22] : (( eq(COL22, X) & select_6 ( COL12, COL22)) => select_6 ( COL12, X)))).
fof(substitution_select_4_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & select_4 ( COL11, COL12)) => select_4 ( X, COL12)))).
fof(substitution_select_4_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & select_4 ( COL11, COL12)) => select_4 ( COL11, X)))).
fof(substitution_from_5_tab1_alias_col11, axiom, ( ! [X, TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15] : (( eq(TAB1_ALIAS_COL11, X) & from_5 ( TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15)) => from_5 ( X, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15)))).
fof(substitution_from_5_tab1_alias_col12, axiom, ( ! [X, TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15] : (( eq(TAB1_ALIAS_COL12, X) & from_5 ( TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15)) => from_5 ( TAB1_ALIAS_COL11, X, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15)))).
fof(substitution_from_5_tab1_alias_col13, axiom, ( ! [X, TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15] : (( eq(TAB1_ALIAS_COL13, X) & from_5 ( TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15)) => from_5 ( TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, X, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15)))).
fof(substitution_from_5_tab1_alias_col14, axiom, ( ! [X, TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15] : (( eq(TAB1_ALIAS_COL14, X) & from_5 ( TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15)) => from_5 ( TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, X, TAB1_ALIAS_COL15)))).
fof(substitution_from_5_tab1_alias_col15, axiom, ( ! [X, TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15] : (( eq(TAB1_ALIAS_COL15, X) & from_5 ( TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, TAB1_ALIAS_COL15)) => from_5 ( TAB1_ALIAS_COL11, TAB1_ALIAS_COL12, TAB1_ALIAS_COL13, TAB1_ALIAS_COL14, X)))).

fof(equivalence_check, conjecture, ( ! [ COL11, COL12 ] : ( main_query_1(COL11, COL12) <=> main_query_2(COL11, COL12) ) )).












Columns:
{
    "tab1": [
        "COL11",
        "COL12",
        "COL13",
        "COL14",
        "COL15"
    ],
    "tab2": [
        "COL21",
        "COL22",
        "COL23",
        "COL24",
        "COL25"
    ],
    "from_5": [
        "TAB1_ALIAS_COL11",
        "TAB1_ALIAS_COL12",
        "TAB1_ALIAS_COL13",
        "TAB1_ALIAS_COL14",
        "TAB1_ALIAS_COL15"
    ],
    "select_4": [
        "COL11",
        "COL12"
    ],
    "subquery_from_3": [
        "COL11",
        "COL12"
    ],
    "from_2": [
        "SUBQUERY_ALIAS_COL11",
        "SUBQUERY_ALIAS_COL12"
    ],
    "select_1": [
        "COL11",
        "COL12"
    ],
    "main_query_1": [
        "COL11",
        "COL12"
    ],
    "from_7": [
        "TAB1_COL11",
        "TAB1_COL12",
        "TAB1_COL13",
        "TAB1_COL14",
        "TAB1_COL15",
        "TAB2_COL21",
        "TAB2_COL22",
        "TAB2_COL23",
        "TAB2_COL24",
        "TAB2_COL25"
    ],
    "where_8": [
        "TAB1_COL11",
        "TAB2_COL21"
    ],
    "select_6": [
        "COL12",
        "COL22"
    ],
    "main_query_2": [
        "COL12",
        "COL22"
    ]
}
External:
{
    "from_5": [],
    "select_4": [],
    "subquery_from_3": [],
    "from_2": [],
    "select_1": [],
    "main_query_1": [],
    "from_7": [],
    "select_6": [],
    "main_query_2": []
}
Exiting with code: 0
eprover: CPU time limit exceeded, terminating
