{
    "tab1": [
        "col11",
        "col12",
        "col13",
        "col14",
        "col15"
    ],
    "tab2": [
        "col21",
        "col22",
        "col23",
        "col24",
        "col25"
    ]
}

{
    "tab1": [
        "col11",
        "col12",
        "col13",
        "col14",
        "col15"
    ],
    "tab2": [
        "col21",
        "col22",
        "col23",
        "col24",
        "col25"
    ]
}
for tab1 ['col11', 'col12', 'col13', 'col14', 'col15']
Setting columns: tab1 ['col11', 'col12', 'col13', 'col14', 'col15']
for tab2 ['col21', 'col22', 'col23', 'col24', 'col25']
Setting columns: tab2 ['col21', 'col22', 'col23', 'col24', 'col25']
Translating query_09.sql...
select
    tab1.col11,
    tab1.col12
from
    tab1
where
    tab1.col11 in (
        select
            tab1.col11
        from
            tab1
    )
{
    "select": [
        {
            "value": "tab1.col11"
        },
        {
            "value": "tab1.col12"
        }
    ],
    "from": "tab1",
    "where": {
        "in": [
            "tab1.col11",
            {
                "select": {
                    "value": "tab1.col11"
                },
                "from": "tab1"
            }
        ]
    }
}
subquery tab1
table name tab1 table_columns ['COL11', 'COL12', 'COL13', 'COL14', 'COL15']
all new variables ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting columns: from_2 ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting external: from_2 []
fof(from_2, definition, ( ! [TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) <=> ( ( tab1 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) )))).
Setting columns: where_3 ['TAB1_COL11']
subquery tab1
table name tab1 table_columns ['COL11', 'COL12', 'COL13', 'COL14', 'COL15']
all new variables ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting columns: from_6 ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting external: from_6 []
fof(from_6, definition, ( ! [TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (from_6 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) <=> ( ( tab1 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) )))).
Setting columns: select_5 ['COL11']
Setting external: select_5 []
fof(select_5, definition, ( ! [TAB1_COL11] : (select_5 ( TAB1_COL11) <=> ( ? [TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] :  ( from_6 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15 )  & $true )  )  ) )).
Setting columns: where_3_subquery_4 ['COL11']
Setting external: where_3_subquery_4 []
fof(where_3_subquery_4, definition, ( ! [COL11] : (where_3_subquery_4 ( COL11) <=> (select_5 ( COL11))))).
fof(where_3, definition, ( ! [TAB1_COL11] : (where_3 ( TAB1_COL11) <=> ( ( where_3_subquery_4 ( TAB1_COL11)))))).
Setting columns: select_1 ['COL11', 'COL12']
Setting external: select_1 []
fof(select_1, definition, ( ! [TAB1_COL11, TAB1_COL12] : (select_1 ( TAB1_COL11, TAB1_COL12) <=> ( ? [TAB1_COL13, TAB1_COL14, TAB1_COL15] :  ( from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15 )  & where_3 ( TAB1_COL11 )  )  )  ) )).
Setting columns: main_query_1 ['COL11', 'COL12']
Setting external: main_query_1 []
fof(main_query_1, definition, ( ! [COL11, COL12] : (main_query_1 ( COL11, COL12) <=> (select_1 ( COL11, COL12))))).
Translating query_17.sql...
select
    subquery_alias.col11,
    subquery_alias.col12
from
    (
        select
            tab1.col11,
            tab1.col12
        from
            tab1
        where
            tab1.col11 <= tab1.col12
    )
where
    subquery_alias.col11 >= subquery_alias.col12
{
    "select": [
        {
            "value": "subquery_alias.col11"
        },
        {
            "value": "subquery_alias.col12"
        }
    ],
    "from": {
        "value": {
            "select": [
                {
                    "value": "tab1.col11"
                },
                {
                    "value": "tab1.col12"
                }
            ],
            "from": "tab1",
            "where": {
                "lte": [
                    "tab1.col11",
                    "tab1.col12"
                ]
            }
        }
    },
    "where": {
        "gte": [
            "subquery_alias.col11",
            "subquery_alias.col12"
        ]
    }
}
subquery {'value': {'select': [{'value': 'tab1.col11'}, {'value': 'tab1.col12'}], 'from': 'tab1', 'where': {'lte': ['tab1.col11', 'tab1.col12']}}}
subquery tab1
table name tab1 table_columns ['COL11', 'COL12', 'COL13', 'COL14', 'COL15']
all new variables ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting columns: from_11 ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting external: from_11 []
fof(from_11, definition, ( ! [TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (from_11 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) <=> ( ( tab1 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) )))).
Setting columns: where_12 ['TAB1_COL11']
Setting columns: where_12 ['TAB1_COL11', 'TAB1_COL12']
fof(where_12, definition, ( ! [TAB1_COL11, TAB1_COL12] : (where_12 ( TAB1_COL11, TAB1_COL12) <=> (lte ( TAB1_COL11, TAB1_COL12 ) )))).
Setting columns: select_10 ['COL11', 'COL12']
Setting external: select_10 []
fof(select_10, definition, ( ! [TAB1_COL11, TAB1_COL12] : (select_10 ( TAB1_COL11, TAB1_COL12) <=> ( ? [TAB1_COL13, TAB1_COL14, TAB1_COL15] :  ( from_11 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15 )  & where_12 ( TAB1_COL11, TAB1_COL12 )  )  )  ) )).
Setting columns: subquery_from_9 ['COL11', 'COL12']
Setting external: subquery_from_9 []
fof(subquery_from_9, definition, ( ! [COL11, COL12] : (subquery_from_9 ( COL11, COL12) <=> (select_10 ( COL11, COL12))))).
all new variables ['SUBQUERY_13_COL11', 'SUBQUERY_13_COL12']
Setting columns: from_8 ['SUBQUERY_13_COL11', 'SUBQUERY_13_COL12']
Setting external: from_8 []
fof(from_8, definition, ( ! [SUBQUERY_13_COL11, SUBQUERY_13_COL12] : (from_8 ( SUBQUERY_13_COL11, SUBQUERY_13_COL12) <=> ( ( subquery_from_9 ( SUBQUERY_13_COL11, SUBQUERY_13_COL12)) )))).
Setting external: where_14 ['SUBQUERY_ALIAS_COL11']
Setting external: where_14 ['SUBQUERY_ALIAS_COL11', 'SUBQUERY_ALIAS_COL12']
fof(where_14, definition, ( ! [SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12] : (where_14 ( SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12) <=> (gte ( SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12 ) )))).
Setting columns: select_7 ['COL11', 'COL12']
Setting external: select_7 []
fof(select_7, definition, ( ! [SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12] : (select_7 ( SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12) <=> ( ? [SUBQUERY_13_COL11, SUBQUERY_13_COL12] :  ( from_8 ( SUBQUERY_13_COL11, SUBQUERY_13_COL12 )  & where_14 ( SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12 )  )  )  ) )).
Setting columns: main_query_2 ['COL11', 'COL12']
Setting external: main_query_2 []
fof(main_query_2, definition, ( ! [COL11, COL12] : (main_query_2 ( COL11, COL12) <=> (select_7 ( COL11, COL12))))).

fof(reflexivity_of_equality, axiom, ( ! [X] : eq(X, X) )).
fof(symmetry_of_equality, axiom, ( ! [X,Y] : ( eq(X, Y) => eq (Y, X) ) )).
fof(transitivity_of_equality, axiom, ( ! [X,Y,Z] : ( ( eq(X, Y) & eq(Y, Z) ) => eq(X, Z) ) )).
fof(reflexivity_of_less_than_or_equal, axiom, ( ! [X] : lte(X,X) )).
fof(antisymmetry_of_less_than_or_equal, axiom, ( ! [X,Y] : ( ( lte(X,Y) & lte(Y,X) ) <=> eq(X, Y) ) )).
fof(transitivity_of_less_than_or_equal, axiom, ( ! [X,Y,Z] : ( ( lte(X,Y) & lte(Y,Z) ) => lte(X,Z) ) )).
fof(less_than_definition, definition, ( ! [X,Y] : ( ( lt(X,Y) ) <=> ( lte(X,Y) & (~ eq(X,Y))) ) )).
fof(greater_than_definition, definition, ( ! [X,Y] : ( ( gt(X,Y) ) <=>  ( lt(Y,X)) ) )).
fof(not_equal_definition, definition, ( ! [X,Y] : ( ( neq(X,Y) ) <=> (~ eq(X,Y)) ) )).
fof(greater_than_or_equal_definition, definition, ( ! [X,Y] : ( ( gte(X,Y) ) <=> (lte(Y,X))) )).
fof(substitution_from_6_tab1_col11, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL11, X) & from_6 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_6 ( X, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_6_tab1_col12, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL12, X) & from_6 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_6 ( TAB1_COL11, X, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_6_tab1_col13, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL13, X) & from_6 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_6 ( TAB1_COL11, TAB1_COL12, X, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_6_tab1_col14, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL14, X) & from_6 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_6 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, X, TAB1_COL15)))).
fof(substitution_from_6_tab1_col15, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL15, X) & from_6 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_6 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, X)))).
fof(substitution_from_2_tab1_col11, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL11, X) & from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_2 ( X, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_2_tab1_col12, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL12, X) & from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_2 ( TAB1_COL11, X, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_2_tab1_col13, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL13, X) & from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_2 ( TAB1_COL11, TAB1_COL12, X, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_2_tab1_col14, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL14, X) & from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, X, TAB1_COL15)))).
fof(substitution_from_2_tab1_col15, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL15, X) & from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, X)))).
fof(substitution_tab2_col21, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL21, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( X, COL22, COL23, COL24, COL25)))).
fof(substitution_tab2_col22, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL22, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, X, COL23, COL24, COL25)))).
fof(substitution_tab2_col23, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL23, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, COL22, X, COL24, COL25)))).
fof(substitution_tab2_col24, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL24, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, COL22, COL23, X, COL25)))).
fof(substitution_tab2_col25, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL25, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, COL22, COL23, COL24, X)))).
fof(substitution_subquery_from_9_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & subquery_from_9 ( COL11, COL12)) => subquery_from_9 ( X, COL12)))).
fof(substitution_subquery_from_9_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & subquery_from_9 ( COL11, COL12)) => subquery_from_9 ( COL11, X)))).
fof(substitution_main_query_2_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & main_query_2 ( COL11, COL12)) => main_query_2 ( X, COL12)))).
fof(substitution_main_query_2_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & main_query_2 ( COL11, COL12)) => main_query_2 ( COL11, X)))).
fof(substitution_tab1_col11, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL11, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( X, COL12, COL13, COL14, COL15)))).
fof(substitution_tab1_col12, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL12, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, X, COL13, COL14, COL15)))).
fof(substitution_tab1_col13, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL13, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, COL12, X, COL14, COL15)))).
fof(substitution_tab1_col14, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL14, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, COL12, COL13, X, COL15)))).
fof(substitution_tab1_col15, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL15, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, COL12, COL13, COL14, X)))).
fof(substitution_main_query_1_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & main_query_1 ( COL11, COL12)) => main_query_1 ( X, COL12)))).
fof(substitution_main_query_1_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & main_query_1 ( COL11, COL12)) => main_query_1 ( COL11, X)))).
fof(substitution_from_11_tab1_col11, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL11, X) & from_11 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_11 ( X, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_11_tab1_col12, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL12, X) & from_11 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_11 ( TAB1_COL11, X, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_11_tab1_col13, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL13, X) & from_11 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_11 ( TAB1_COL11, TAB1_COL12, X, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_11_tab1_col14, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL14, X) & from_11 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_11 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, X, TAB1_COL15)))).
fof(substitution_from_11_tab1_col15, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL15, X) & from_11 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_11 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, X)))).
fof(substitution_where_14_subquery_alias_col11, axiom, ( ! [X, SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12] : (( eq(SUBQUERY_ALIAS_COL11, X) & where_14 ( SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12)) => where_14 ( X, SUBQUERY_ALIAS_COL12)))).
fof(substitution_where_14_subquery_alias_col12, axiom, ( ! [X, SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12] : (( eq(SUBQUERY_ALIAS_COL12, X) & where_14 ( SUBQUERY_ALIAS_COL11, SUBQUERY_ALIAS_COL12)) => where_14 ( SUBQUERY_ALIAS_COL11, X)))).
fof(substitution_where_12_tab1_col11, axiom, ( ! [X, TAB1_COL11, TAB1_COL12] : (( eq(TAB1_COL11, X) & where_12 ( TAB1_COL11, TAB1_COL12)) => where_12 ( X, TAB1_COL12)))).
fof(substitution_where_12_tab1_col12, axiom, ( ! [X, TAB1_COL11, TAB1_COL12] : (( eq(TAB1_COL12, X) & where_12 ( TAB1_COL11, TAB1_COL12)) => where_12 ( TAB1_COL11, X)))).
fof(substitution_select_1_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & select_1 ( COL11, COL12)) => select_1 ( X, COL12)))).
fof(substitution_select_1_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & select_1 ( COL11, COL12)) => select_1 ( COL11, X)))).
fof(substitution_select_7_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & select_7 ( COL11, COL12)) => select_7 ( X, COL12)))).
fof(substitution_select_7_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & select_7 ( COL11, COL12)) => select_7 ( COL11, X)))).
fof(substitution_from_8_subquery_13_col11, axiom, ( ! [X, SUBQUERY_13_COL11, SUBQUERY_13_COL12] : (( eq(SUBQUERY_13_COL11, X) & from_8 ( SUBQUERY_13_COL11, SUBQUERY_13_COL12)) => from_8 ( X, SUBQUERY_13_COL12)))).
fof(substitution_from_8_subquery_13_col12, axiom, ( ! [X, SUBQUERY_13_COL11, SUBQUERY_13_COL12] : (( eq(SUBQUERY_13_COL12, X) & from_8 ( SUBQUERY_13_COL11, SUBQUERY_13_COL12)) => from_8 ( SUBQUERY_13_COL11, X)))).
fof(substitution_select_10_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & select_10 ( COL11, COL12)) => select_10 ( X, COL12)))).
fof(substitution_select_10_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & select_10 ( COL11, COL12)) => select_10 ( COL11, X)))).

fof(equivalence_check, conjecture, ( ! [ COL11, COL12 ] : ( main_query_1(COL11, COL12) <=> main_query_2(COL11, COL12) ) )).

















Columns:
{
    "tab1": [
        "COL11",
        "COL12",
        "COL13",
        "COL14",
        "COL15"
    ],
    "tab2": [
        "COL21",
        "COL22",
        "COL23",
        "COL24",
        "COL25"
    ],
    "from_2": [
        "TAB1_COL11",
        "TAB1_COL12",
        "TAB1_COL13",
        "TAB1_COL14",
        "TAB1_COL15"
    ],
    "where_3": [
        "TAB1_COL11"
    ],
    "from_6": [
        "TAB1_COL11",
        "TAB1_COL12",
        "TAB1_COL13",
        "TAB1_COL14",
        "TAB1_COL15"
    ],
    "select_5": [
        "COL11"
    ],
    "where_3_subquery_4": [
        "COL11"
    ],
    "select_1": [
        "COL11",
        "COL12"
    ],
    "main_query_1": [
        "COL11",
        "COL12"
    ],
    "from_11": [
        "TAB1_COL11",
        "TAB1_COL12",
        "TAB1_COL13",
        "TAB1_COL14",
        "TAB1_COL15"
    ],
    "where_12": [
        "TAB1_COL11",
        "TAB1_COL12"
    ],
    "select_10": [
        "COL11",
        "COL12"
    ],
    "subquery_from_9": [
        "COL11",
        "COL12"
    ],
    "from_8": [
        "SUBQUERY_13_COL11",
        "SUBQUERY_13_COL12"
    ],
    "select_7": [
        "COL11",
        "COL12"
    ],
    "main_query_2": [
        "COL11",
        "COL12"
    ]
}
External:
{
    "from_2": [],
    "from_6": [],
    "select_5": [],
    "where_3_subquery_4": [],
    "select_1": [],
    "main_query_1": [],
    "from_11": [],
    "select_10": [],
    "subquery_from_9": [],
    "from_8": [],
    "where_14": [
        "SUBQUERY_ALIAS_COL11",
        "SUBQUERY_ALIAS_COL12"
    ],
    "select_7": [],
    "main_query_2": []
}
Exiting with code: 0
