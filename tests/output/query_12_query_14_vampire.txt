% Refutation found. Thanks to Tanya!
% SZS status Theorem for query_12_query_14_tptp4X
% SZS output start Proof for query_12_query_14_tptp4X
1. ! [X0,X1,X2,X3,X4] : (from_2(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [input]
2. ! [X0,X1] : (where_3(X0,X1) <=> eq(X0,X1)) [input]
3. ! [X0,X1] : (select_1(X0,X1) <=> ? [X2,X3,X4] : (where_3(X0,X1) & from_2(X0,X1,X2,X3,X4))) [input]
4. ! [X5,X6] : (main_query_1(X5,X6) <=> select_1(X5,X6)) [input]
5. ! [X7,X8,X9,X10,X11] : (from_5(X7,X8,X9,X10,X11) <=> tab1(X7,X8,X9,X10,X11)) [input]
6. ! [X7,X8] : (where_6(X7,X8) <=> (~gt(X7,X8) & ~lt(X7,X8))) [input]
7. ! [X7,X8] : (select_4(X7,X8) <=> ? [X9,X10,X11] : (where_6(X7,X8) & from_5(X7,X8,X9,X10,X11))) [input]
8. ! [X5,X6] : (main_query_2(X5,X6) <=> select_4(X5,X6)) [input]
9. ! [X12] : eq(X12,X12) [input]
13. ! [X12,X13] : ((lte(X13,X12) & lte(X12,X13)) <=> eq(X12,X13)) [input]
15. ! [X12,X13] : (lte(X13,X12) | lte(X12,X13)) [input]
16. ! [X12,X13] : (lt(X12,X13) <=> (~eq(X12,X13) & lte(X12,X13))) [input]
17. ! [X12,X13] : (gt(X12,X13) <=> lt(X13,X12)) [input]
50. ! [X12,X7,X8] : ((where_6(X7,X8) & eq(X7,X12)) => where_6(X12,X8)) [input]
52. ! [X5,X6] : (main_query_1(X5,X6) <=> main_query_2(X5,X6)) [input]
53. ~! [X5,X6] : (main_query_1(X5,X6) <=> main_query_2(X5,X6)) [negated conjecture 52]
54. ! [X0,X1] : (main_query_1(X0,X1) <=> select_1(X0,X1)) [rectify 4]
55. ! [X0,X1,X2,X3,X4] : (from_5(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [rectify 5]
56. ! [X0,X1] : (where_6(X0,X1) <=> (~gt(X0,X1) & ~lt(X0,X1))) [rectify 6]
57. ! [X0,X1] : (select_4(X0,X1) <=> ? [X2,X3,X4] : (where_6(X0,X1) & from_5(X0,X1,X2,X3,X4))) [rectify 7]
58. ! [X0,X1] : (main_query_2(X0,X1) <=> select_4(X0,X1)) [rectify 8]
59. ! [X0] : eq(X0,X0) [rectify 9]
63. ! [X0,X1] : ((lte(X1,X0) & lte(X0,X1)) <=> eq(X0,X1)) [rectify 13]
65. ! [X0,X1] : (lte(X1,X0) | lte(X0,X1)) [rectify 15]
66. ! [X0,X1] : (lt(X0,X1) <=> (~eq(X0,X1) & lte(X0,X1))) [rectify 16]
67. ! [X0,X1] : (gt(X0,X1) <=> lt(X1,X0)) [rectify 17]
100. ! [X0,X1,X2] : ((where_6(X1,X2) & eq(X1,X0)) => where_6(X0,X2)) [rectify 50]
102. ~! [X0,X1] : (main_query_1(X0,X1) <=> main_query_2(X0,X1)) [rectify 53]
168. ! [X0,X1,X2] : (where_6(X0,X2) | (~where_6(X1,X2) | ~eq(X1,X0))) [ennf transformation 100]
169. ! [X0,X1,X2] : (where_6(X0,X2) | ~where_6(X1,X2) | ~eq(X1,X0)) [flattening 168]
172. ? [X0,X1] : (main_query_1(X0,X1) <~> main_query_2(X0,X1)) [ennf transformation 102]
173. ! [X0,X1,X2,X3,X4] : ((from_2(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_2(X0,X1,X2,X3,X4))) [nnf transformation 1]
174. ! [X0,X1] : ((where_3(X0,X1) | ~eq(X0,X1)) & (eq(X0,X1) | ~where_3(X0,X1))) [nnf transformation 2]
175. ! [X0,X1] : ((select_1(X0,X1) | ! [X2,X3,X4] : (~where_3(X0,X1) | ~from_2(X0,X1,X2,X3,X4))) & (? [X2,X3,X4] : (where_3(X0,X1) & from_2(X0,X1,X2,X3,X4)) | ~select_1(X0,X1))) [nnf transformation 3]
176. ! [X0,X1] : ((select_1(X0,X1) | ! [X2,X3,X4] : (~where_3(X0,X1) | ~from_2(X0,X1,X2,X3,X4))) & (? [X5,X6,X7] : (where_3(X0,X1) & from_2(X0,X1,X5,X6,X7)) | ~select_1(X0,X1))) [rectify 175]
177. ! [X1,X0] : (? [X5,X6,X7] : (where_3(X0,X1) & from_2(X0,X1,X5,X6,X7)) => (where_3(X0,X1) & from_2(X0,X1,sK0(X0,X1),sK1(X0,X1),sK2(X0,X1)))) [choice axiom]
178. ! [X0,X1] : ((select_1(X0,X1) | ! [X2,X3,X4] : (~where_3(X0,X1) | ~from_2(X0,X1,X2,X3,X4))) & ((where_3(X0,X1) & from_2(X0,X1,sK0(X0,X1),sK1(X0,X1),sK2(X0,X1))) | ~select_1(X0,X1))) [skolemisation 176,177]
179. ! [X0,X1] : ((main_query_1(X0,X1) | ~select_1(X0,X1)) & (select_1(X0,X1) | ~main_query_1(X0,X1))) [nnf transformation 54]
180. ! [X0,X1,X2,X3,X4] : ((from_5(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_5(X0,X1,X2,X3,X4))) [nnf transformation 55]
181. ! [X0,X1] : ((where_6(X0,X1) | (gt(X0,X1) | lt(X0,X1))) & ((~gt(X0,X1) & ~lt(X0,X1)) | ~where_6(X0,X1))) [nnf transformation 56]
182. ! [X0,X1] : ((where_6(X0,X1) | gt(X0,X1) | lt(X0,X1)) & ((~gt(X0,X1) & ~lt(X0,X1)) | ~where_6(X0,X1))) [flattening 181]
183. ! [X0,X1] : ((select_4(X0,X1) | ! [X2,X3,X4] : (~where_6(X0,X1) | ~from_5(X0,X1,X2,X3,X4))) & (? [X2,X3,X4] : (where_6(X0,X1) & from_5(X0,X1,X2,X3,X4)) | ~select_4(X0,X1))) [nnf transformation 57]
184. ! [X0,X1] : ((select_4(X0,X1) | ! [X2,X3,X4] : (~where_6(X0,X1) | ~from_5(X0,X1,X2,X3,X4))) & (? [X5,X6,X7] : (where_6(X0,X1) & from_5(X0,X1,X5,X6,X7)) | ~select_4(X0,X1))) [rectify 183]
185. ! [X1,X0] : (? [X5,X6,X7] : (where_6(X0,X1) & from_5(X0,X1,X5,X6,X7)) => (where_6(X0,X1) & from_5(X0,X1,sK3(X0,X1),sK4(X0,X1),sK5(X0,X1)))) [choice axiom]
186. ! [X0,X1] : ((select_4(X0,X1) | ! [X2,X3,X4] : (~where_6(X0,X1) | ~from_5(X0,X1,X2,X3,X4))) & ((where_6(X0,X1) & from_5(X0,X1,sK3(X0,X1),sK4(X0,X1),sK5(X0,X1))) | ~select_4(X0,X1))) [skolemisation 184,185]
187. ! [X0,X1] : ((main_query_2(X0,X1) | ~select_4(X0,X1)) & (select_4(X0,X1) | ~main_query_2(X0,X1))) [nnf transformation 58]
188. ! [X0,X1] : (((lte(X1,X0) & lte(X0,X1)) | ~eq(X0,X1)) & (eq(X0,X1) | (~lte(X1,X0) | ~lte(X0,X1)))) [nnf transformation 63]
189. ! [X0,X1] : (((lte(X1,X0) & lte(X0,X1)) | ~eq(X0,X1)) & (eq(X0,X1) | ~lte(X1,X0) | ~lte(X0,X1))) [flattening 188]
190. ! [X0,X1] : ((lt(X0,X1) | (eq(X0,X1) | ~lte(X0,X1))) & ((~eq(X0,X1) & lte(X0,X1)) | ~lt(X0,X1))) [nnf transformation 66]
191. ! [X0,X1] : ((lt(X0,X1) | eq(X0,X1) | ~lte(X0,X1)) & ((~eq(X0,X1) & lte(X0,X1)) | ~lt(X0,X1))) [flattening 190]
192. ! [X0,X1] : ((gt(X0,X1) | ~lt(X1,X0)) & (lt(X1,X0) | ~gt(X0,X1))) [nnf transformation 67]
193. ? [X0,X1] : ((~main_query_2(X0,X1) | ~main_query_1(X0,X1)) & (main_query_2(X0,X1) | main_query_1(X0,X1))) [nnf transformation 172]
194. ? [X0,X1] : ((~main_query_2(X0,X1) | ~main_query_1(X0,X1)) & (main_query_2(X0,X1) | main_query_1(X0,X1))) => ((~main_query_2(sK6,sK7) | ~main_query_1(sK6,sK7)) & (main_query_2(sK6,sK7) | main_query_1(sK6,sK7))) [choice axiom]
195. (~main_query_2(sK6,sK7) | ~main_query_1(sK6,sK7)) & (main_query_2(sK6,sK7) | main_query_1(sK6,sK7)) [skolemisation 193,194]
196. ~from_2(X0,X1,X2,X3,X4) | tab1(X0,X1,X2,X3,X4) [cnf transformation 173]
197. ~tab1(X0,X1,X2,X3,X4) | from_2(X0,X1,X2,X3,X4) [cnf transformation 173]
198. ~where_3(X0,X1) | eq(X0,X1) [cnf transformation 174]
199. ~eq(X0,X1) | where_3(X0,X1) [cnf transformation 174]
200. from_2(X0,X1,sK0(X0,X1),sK1(X0,X1),sK2(X0,X1)) | ~select_1(X0,X1) [cnf transformation 178]
201. ~select_1(X0,X1) | where_3(X0,X1) [cnf transformation 178]
202. ~from_2(X0,X1,X2,X3,X4) | ~where_3(X0,X1) | select_1(X0,X1) [cnf transformation 178]
203. ~main_query_1(X0,X1) | select_1(X0,X1) [cnf transformation 179]
204. ~select_1(X0,X1) | main_query_1(X0,X1) [cnf transformation 179]
205. ~from_5(X0,X1,X2,X3,X4) | tab1(X0,X1,X2,X3,X4) [cnf transformation 180]
206. ~tab1(X0,X1,X2,X3,X4) | from_5(X0,X1,X2,X3,X4) [cnf transformation 180]
207. ~lt(X0,X1) | ~where_6(X0,X1) [cnf transformation 182]
208. ~gt(X0,X1) | ~where_6(X0,X1) [cnf transformation 182]
209. gt(X0,X1) | where_6(X0,X1) | lt(X0,X1) [cnf transformation 182]
210. from_5(X0,X1,sK3(X0,X1),sK4(X0,X1),sK5(X0,X1)) | ~select_4(X0,X1) [cnf transformation 186]
211. ~select_4(X0,X1) | where_6(X0,X1) [cnf transformation 186]
212. ~from_5(X0,X1,X2,X3,X4) | ~where_6(X0,X1) | select_4(X0,X1) [cnf transformation 186]
213. ~main_query_2(X0,X1) | select_4(X0,X1) [cnf transformation 187]
214. ~select_4(X0,X1) | main_query_2(X0,X1) [cnf transformation 187]
215. eq(X0,X0) [cnf transformation 59]
221. ~eq(X0,X1) | lte(X1,X0) [cnf transformation 189]
223. lte(X1,X0) | lte(X0,X1) [cnf transformation 65]
225. ~lt(X0,X1) | ~eq(X0,X1) [cnf transformation 191]
226. ~lte(X0,X1) | eq(X0,X1) | lt(X0,X1) [cnf transformation 191]
227. ~gt(X0,X1) | lt(X1,X0) [cnf transformation 192]
228. ~lt(X1,X0) | gt(X0,X1) [cnf transformation 192]
259. ~where_6(X1,X2) | where_6(X0,X2) | ~eq(X1,X0) [cnf transformation 169]
261. main_query_2(sK6,sK7) | main_query_1(sK6,sK7) [cnf transformation 195]
262. ~main_query_2(sK6,sK7) | ~main_query_1(sK6,sK7) [cnf transformation 195]
264. 0 <=> main_query_1(sK6,sK7) [avatar definition]
265. main_query_1(sK6,sK7) <- {0} [avatar component clause 264]
267. 1 <=> ~main_query_1(sK6,sK7) [avatar definition]
268. ~main_query_1(sK6,sK7) <- {1} [avatar component clause 267]
270. 2 <=> main_query_2(sK6,sK7) [avatar definition]
271. main_query_2(sK6,sK7) <- {2} [avatar component clause 270]
273. 3 <=> ~main_query_2(sK6,sK7) [avatar definition]
274. ~main_query_2(sK6,sK7) <- {3} [avatar component clause 273]
275. ~1 | ~3 [avatar split clause 262,273,267]
276. 0 | 2 [avatar split clause 261,270,264]
279. select_4(sK6,sK7) <- {2} [resolution 213,271]
280. where_6(sK6,sK7) <- {2} [resolution 279,211]
286. lt(X1,X0) | lt(X0,X1) | where_6(X0,X1) [resolution 209,227]
296. eq(X1,X2) | lt(X1,X2) | lte(X2,X1) [resolution 226,223]
298. lte(X2,X1) | lt(X1,X2) [subsumption resolution 296,221]
299. lt(X1,X0) | lt(X0,X1) | eq(X1,X0) [resolution 298,226]
321. ~eq(X3,X2) | where_6(X3,X2) | lt(X2,X3) [resolution 286,225]
324. lt(X0,X0) | where_6(X0,X0) [factoring 286]
326. where_6(X1,X1) | ~eq(X1,X1) [resolution 324,225]
329. where_6(X1,X1) [subsumption resolution 326,215]
331. ~eq(X3,X2) | where_6(X2,X3) [resolution 329,259]
337. tab1(X2,X3,sK0(X2,X3),sK1(X2,X3),sK2(X2,X3)) | ~select_1(X2,X3) [resolution 200,196]
343. tab1(X2,X3,sK3(X2,X3),sK4(X2,X3),sK5(X2,X3)) | ~select_4(X2,X3) [resolution 210,205]
364. 5 <=> ~lt(sK7,sK6) [avatar definition]
365. ~lt(sK7,sK6) <- {5} [avatar component clause 364]
367. 4 <=> lt(sK7,sK6) [avatar definition]
368. lt(sK7,sK6) <- {4} [avatar component clause 367]
370. 7 <=> ~where_6(sK7,sK6) [avatar definition]
373. 6 <=> where_6(sK7,sK6) [avatar definition]
377. gt(sK6,sK7) <- {4} [resolution 368,228]
380. ~where_6(sK7,sK6) <- {4} [resolution 368,207]
381. ~7 | ~4 [avatar split clause 380,367,370]
384. ~where_6(sK6,sK7) <- {4} [resolution 377,208]
385. $false <- {2, 4} [subsumption resolution 384,280]
386. ~2 | ~4 [avatar contradiction clause 385]
387. lt(sK6,sK7) | eq(sK6,sK7) <- {5} [resolution 365,299]
392. 9 <=> ~eq(sK6,sK7) [avatar definition]
393. ~eq(sK6,sK7) <- {9} [avatar component clause 392]
395. 8 <=> eq(sK6,sK7) [avatar definition]
396. eq(sK6,sK7) <- {8} [avatar component clause 395]
401. 10 <=> lt(sK6,sK7) [avatar definition]
402. lt(sK6,sK7) <- {10} [avatar component clause 401]
403. 8 | 10 | 5 [avatar split clause 387,364,401,395]
417. ~where_6(sK6,sK7) <- {10} [resolution 402,207]
419. $false <- {2, 10} [subsumption resolution 417,280]
420. ~2 | ~10 [avatar contradiction clause 419]
424. where_3(sK6,sK7) <- {8} [resolution 396,199]
433. where_6(sK7,sK6) <- {8} [resolution 396,331]
483. from_5(X2,X3,sK0(X2,X3),sK1(X2,X3),sK2(X2,X3)) | ~select_1(X2,X3) [resolution 337,206]
491. from_2(X0,X1,sK3(X0,X1),sK4(X0,X1),sK5(X0,X1)) | ~select_4(X0,X1) [resolution 343,197]
600. where_6(sK6,sK7) | lt(sK7,sK6) <- {8} [resolution 321,396]
650. ~where_6(X2,X3) | ~select_1(X2,X3) | select_4(X2,X3) [resolution 483,212]
667. ~select_4(X2,X3) | ~where_3(X2,X3) | select_1(X2,X3) [resolution 491,202]
963. ~where_3(sK6,sK7) | select_1(sK6,sK7) <- {2} [resolution 667,279]
967. select_1(sK6,sK7) <- {2, 8} [subsumption resolution 963,424]
981. main_query_1(sK6,sK7) <- {2, 8} [resolution 967,204]
983. $false <- {1, 2, 8} [subsumption resolution 981,268]
984. 1 | ~2 | ~8 [avatar contradiction clause 983]
998. where_6(sK6,sK7) <- {5, 8} [subsumption resolution 600,365]
1001. select_1(sK6,sK7) <- {0} [resolution 265,203]
1006. where_3(sK6,sK7) <- {0} [resolution 1001,201]
1016. ~select_1(sK6,sK7) | select_4(sK6,sK7) <- {5, 8} [resolution 998,650]
1019. select_4(sK6,sK7) <- {0, 5, 8} [subsumption resolution 1016,1001]
1033. main_query_2(sK6,sK7) <- {0, 5, 8} [resolution 1019,214]
1039. $false <- {0, 3, 5, 8} [subsumption resolution 1033,274]
1040. ~0 | 3 | 5 | ~8 [avatar contradiction clause 1039]
1045. 6 | ~8 [avatar split clause 433,395,373]
1047. eq(sK6,sK7) <- {0} [resolution 1006,198]
1048. $false <- {0, 9} [subsumption resolution 1047,393]
1049. ~0 | 9 [avatar contradiction clause 1048]
1050. $false [avatar sat refutation 275,276,381,386,403,420,984,1040,1045,1049]
% SZS output end Proof for query_12_query_14_tptp4X
% ------------------------------
% Version: Vampire 4.2.2 (commit e1949dd on 2017-12-14 18:39:21 +0000)
% Termination reason: Refutation

% Memory used [KB]: 5245
% Time elapsed: 0.023 s
% ------------------------------
% ------------------------------
