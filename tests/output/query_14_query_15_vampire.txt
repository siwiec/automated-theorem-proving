% Refutation found. Thanks to Tanya!
% SZS status Theorem for query_14_query_15_tptp4X
% SZS output start Proof for query_14_query_15_tptp4X
1. ! [X0,X1,X2,X3,X4] : (from_2(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [input]
2. ! [X0,X1] : (where_3(X0,X1) <=> (~gt(X0,X1) & ~lt(X0,X1))) [input]
3. ! [X0,X1] : (select_1(X0,X1) <=> ? [X2,X3,X4] : (where_3(X0,X1) & from_2(X0,X1,X2,X3,X4))) [input]
4. ! [X5,X6] : (main_query_1(X5,X6) <=> select_1(X5,X6)) [input]
5. ! [X0,X1,X2,X3,X4] : (from_5(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [input]
6. ! [X0,X1,X2,X3,X4] : (from_9(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [input]
7. ! [X0] : (select_8(X0) <=> ? [X1,X2,X3,X4] : ($true & from_9(X0,X1,X2,X3,X4))) [input]
8. ! [X5] : (where_6_subquery_7(X5) <=> select_8(X5)) [input]
9. ! [X0,X1] : (where_6(X0,X1) <=> (where_6_subquery_7(X0) & eq(X0,X1))) [input]
10. ! [X0,X1] : (select_4(X0,X1) <=> ? [X2,X3,X4] : (where_6(X0,X1) & from_5(X0,X1,X2,X3,X4))) [input]
11. ! [X5,X6] : (main_query_2(X5,X6) <=> select_4(X5,X6)) [input]
13. ! [X7,X8] : (eq(X7,X8) => eq(X8,X7)) [input]
16. ! [X7,X8] : ((lte(X8,X7) & lte(X7,X8)) <=> eq(X7,X8)) [input]
17. ! [X7,X8,X9] : ((lte(X8,X9) & lte(X7,X8)) => lte(X7,X9)) [input]
18. ! [X7,X8] : (lte(X8,X7) | lte(X7,X8)) [input]
19. ! [X7,X8] : (lt(X7,X8) <=> (~eq(X7,X8) & lte(X7,X8))) [input]
20. ! [X7,X8] : (gt(X7,X8) <=> lt(X8,X7)) [input]
60. ! [X5,X6] : (main_query_1(X5,X6) <=> main_query_2(X5,X6)) [input]
61. ~! [X5,X6] : (main_query_1(X5,X6) <=> main_query_2(X5,X6)) [negated conjecture 60]
62. ! [X0,X1] : (main_query_1(X0,X1) <=> select_1(X0,X1)) [rectify 4]
63. ! [X0] : (select_8(X0) <=> ? [X1,X2,X3,X4] : from_9(X0,X1,X2,X3,X4)) [true and false elimination 7]
64. ! [X0] : (where_6_subquery_7(X0) <=> select_8(X0)) [rectify 8]
65. ! [X0,X1] : (main_query_2(X0,X1) <=> select_4(X0,X1)) [rectify 11]
67. ! [X0,X1] : (eq(X0,X1) => eq(X1,X0)) [rectify 13]
70. ! [X0,X1] : ((lte(X1,X0) & lte(X0,X1)) <=> eq(X0,X1)) [rectify 16]
71. ! [X0,X1,X2] : ((lte(X1,X2) & lte(X0,X1)) => lte(X0,X2)) [rectify 17]
72. ! [X0,X1] : (lte(X1,X0) | lte(X0,X1)) [rectify 18]
73. ! [X0,X1] : (lt(X0,X1) <=> (~eq(X0,X1) & lte(X0,X1))) [rectify 19]
74. ! [X0,X1] : (gt(X0,X1) <=> lt(X1,X0)) [rectify 20]
114. ~! [X0,X1] : (main_query_1(X0,X1) <=> main_query_2(X0,X1)) [rectify 61]
115. ! [X0,X1] : (eq(X1,X0) | ~eq(X0,X1)) [ennf transformation 67]
118. ! [X0,X1,X2] : (lte(X0,X2) | (~lte(X1,X2) | ~lte(X0,X1))) [ennf transformation 71]
119. ! [X0,X1,X2] : (lte(X0,X2) | ~lte(X1,X2) | ~lte(X0,X1)) [flattening 118]
194. ? [X0,X1] : (main_query_1(X0,X1) <~> main_query_2(X0,X1)) [ennf transformation 114]
195. ! [X0,X1,X2,X3,X4] : ((from_2(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_2(X0,X1,X2,X3,X4))) [nnf transformation 1]
196. ! [X0,X1] : ((where_3(X0,X1) | (gt(X0,X1) | lt(X0,X1))) & ((~gt(X0,X1) & ~lt(X0,X1)) | ~where_3(X0,X1))) [nnf transformation 2]
197. ! [X0,X1] : ((where_3(X0,X1) | gt(X0,X1) | lt(X0,X1)) & ((~gt(X0,X1) & ~lt(X0,X1)) | ~where_3(X0,X1))) [flattening 196]
198. ! [X0,X1] : ((select_1(X0,X1) | ! [X2,X3,X4] : (~where_3(X0,X1) | ~from_2(X0,X1,X2,X3,X4))) & (? [X2,X3,X4] : (where_3(X0,X1) & from_2(X0,X1,X2,X3,X4)) | ~select_1(X0,X1))) [nnf transformation 3]
199. ! [X0,X1] : ((select_1(X0,X1) | ! [X2,X3,X4] : (~where_3(X0,X1) | ~from_2(X0,X1,X2,X3,X4))) & (? [X5,X6,X7] : (where_3(X0,X1) & from_2(X0,X1,X5,X6,X7)) | ~select_1(X0,X1))) [rectify 198]
200. ! [X1,X0] : (? [X5,X6,X7] : (where_3(X0,X1) & from_2(X0,X1,X5,X6,X7)) => (where_3(X0,X1) & from_2(X0,X1,sK0(X0,X1),sK1(X0,X1),sK2(X0,X1)))) [choice axiom]
201. ! [X0,X1] : ((select_1(X0,X1) | ! [X2,X3,X4] : (~where_3(X0,X1) | ~from_2(X0,X1,X2,X3,X4))) & ((where_3(X0,X1) & from_2(X0,X1,sK0(X0,X1),sK1(X0,X1),sK2(X0,X1))) | ~select_1(X0,X1))) [skolemisation 199,200]
202. ! [X0,X1] : ((main_query_1(X0,X1) | ~select_1(X0,X1)) & (select_1(X0,X1) | ~main_query_1(X0,X1))) [nnf transformation 62]
203. ! [X0,X1,X2,X3,X4] : ((from_5(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_5(X0,X1,X2,X3,X4))) [nnf transformation 5]
204. ! [X0,X1,X2,X3,X4] : ((from_9(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_9(X0,X1,X2,X3,X4))) [nnf transformation 6]
205. ! [X0] : ((select_8(X0) | ! [X1,X2,X3,X4] : ~from_9(X0,X1,X2,X3,X4)) & (? [X1,X2,X3,X4] : from_9(X0,X1,X2,X3,X4) | ~select_8(X0))) [nnf transformation 63]
206. ! [X0] : ((select_8(X0) | ! [X1,X2,X3,X4] : ~from_9(X0,X1,X2,X3,X4)) & (? [X5,X6,X7,X8] : from_9(X0,X5,X6,X7,X8) | ~select_8(X0))) [rectify 205]
207. ! [X0] : (? [X5,X6,X7,X8] : from_9(X0,X5,X6,X7,X8) => from_9(X0,sK3(X0),sK4(X0),sK5(X0),sK6(X0))) [choice axiom]
208. ! [X0] : ((select_8(X0) | ! [X1,X2,X3,X4] : ~from_9(X0,X1,X2,X3,X4)) & (from_9(X0,sK3(X0),sK4(X0),sK5(X0),sK6(X0)) | ~select_8(X0))) [skolemisation 206,207]
209. ! [X0] : ((where_6_subquery_7(X0) | ~select_8(X0)) & (select_8(X0) | ~where_6_subquery_7(X0))) [nnf transformation 64]
210. ! [X0,X1] : ((where_6(X0,X1) | (~where_6_subquery_7(X0) | ~eq(X0,X1))) & ((where_6_subquery_7(X0) & eq(X0,X1)) | ~where_6(X0,X1))) [nnf transformation 9]
211. ! [X0,X1] : ((where_6(X0,X1) | ~where_6_subquery_7(X0) | ~eq(X0,X1)) & ((where_6_subquery_7(X0) & eq(X0,X1)) | ~where_6(X0,X1))) [flattening 210]
212. ! [X0,X1] : ((select_4(X0,X1) | ! [X2,X3,X4] : (~where_6(X0,X1) | ~from_5(X0,X1,X2,X3,X4))) & (? [X2,X3,X4] : (where_6(X0,X1) & from_5(X0,X1,X2,X3,X4)) | ~select_4(X0,X1))) [nnf transformation 10]
213. ! [X0,X1] : ((select_4(X0,X1) | ! [X2,X3,X4] : (~where_6(X0,X1) | ~from_5(X0,X1,X2,X3,X4))) & (? [X5,X6,X7] : (where_6(X0,X1) & from_5(X0,X1,X5,X6,X7)) | ~select_4(X0,X1))) [rectify 212]
214. ! [X1,X0] : (? [X5,X6,X7] : (where_6(X0,X1) & from_5(X0,X1,X5,X6,X7)) => (where_6(X0,X1) & from_5(X0,X1,sK7(X0,X1),sK8(X0,X1),sK9(X0,X1)))) [choice axiom]
215. ! [X0,X1] : ((select_4(X0,X1) | ! [X2,X3,X4] : (~where_6(X0,X1) | ~from_5(X0,X1,X2,X3,X4))) & ((where_6(X0,X1) & from_5(X0,X1,sK7(X0,X1),sK8(X0,X1),sK9(X0,X1))) | ~select_4(X0,X1))) [skolemisation 213,214]
216. ! [X0,X1] : ((main_query_2(X0,X1) | ~select_4(X0,X1)) & (select_4(X0,X1) | ~main_query_2(X0,X1))) [nnf transformation 65]
217. ! [X0,X1] : (((lte(X1,X0) & lte(X0,X1)) | ~eq(X0,X1)) & (eq(X0,X1) | (~lte(X1,X0) | ~lte(X0,X1)))) [nnf transformation 70]
218. ! [X0,X1] : (((lte(X1,X0) & lte(X0,X1)) | ~eq(X0,X1)) & (eq(X0,X1) | ~lte(X1,X0) | ~lte(X0,X1))) [flattening 217]
219. ! [X0,X1] : ((lt(X0,X1) | (eq(X0,X1) | ~lte(X0,X1))) & ((~eq(X0,X1) & lte(X0,X1)) | ~lt(X0,X1))) [nnf transformation 73]
220. ! [X0,X1] : ((lt(X0,X1) | eq(X0,X1) | ~lte(X0,X1)) & ((~eq(X0,X1) & lte(X0,X1)) | ~lt(X0,X1))) [flattening 219]
221. ! [X0,X1] : ((gt(X0,X1) | ~lt(X1,X0)) & (lt(X1,X0) | ~gt(X0,X1))) [nnf transformation 74]
222. ? [X0,X1] : ((~main_query_2(X0,X1) | ~main_query_1(X0,X1)) & (main_query_2(X0,X1) | main_query_1(X0,X1))) [nnf transformation 194]
223. ? [X0,X1] : ((~main_query_2(X0,X1) | ~main_query_1(X0,X1)) & (main_query_2(X0,X1) | main_query_1(X0,X1))) => ((~main_query_2(sK10,sK11) | ~main_query_1(sK10,sK11)) & (main_query_2(sK10,sK11) | main_query_1(sK10,sK11))) [choice axiom]
224. (~main_query_2(sK10,sK11) | ~main_query_1(sK10,sK11)) & (main_query_2(sK10,sK11) | main_query_1(sK10,sK11)) [skolemisation 222,223]
225. ~from_2(X0,X1,X2,X3,X4) | tab1(X0,X1,X2,X3,X4) [cnf transformation 195]
226. ~tab1(X0,X1,X2,X3,X4) | from_2(X0,X1,X2,X3,X4) [cnf transformation 195]
227. ~lt(X0,X1) | ~where_3(X0,X1) [cnf transformation 197]
228. ~gt(X0,X1) | ~where_3(X0,X1) [cnf transformation 197]
229. gt(X0,X1) | where_3(X0,X1) | lt(X0,X1) [cnf transformation 197]
230. from_2(X0,X1,sK0(X0,X1),sK1(X0,X1),sK2(X0,X1)) | ~select_1(X0,X1) [cnf transformation 201]
231. ~select_1(X0,X1) | where_3(X0,X1) [cnf transformation 201]
232. ~from_2(X0,X1,X2,X3,X4) | ~where_3(X0,X1) | select_1(X0,X1) [cnf transformation 201]
233. ~main_query_1(X0,X1) | select_1(X0,X1) [cnf transformation 202]
234. ~select_1(X0,X1) | main_query_1(X0,X1) [cnf transformation 202]
235. ~from_5(X0,X1,X2,X3,X4) | tab1(X0,X1,X2,X3,X4) [cnf transformation 203]
236. ~tab1(X0,X1,X2,X3,X4) | from_5(X0,X1,X2,X3,X4) [cnf transformation 203]
238. ~tab1(X0,X1,X2,X3,X4) | from_9(X0,X1,X2,X3,X4) [cnf transformation 204]
240. ~from_9(X0,X1,X2,X3,X4) | select_8(X0) [cnf transformation 208]
242. ~select_8(X0) | where_6_subquery_7(X0) [cnf transformation 209]
243. ~where_6(X0,X1) | eq(X0,X1) [cnf transformation 211]
245. ~eq(X0,X1) | ~where_6_subquery_7(X0) | where_6(X0,X1) [cnf transformation 211]
246. from_5(X0,X1,sK7(X0,X1),sK8(X0,X1),sK9(X0,X1)) | ~select_4(X0,X1) [cnf transformation 215]
247. ~select_4(X0,X1) | where_6(X0,X1) [cnf transformation 215]
248. ~from_5(X0,X1,X2,X3,X4) | ~where_6(X0,X1) | select_4(X0,X1) [cnf transformation 215]
249. ~main_query_2(X0,X1) | select_4(X0,X1) [cnf transformation 216]
250. ~select_4(X0,X1) | main_query_2(X0,X1) [cnf transformation 216]
252. ~eq(X0,X1) | eq(X1,X0) [cnf transformation 115]
257. ~eq(X0,X1) | lte(X1,X0) [cnf transformation 218]
258. ~lte(X1,X2) | lte(X0,X2) | ~lte(X0,X1) [cnf transformation 119]
259. lte(X1,X0) | lte(X0,X1) [cnf transformation 72]
261. ~eq(X0,X1) | ~lt(X0,X1) [cnf transformation 220]
262. ~lte(X0,X1) | eq(X0,X1) | lt(X0,X1) [cnf transformation 220]
263. ~gt(X0,X1) | lt(X1,X0) [cnf transformation 221]
264. ~lt(X1,X0) | gt(X0,X1) [cnf transformation 221]
302. main_query_2(sK10,sK11) | main_query_1(sK10,sK11) [cnf transformation 224]
303. ~main_query_2(sK10,sK11) | ~main_query_1(sK10,sK11) [cnf transformation 224]
305. 0 <=> main_query_1(sK10,sK11) [avatar definition]
306. main_query_1(sK10,sK11) <- {0} [avatar component clause 305]
308. 1 <=> ~main_query_1(sK10,sK11) [avatar definition]
309. ~main_query_1(sK10,sK11) <- {1} [avatar component clause 308]
311. 2 <=> main_query_2(sK10,sK11) [avatar definition]
312. main_query_2(sK10,sK11) <- {2} [avatar component clause 311]
314. 3 <=> ~main_query_2(sK10,sK11) [avatar definition]
315. ~main_query_2(sK10,sK11) <- {3} [avatar component clause 314]
316. ~1 | ~3 [avatar split clause 303,314,308]
317. 0 | 2 [avatar split clause 302,311,305]
354. lt(X1,X0) | lt(X0,X1) | where_3(X0,X1) [resolution 229,263]
369. ~lte(X2,X4) | lte(X2,X3) | lte(X3,X4) [resolution 258,259]
376. eq(X1,X2) | lt(X1,X2) | lte(X2,X1) [resolution 262,259]
380. lte(X2,X1) | lt(X1,X2) [subsumption resolution 376,257]
382. ~lte(X4,X3) | lte(X4,X2) | lt(X2,X3) [resolution 380,258]
405. gt(X0,X1) | where_3(X1,X0) | lt(X0,X1) [resolution 354,264]
412. lte(X2,X3) | lte(X3,X4) | lt(X4,X2) [resolution 369,380]
436. 9 <=> ~lt(sK11,sK10) [avatar definition]
437. ~lt(sK11,sK10) <- {9} [avatar component clause 436]
439. 8 <=> lt(sK11,sK10) [avatar definition]
440. lt(sK11,sK10) <- {8} [avatar component clause 439]
445. 10 <=> where_3(sK11,sK10) [avatar definition]
446. where_3(sK11,sK10) <- {10} [avatar component clause 445]
450. select_4(sK10,sK11) <- {2} [resolution 312,249]
454. where_6(sK10,sK11) <- {2} [resolution 450,247]
455. eq(sK10,sK11) <- {2} [resolution 454,243]
462. tab1(X2,X3,sK0(X2,X3),sK1(X2,X3),sK2(X2,X3)) | ~select_1(X2,X3) [resolution 230,225]
464. eq(sK11,sK10) <- {2} [resolution 455,252]
478. tab1(X2,X3,sK7(X2,X3),sK8(X2,X3),sK9(X2,X3)) | ~select_4(X2,X3) [resolution 246,235]
484. ~lt(sK11,sK10) <- {2} [resolution 464,261]
493. ~9 | ~2 [avatar split clause 484,311,436]
496. lt(sK10,sK11) | where_3(sK10,sK11) <- {9} [resolution 437,354]
523. 13 <=> ~lt(sK10,sK11) [avatar definition]
524. ~lt(sK10,sK11) <- {13} [avatar component clause 523]
526. 12 <=> lt(sK10,sK11) [avatar definition]
527. lt(sK10,sK11) <- {12} [avatar component clause 526]
532. 14 <=> where_3(sK10,sK11) [avatar definition]
533. where_3(sK10,sK11) <- {14} [avatar component clause 532]
535. 14 | 12 | 9 [avatar split clause 496,436,526,532]
536. select_1(sK10,sK11) <- {0} [resolution 306,233]
538. where_3(sK10,sK11) <- {0} [resolution 536,231]
539. 14 | ~0 [avatar split clause 538,305,532]
543. select_4(sK10,sK11) <- {2} [resolution 312,249]
548. where_6(sK10,sK11) <- {2} [resolution 543,247]
549. eq(sK10,sK11) <- {2} [resolution 548,243]
561. ~lt(sK10,sK11) <- {2} [resolution 549,261]
570. $false <- {2, 12} [subsumption resolution 561,527]
571. ~2 | ~12 [avatar contradiction clause 570]
572. select_1(sK10,sK11) <- {0} [resolution 306,233]
579. ~where_3(sK10,sK11) <- {12} [resolution 527,227]
580. $false <- {12, 14} [subsumption resolution 579,533]
581. ~12 | ~14 [avatar contradiction clause 580]
619. 16 <=> where_6(sK10,sK11) [avatar definition]
620. where_6(sK10,sK11) <- {16} [avatar component clause 619]
622. 18 <=> where_6_subquery_7(sK10) [avatar definition]
623. where_6_subquery_7(sK10) <- {18} [avatar component clause 622]
659. from_5(X2,X3,sK0(X2,X3),sK1(X2,X3),sK2(X2,X3)) | ~select_1(X2,X3) [resolution 462,236]
660. from_9(X4,X5,sK0(X4,X5),sK1(X4,X5),sK2(X4,X5)) | ~select_1(X4,X5) [resolution 462,238]
667. where_3(X2,X3) | lt(X3,X2) | ~where_3(X3,X2) [resolution 405,228]
668. ~where_3(X3,X2) | where_3(X2,X3) [subsumption resolution 667,227]
669. from_2(X0,X1,sK7(X0,X1),sK8(X0,X1),sK9(X0,X1)) | ~select_4(X0,X1) [resolution 478,226]
679. where_3(sK11,sK10) <- {14} [resolution 668,533]
710. lte(sK10,X11) | lte(X11,sK11) <- {9} [resolution 412,437]
720. lte(X0,sK11) | lte(sK10,X1) | lt(X1,X0) <- {9} [resolution 710,382]
1014. ~where_6(X2,X3) | ~select_1(X2,X3) | select_4(X2,X3) [resolution 659,248]
1022. ~select_1(X2,X3) | select_8(X2) [resolution 660,240]
1028. select_8(sK10) <- {0} [resolution 1022,572]
1030. ~select_4(X2,X3) | ~where_3(X2,X3) | select_1(X2,X3) [resolution 669,232]
1036. where_6_subquery_7(sK10) <- {0} [resolution 1028,242]
1039. 18 | ~0 [avatar split clause 1036,305,622]
1094. lte(sK10,sK11) | lte(sK10,sK11) <- {9} [resolution 720,437]
1097. lte(sK10,sK11) <- {9} [duplicate literal removal 1094]
1108. eq(sK10,sK11) | lt(sK10,sK11) <- {9} [resolution 1097,262]
1111. eq(sK10,sK11) <- {9, 13} [subsumption resolution 1108,524]
1133. ~where_6_subquery_7(sK10) | where_6(sK10,sK11) <- {9, 13} [resolution 1111,245]
1148. where_6(sK10,sK11) <- {9, 13, 18} [subsumption resolution 1133,623]
1149. 16 | 9 | 13 | ~18 [avatar split clause 1148,622,523,436,619]
1163. ~where_3(sK11,sK10) <- {8} [resolution 440,227]
1166. $false <- {8, 10} [subsumption resolution 1163,446]
1167. ~8 | ~10 [avatar contradiction clause 1166]
1251. ~select_1(sK10,sK11) | select_4(sK10,sK11) <- {16} [resolution 620,1014]
1254. select_4(sK10,sK11) <- {0, 16} [subsumption resolution 1251,572]
1347. main_query_2(sK10,sK11) <- {0, 16} [resolution 1254,250]
1349. $false <- {0, 3, 16} [subsumption resolution 1347,315]
1350. ~0 | 3 | ~16 [avatar contradiction clause 1349]
1351. 10 | ~14 [avatar split clause 679,532,445]
1363. select_4(sK10,sK11) <- {2} [resolution 312,249]
1365. ~where_3(sK10,sK11) | select_1(sK10,sK11) <- {2} [resolution 1363,1030]
1371. select_1(sK10,sK11) <- {2, 14} [subsumption resolution 1365,533]
1391. main_query_1(sK10,sK11) <- {2, 14} [resolution 1371,234]
1393. $false <- {1, 2, 14} [subsumption resolution 1391,309]
1394. 1 | ~2 | ~14 [avatar contradiction clause 1393]
1395. $false [avatar sat refutation 316,317,493,535,539,571,581,1039,1149,1167,1350,1351,1394]
% SZS output end Proof for query_14_query_15_tptp4X
% ------------------------------
% Version: Vampire 4.2.2 (commit e1949dd on 2017-12-14 18:39:21 +0000)
% Termination reason: Refutation

% Memory used [KB]: 5373
% Time elapsed: 0.037 s
% ------------------------------
% ------------------------------
