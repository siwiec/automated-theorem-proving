{
    "tab1": [
        "col11",
        "col12",
        "col13",
        "col14",
        "col15"
    ],
    "tab2": [
        "col21",
        "col22",
        "col23",
        "col24",
        "col25"
    ]
}

{
    "tab1": [
        "col11",
        "col12",
        "col13",
        "col14",
        "col15"
    ],
    "tab2": [
        "col21",
        "col22",
        "col23",
        "col24",
        "col25"
    ]
}
for tab1 ['col11', 'col12', 'col13', 'col14', 'col15']
Setting columns: tab1 ['col11', 'col12', 'col13', 'col14', 'col15']
for tab2 ['col21', 'col22', 'col23', 'col24', 'col25']
Setting columns: tab2 ['col21', 'col22', 'col23', 'col24', 'col25']
Translating query_16.sql...
select
    tab1.col11
from
    tab1
where
    tab1.col11 in (
        select
            alias.col11
        from
            (
                select
                    tab1.col11,
                    tab1.col12
                from
                    tab1
                where
                    tab1.col11 = tab1.col12
            ) as alias
    )
{
    "select": {
        "value": "tab1.col11"
    },
    "from": "tab1",
    "where": {
        "in": [
            "tab1.col11",
            {
                "select": {
                    "value": "alias.col11"
                },
                "from": {
                    "value": {
                        "select": [
                            {
                                "value": "tab1.col11"
                            },
                            {
                                "value": "tab1.col12"
                            }
                        ],
                        "from": "tab1",
                        "where": {
                            "eq": [
                                "tab1.col11",
                                "tab1.col12"
                            ]
                        }
                    },
                    "name": "alias"
                }
            }
        ]
    }
}
subquery tab1
table name tab1 table_columns ['COL11', 'COL12', 'COL13', 'COL14', 'COL15']
all new variables ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting columns: from_2 ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting external: from_2 []
fof(from_2, definition, ( ! [TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) <=> ( ( tab1 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) )))).
Setting columns: where_3 ['TAB1_COL11']
subquery {'value': {'select': [{'value': 'tab1.col11'}, {'value': 'tab1.col12'}], 'from': 'tab1', 'where': {'eq': ['tab1.col11', 'tab1.col12']}}, 'name': 'alias'}
subquery tab1
table name tab1 table_columns ['COL11', 'COL12', 'COL13', 'COL14', 'COL15']
all new variables ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting columns: from_9 ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting external: from_9 []
fof(from_9, definition, ( ! [TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (from_9 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) <=> ( ( tab1 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) )))).
Setting columns: where_10 ['TAB1_COL11']
Setting columns: where_10 ['TAB1_COL11', 'TAB1_COL12']
fof(where_10, definition, ( ! [TAB1_COL11, TAB1_COL12] : (where_10 ( TAB1_COL11, TAB1_COL12) <=> (eq ( TAB1_COL11, TAB1_COL12 ) )))).
Setting columns: select_8 ['COL11', 'COL12']
Setting external: select_8 []
fof(select_8, definition, ( ! [TAB1_COL11, TAB1_COL12] : (select_8 ( TAB1_COL11, TAB1_COL12) <=> ( ? [TAB1_COL13, TAB1_COL14, TAB1_COL15] :  ( from_9 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15 )  & where_10 ( TAB1_COL11, TAB1_COL12 )  )  )  ) )).
Setting columns: subquery_from_7 ['COL11', 'COL12']
Setting external: subquery_from_7 []
fof(subquery_from_7, definition, ( ! [COL11, COL12] : (subquery_from_7 ( COL11, COL12) <=> (select_8 ( COL11, COL12))))).
all new variables ['ALIAS_COL11', 'ALIAS_COL12']
Setting columns: from_6 ['ALIAS_COL11', 'ALIAS_COL12']
Setting external: from_6 []
fof(from_6, definition, ( ! [ALIAS_COL11, ALIAS_COL12] : (from_6 ( ALIAS_COL11, ALIAS_COL12) <=> ( ( subquery_from_7 ( ALIAS_COL11, ALIAS_COL12)) )))).
Setting columns: select_5 ['COL11']
Setting external: select_5 []
fof(select_5, definition, ( ! [ALIAS_COL11] : (select_5 ( ALIAS_COL11) <=> ( ? [ALIAS_COL12] :  ( from_6 ( ALIAS_COL11, ALIAS_COL12 )  & $true )  )  ) )).
Setting columns: where_3_subquery_4 ['COL11']
Setting external: where_3_subquery_4 []
fof(where_3_subquery_4, definition, ( ! [COL11] : (where_3_subquery_4 ( COL11) <=> (select_5 ( COL11))))).
fof(where_3, definition, ( ! [TAB1_COL11] : (where_3 ( TAB1_COL11) <=> ( ( where_3_subquery_4 ( TAB1_COL11)))))).
Setting columns: select_1 ['COL11']
Setting external: select_1 []
fof(select_1, definition, ( ! [TAB1_COL11] : (select_1 ( TAB1_COL11) <=> ( ? [TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] :  ( from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15 )  & where_3 ( TAB1_COL11 )  )  )  ) )).
Setting columns: main_query_1 ['COL11']
Setting external: main_query_1 []
fof(main_query_1, definition, ( ! [COL11] : (main_query_1 ( COL11) <=> (select_1 ( COL11))))).
Translating query_25.sql...
select
    tab1.col11,
    tab1.col12 as col12_alias,
    tab2_alias.col12,
    tab2_alias.col22 as col22_alias,
    subquery.subquery_col
from
    tab1,
    tab2 as tab2_alias,
    (
        select
            tab1.col11 as subquery_col
        from
            tab1
    ) as subquery
where
    (
        tab1.col11 < col12_alias and
        tab2_alias.col12 in (
            select
                tab1.col11
            from
                tab1
        )
    ) or (tab2_alias.col12 <= subquery.subquery_col)

{
    "select": [
        {
            "value": "tab1.col11"
        },
        {
            "value": "tab1.col12",
            "name": "col12_alias"
        },
        {
            "value": "tab2_alias.col12"
        },
        {
            "value": "tab2_alias.col22",
            "name": "col22_alias"
        },
        {
            "value": "subquery.subquery_col"
        }
    ],
    "from": [
        "tab1",
        {
            "value": "tab2",
            "name": "tab2_alias"
        },
        {
            "value": {
                "select": {
                    "value": "tab1.col11",
                    "name": "subquery_col"
                },
                "from": "tab1"
            },
            "name": "subquery"
        }
    ],
    "where": {
        "or": [
            {
                "and": [
                    {
                        "lt": [
                            "tab1.col11",
                            "col12_alias"
                        ]
                    },
                    {
                        "in": [
                            "tab2_alias.col12",
                            {
                                "select": {
                                    "value": "tab1.col11"
                                },
                                "from": "tab1"
                            }
                        ]
                    }
                ]
            },
            {
                "lte": [
                    "tab2_alias.col12",
                    "subquery.subquery_col"
                ]
            }
        ]
    }
}
subquery tab1
table name tab1 table_columns ['COL11', 'COL12', 'COL13', 'COL14', 'COL15']
subquery {'value': 'tab2', 'name': 'tab2_alias'}
subquery {'value': {'select': {'value': 'tab1.col11', 'name': 'subquery_col'}, 'from': 'tab1'}, 'name': 'subquery'}
subquery tab1
table name tab1 table_columns ['COL11', 'COL12', 'COL13', 'COL14', 'COL15']
all new variables ['SUBQUERY_COL', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting columns: from_15 ['SUBQUERY_COL', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting external: from_15 []
fof(from_15, definition, ( ! [SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (from_15 ( SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) <=> ( ( tab1 ( SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) )))).
Setting columns: select_14 ['SUBQUERY_COL']
Setting external: select_14 []
fof(select_14, definition, ( ! [SUBQUERY_COL] : (select_14 ( SUBQUERY_COL) <=> ( ? [TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] :  ( from_15 ( SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15 )  & $true )  )  ) )).
Setting columns: subquery_from_13 ['SUBQUERY_COL']
Setting external: subquery_from_13 []
fof(subquery_from_13, definition, ( ! [SUBQUERY_COL] : (subquery_from_13 ( SUBQUERY_COL) <=> (select_14 ( SUBQUERY_COL))))).
all new variables ['TAB1_COL11', 'COL12_ALIAS', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15', 'TAB2_ALIAS_COL21', 'COL22_ALIAS', 'TAB2_ALIAS_COL23', 'TAB2_ALIAS_COL24', 'TAB2_ALIAS_COL25', 'SUBQUERY_SUBQUERY_COL']
Setting columns: from_12 ['TAB1_COL11', 'COL12_ALIAS', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15', 'TAB2_ALIAS_COL21', 'COL22_ALIAS', 'TAB2_ALIAS_COL23', 'TAB2_ALIAS_COL24', 'TAB2_ALIAS_COL25', 'SUBQUERY_SUBQUERY_COL']
Setting external: from_12 []
fof(from_12, definition, ( ! [TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL] : (from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL) <=> ( ( tab1 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15)) &  ( tab2 ( TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25)) &  ( subquery_from_13 ( SUBQUERY_SUBQUERY_COL)) )))).
Setting columns: where_16 ['TAB1_COL11']
Setting columns: where_16 ['TAB1_COL11', 'COL12_ALIAS']
Setting external: where_16 ['TAB2_ALIAS_COL12']
subquery tab1
table name tab1 table_columns ['COL11', 'COL12', 'COL13', 'COL14', 'COL15']
all new variables ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting columns: from_19 ['TAB1_COL11', 'TAB1_COL12', 'TAB1_COL13', 'TAB1_COL14', 'TAB1_COL15']
Setting external: from_19 []
fof(from_19, definition, ( ! [TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (from_19 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15) <=> ( ( tab1 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) )))).
Setting columns: select_18 ['COL11']
Setting external: select_18 []
fof(select_18, definition, ( ! [TAB1_COL11] : (select_18 ( TAB1_COL11) <=> ( ? [TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] :  ( from_19 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15 )  & $true )  )  ) )).
Setting columns: where_16_subquery_17 ['COL11']
Setting external: where_16_subquery_17 []
fof(where_16_subquery_17, definition, ( ! [COL11] : (where_16_subquery_17 ( COL11) <=> (select_18 ( COL11))))).
Setting external: where_16 ['TAB2_ALIAS_COL12']
Setting columns: where_16 ['TAB1_COL11', 'COL12_ALIAS', 'SUBQUERY_SUBQUERY_COL']
fof(where_16, definition, ( ! [TAB1_COL11, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12] : (where_16 ( TAB1_COL11, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12) <=> ( (  ( lt ( TAB1_COL11, COL12_ALIAS )  &  ( where_16_subquery_17 ( TAB2_ALIAS_COL12)) )  | lte ( TAB2_ALIAS_COL12, SUBQUERY_SUBQUERY_COL )  ) )))).
Setting columns: select_11 ['COL11', 'COL12_ALIAS', 'COL12', 'COL22_ALIAS', 'SUBQUERY_COL']
Setting external: select_11 []
fof(select_11, definition, ( ! [TAB1_COL11, COL12_ALIAS, TAB2_ALIAS_COL12, COL22_ALIAS, SUBQUERY_SUBQUERY_COL] : (select_11 ( TAB1_COL11, COL12_ALIAS, TAB2_ALIAS_COL12, COL22_ALIAS, SUBQUERY_SUBQUERY_COL) <=> ( ? [TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25] :  ( from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL )  & where_16 ( TAB1_COL11, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12 )  )  )  ) )).
Setting columns: main_query_2 ['COL11', 'COL12_ALIAS', 'COL12', 'COL22_ALIAS', 'SUBQUERY_COL']
Setting external: main_query_2 []
fof(main_query_2, definition, ( ! [COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL] : (main_query_2 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL) <=> (select_11 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL))))).

fof(reflexivity_of_equality, axiom, ( ! [X] : eq(X, X) )).
fof(symmetry_of_equality, axiom, ( ! [X,Y] : ( eq(X, Y) => eq (Y, X) ) )).
fof(transitivity_of_equality, axiom, ( ! [X,Y,Z] : ( ( eq(X, Y) & eq(Y, Z) ) => eq(X, Z) ) )).
fof(reflexivity_of_less_than_or_equal, axiom, ( ! [X] : lte(X,X) )).
fof(antisymmetry_of_less_than_or_equal, axiom, ( ! [X,Y] : ( ( lte(X,Y) & lte(Y,X) ) <=> eq(X, Y) ) )).
fof(transitivity_of_less_than_or_equal, axiom, ( ! [X,Y,Z] : ( ( lte(X,Y) & lte(Y,Z) ) => lte(X,Z) ) )).
fof(strong_connectedness_of_less_than_or_equal, axiom, ( ! [X,Y] : ( lte(X,Y) | lte(Y,X) ) )).
fof(less_than_definition, definition, ( ! [X,Y] : ( ( lt(X,Y) ) <=> ( lte(X,Y) & (~ eq(X,Y))) ) )).
fof(greater_than_definition, definition, ( ! [X,Y] : ( ( gt(X,Y) ) <=>  ( lt(Y,X)) ) )).
fof(not_equal_definition, definition, ( ! [X,Y] : ( ( neq(X,Y) ) <=> (~ eq(X,Y)) ) )).
fof(greater_than_or_equal_definition, definition, ( ! [X,Y] : ( ( gte(X,Y) ) <=> (lte(Y,X))) )).
fof(substitution_where_10_tab1_col11, axiom, ( ! [X, TAB1_COL11, TAB1_COL12] : (( eq(TAB1_COL11, X) & where_10 ( TAB1_COL11, TAB1_COL12)) => where_10 ( X, TAB1_COL12)))).
fof(substitution_where_10_tab1_col12, axiom, ( ! [X, TAB1_COL11, TAB1_COL12] : (( eq(TAB1_COL12, X) & where_10 ( TAB1_COL11, TAB1_COL12)) => where_10 ( TAB1_COL11, X)))).
fof(substitution_subquery_from_7_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & subquery_from_7 ( COL11, COL12)) => subquery_from_7 ( X, COL12)))).
fof(substitution_subquery_from_7_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & subquery_from_7 ( COL11, COL12)) => subquery_from_7 ( COL11, X)))).
fof(substitution_from_6_alias_col11, axiom, ( ! [X, ALIAS_COL11, ALIAS_COL12] : (( eq(ALIAS_COL11, X) & from_6 ( ALIAS_COL11, ALIAS_COL12)) => from_6 ( X, ALIAS_COL12)))).
fof(substitution_from_6_alias_col12, axiom, ( ! [X, ALIAS_COL11, ALIAS_COL12] : (( eq(ALIAS_COL12, X) & from_6 ( ALIAS_COL11, ALIAS_COL12)) => from_6 ( ALIAS_COL11, X)))).
fof(substitution_from_15_subquery_col, axiom, ( ! [X, SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(SUBQUERY_COL, X) & from_15 ( SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_15 ( X, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_15_tab1_col12, axiom, ( ! [X, SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL12, X) & from_15 ( SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_15 ( SUBQUERY_COL, X, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_15_tab1_col13, axiom, ( ! [X, SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL13, X) & from_15 ( SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_15 ( SUBQUERY_COL, TAB1_COL12, X, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_15_tab1_col14, axiom, ( ! [X, SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL14, X) & from_15 ( SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_15 ( SUBQUERY_COL, TAB1_COL12, TAB1_COL13, X, TAB1_COL15)))).
fof(substitution_from_15_tab1_col15, axiom, ( ! [X, SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL15, X) & from_15 ( SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_15 ( SUBQUERY_COL, TAB1_COL12, TAB1_COL13, TAB1_COL14, X)))).
fof(substitution_main_query_2_col11, axiom, ( ! [X, COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL] : (( eq(COL11, X) & main_query_2 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL)) => main_query_2 ( X, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL)))).
fof(substitution_main_query_2_col12_alias, axiom, ( ! [X, COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL] : (( eq(COL12_ALIAS, X) & main_query_2 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL)) => main_query_2 ( COL11, X, COL12, COL22_ALIAS, SUBQUERY_COL)))).
fof(substitution_main_query_2_col12, axiom, ( ! [X, COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL] : (( eq(COL12, X) & main_query_2 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL)) => main_query_2 ( COL11, COL12_ALIAS, X, COL22_ALIAS, SUBQUERY_COL)))).
fof(substitution_main_query_2_col22_alias, axiom, ( ! [X, COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL] : (( eq(COL22_ALIAS, X) & main_query_2 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL)) => main_query_2 ( COL11, COL12_ALIAS, COL12, X, SUBQUERY_COL)))).
fof(substitution_main_query_2_subquery_col, axiom, ( ! [X, COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL] : (( eq(SUBQUERY_COL, X) & main_query_2 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL)) => main_query_2 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, X)))).
fof(substitution_from_9_tab1_col11, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL11, X) & from_9 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_9 ( X, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_9_tab1_col12, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL12, X) & from_9 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_9 ( TAB1_COL11, X, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_9_tab1_col13, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL13, X) & from_9 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_9 ( TAB1_COL11, TAB1_COL12, X, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_9_tab1_col14, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL14, X) & from_9 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_9 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, X, TAB1_COL15)))).
fof(substitution_from_9_tab1_col15, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL15, X) & from_9 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_9 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, X)))).
fof(substitution_from_2_tab1_col11, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL11, X) & from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_2 ( X, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_2_tab1_col12, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL12, X) & from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_2 ( TAB1_COL11, X, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_2_tab1_col13, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL13, X) & from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_2 ( TAB1_COL11, TAB1_COL12, X, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_2_tab1_col14, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL14, X) & from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, X, TAB1_COL15)))).
fof(substitution_from_2_tab1_col15, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL15, X) & from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_2 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, X)))).
fof(substitution_from_12_tab1_col11, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL] : (( eq(TAB1_COL11, X) & from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)) => from_12 ( X, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)))).
fof(substitution_from_12_col12_alias, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL] : (( eq(COL12_ALIAS, X) & from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)) => from_12 ( TAB1_COL11, X, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)))).
fof(substitution_from_12_tab1_col13, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL] : (( eq(TAB1_COL13, X) & from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)) => from_12 ( TAB1_COL11, COL12_ALIAS, X, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)))).
fof(substitution_from_12_tab1_col14, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL] : (( eq(TAB1_COL14, X) & from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)) => from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, X, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)))).
fof(substitution_from_12_tab1_col15, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL] : (( eq(TAB1_COL15, X) & from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)) => from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, X, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)))).
fof(substitution_from_12_tab2_alias_col21, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL] : (( eq(TAB2_ALIAS_COL21, X) & from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)) => from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, X, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)))).
fof(substitution_from_12_col22_alias, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL] : (( eq(COL22_ALIAS, X) & from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)) => from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, X, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)))).
fof(substitution_from_12_tab2_alias_col23, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL] : (( eq(TAB2_ALIAS_COL23, X) & from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)) => from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, X, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)))).
fof(substitution_from_12_tab2_alias_col24, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL] : (( eq(TAB2_ALIAS_COL24, X) & from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)) => from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, X, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)))).
fof(substitution_from_12_tab2_alias_col25, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL] : (( eq(TAB2_ALIAS_COL25, X) & from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)) => from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, X, SUBQUERY_SUBQUERY_COL)))).
fof(substitution_from_12_subquery_subquery_col, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL] : (( eq(SUBQUERY_SUBQUERY_COL, X) & from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, SUBQUERY_SUBQUERY_COL)) => from_12 ( TAB1_COL11, COL12_ALIAS, TAB1_COL13, TAB1_COL14, TAB1_COL15, TAB2_ALIAS_COL21, COL22_ALIAS, TAB2_ALIAS_COL23, TAB2_ALIAS_COL24, TAB2_ALIAS_COL25, X)))).
fof(substitution_where_16_tab1_col11, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12] : (( eq(TAB1_COL11, X) & where_16 ( TAB1_COL11, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12)) => where_16 ( X, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12)))).
fof(substitution_where_16_col12_alias, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12] : (( eq(COL12_ALIAS, X) & where_16 ( TAB1_COL11, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12)) => where_16 ( TAB1_COL11, X, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12)))).
fof(substitution_where_16_subquery_subquery_col, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12] : (( eq(SUBQUERY_SUBQUERY_COL, X) & where_16 ( TAB1_COL11, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12)) => where_16 ( TAB1_COL11, COL12_ALIAS, X, TAB2_ALIAS_COL12)))).
fof(substitution_where_16_tab2_alias_col12, axiom, ( ! [X, TAB1_COL11, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12] : (( eq(TAB2_ALIAS_COL12, X) & where_16 ( TAB1_COL11, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, TAB2_ALIAS_COL12)) => where_16 ( TAB1_COL11, COL12_ALIAS, SUBQUERY_SUBQUERY_COL, X)))).
fof(substitution_tab1_col11, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL11, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( X, COL12, COL13, COL14, COL15)))).
fof(substitution_tab1_col12, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL12, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, X, COL13, COL14, COL15)))).
fof(substitution_tab1_col13, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL13, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, COL12, X, COL14, COL15)))).
fof(substitution_tab1_col14, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL14, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, COL12, COL13, X, COL15)))).
fof(substitution_tab1_col15, axiom, ( ! [X, COL11, COL12, COL13, COL14, COL15] : (( eq(COL15, X) & tab1 ( COL11, COL12, COL13, COL14, COL15)) => tab1 ( COL11, COL12, COL13, COL14, X)))).
fof(substitution_select_8_col11, axiom, ( ! [X, COL11, COL12] : (( eq(COL11, X) & select_8 ( COL11, COL12)) => select_8 ( X, COL12)))).
fof(substitution_select_8_col12, axiom, ( ! [X, COL11, COL12] : (( eq(COL12, X) & select_8 ( COL11, COL12)) => select_8 ( COL11, X)))).
fof(substitution_from_19_tab1_col11, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL11, X) & from_19 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_19 ( X, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_19_tab1_col12, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL12, X) & from_19 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_19 ( TAB1_COL11, X, TAB1_COL13, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_19_tab1_col13, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL13, X) & from_19 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_19 ( TAB1_COL11, TAB1_COL12, X, TAB1_COL14, TAB1_COL15)))).
fof(substitution_from_19_tab1_col14, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL14, X) & from_19 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_19 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, X, TAB1_COL15)))).
fof(substitution_from_19_tab1_col15, axiom, ( ! [X, TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15] : (( eq(TAB1_COL15, X) & from_19 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, TAB1_COL15)) => from_19 ( TAB1_COL11, TAB1_COL12, TAB1_COL13, TAB1_COL14, X)))).
fof(substitution_tab2_col21, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL21, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( X, COL22, COL23, COL24, COL25)))).
fof(substitution_tab2_col22, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL22, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, X, COL23, COL24, COL25)))).
fof(substitution_tab2_col23, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL23, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, COL22, X, COL24, COL25)))).
fof(substitution_tab2_col24, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL24, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, COL22, COL23, X, COL25)))).
fof(substitution_tab2_col25, axiom, ( ! [X, COL21, COL22, COL23, COL24, COL25] : (( eq(COL25, X) & tab2 ( COL21, COL22, COL23, COL24, COL25)) => tab2 ( COL21, COL22, COL23, COL24, X)))).
fof(substitution_select_11_col11, axiom, ( ! [X, COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL] : (( eq(COL11, X) & select_11 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL)) => select_11 ( X, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL)))).
fof(substitution_select_11_col12_alias, axiom, ( ! [X, COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL] : (( eq(COL12_ALIAS, X) & select_11 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL)) => select_11 ( COL11, X, COL12, COL22_ALIAS, SUBQUERY_COL)))).
fof(substitution_select_11_col12, axiom, ( ! [X, COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL] : (( eq(COL12, X) & select_11 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL)) => select_11 ( COL11, COL12_ALIAS, X, COL22_ALIAS, SUBQUERY_COL)))).
fof(substitution_select_11_col22_alias, axiom, ( ! [X, COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL] : (( eq(COL22_ALIAS, X) & select_11 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL)) => select_11 ( COL11, COL12_ALIAS, COL12, X, SUBQUERY_COL)))).
fof(substitution_select_11_subquery_col, axiom, ( ! [X, COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL] : (( eq(SUBQUERY_COL, X) & select_11 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, SUBQUERY_COL)) => select_11 ( COL11, COL12_ALIAS, COL12, COL22_ALIAS, X)))).

fof(equivalence_check, conjecture, ( $false )).























Columns:
{
    "tab1": [
        "COL11",
        "COL12",
        "COL13",
        "COL14",
        "COL15"
    ],
    "tab2": [
        "COL21",
        "COL22",
        "COL23",
        "COL24",
        "COL25"
    ],
    "from_2": [
        "TAB1_COL11",
        "TAB1_COL12",
        "TAB1_COL13",
        "TAB1_COL14",
        "TAB1_COL15"
    ],
    "where_3": [
        "TAB1_COL11"
    ],
    "from_9": [
        "TAB1_COL11",
        "TAB1_COL12",
        "TAB1_COL13",
        "TAB1_COL14",
        "TAB1_COL15"
    ],
    "where_10": [
        "TAB1_COL11",
        "TAB1_COL12"
    ],
    "select_8": [
        "COL11",
        "COL12"
    ],
    "subquery_from_7": [
        "COL11",
        "COL12"
    ],
    "from_6": [
        "ALIAS_COL11",
        "ALIAS_COL12"
    ],
    "select_5": [
        "COL11"
    ],
    "where_3_subquery_4": [
        "COL11"
    ],
    "select_1": [
        "COL11"
    ],
    "main_query_1": [
        "COL11"
    ],
    "from_15": [
        "SUBQUERY_COL",
        "TAB1_COL12",
        "TAB1_COL13",
        "TAB1_COL14",
        "TAB1_COL15"
    ],
    "select_14": [
        "SUBQUERY_COL"
    ],
    "subquery_from_13": [
        "SUBQUERY_COL"
    ],
    "from_12": [
        "TAB1_COL11",
        "COL12_ALIAS",
        "TAB1_COL13",
        "TAB1_COL14",
        "TAB1_COL15",
        "TAB2_ALIAS_COL21",
        "COL22_ALIAS",
        "TAB2_ALIAS_COL23",
        "TAB2_ALIAS_COL24",
        "TAB2_ALIAS_COL25",
        "SUBQUERY_SUBQUERY_COL"
    ],
    "where_16": [
        "TAB1_COL11",
        "COL12_ALIAS",
        "SUBQUERY_SUBQUERY_COL"
    ],
    "from_19": [
        "TAB1_COL11",
        "TAB1_COL12",
        "TAB1_COL13",
        "TAB1_COL14",
        "TAB1_COL15"
    ],
    "select_18": [
        "COL11"
    ],
    "where_16_subquery_17": [
        "COL11"
    ],
    "select_11": [
        "COL11",
        "COL12_ALIAS",
        "COL12",
        "COL22_ALIAS",
        "SUBQUERY_COL"
    ],
    "main_query_2": [
        "COL11",
        "COL12_ALIAS",
        "COL12",
        "COL22_ALIAS",
        "SUBQUERY_COL"
    ]
}
External:
{
    "from_2": [],
    "from_9": [],
    "select_8": [],
    "subquery_from_7": [],
    "from_6": [],
    "select_5": [],
    "where_3_subquery_4": [],
    "select_1": [],
    "main_query_1": [],
    "from_15": [],
    "select_14": [],
    "subquery_from_13": [],
    "from_12": [],
    "where_16": [
        "TAB2_ALIAS_COL12"
    ],
    "from_19": [],
    "select_18": [],
    "where_16_subquery_17": [],
    "select_11": [],
    "main_query_2": []
}
Exiting with code: 1
