% Refutation found. Thanks to Tanya!
% SZS status Theorem for test1_equal
% SZS output start Proof for test1_equal
1. ! [X0,X1] : (main_query_0(X0,X1) <=> ? [X2,X3,X4,X5] : (X1 = X2 & X0 = X4 & $true & tab(X1,X4,X5) & tab(X0,X2,X3))) [input]
2. ! [X0,X1] : (main_query_1(X0,X1) <=> ? [X2,X3,X4,X5,X6,X7,X8] : (X6 = X6 & X1 = X2 & X0 = X4 & $true & tab(X6,X7,X8) & tab(X1,X4,X5) & tab(X0,X2,X3))) [input]
3. ! [X0,X1] : (main_query_0(X0,X1) <=> main_query_1(X0,X1)) [input]
4. ~! [X0,X1] : (main_query_0(X0,X1) <=> main_query_1(X0,X1)) [negated conjecture 3]
16. ! [X0,X1] : (main_query_0(X0,X1) <=> ? [X2,X3,X4,X5] : (X1 = X2 & X0 = X4 & tab(X1,X4,X5) & tab(X0,X2,X3))) [true and false elimination 1]
17. ! [X0,X1] : (main_query_1(X0,X1) <=> ? [X2,X3,X4,X5,X6,X7,X8] : (X6 = X6 & X1 = X2 & X0 = X4 & tab(X6,X7,X8) & tab(X1,X4,X5) & tab(X0,X2,X3))) [true and false elimination 2]
29. ? [X0,X1] : (main_query_0(X0,X1) <~> main_query_1(X0,X1)) [ennf transformation 4]
47. ! [X0,X1] : ((main_query_0(X0,X1) | ! [X2,X3,X4,X5] : (X1 != X2 | X0 != X4 | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & (? [X2,X3,X4,X5] : (X1 = X2 & X0 = X4 & tab(X1,X4,X5) & tab(X0,X2,X3)) | ~main_query_0(X0,X1))) [nnf transformation 16]
48. ! [X0,X1] : ((main_query_0(X0,X1) | ! [X2,X3,X4,X5] : (X1 != X2 | X0 != X4 | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & (? [X6,X7,X8,X9] : (X1 = X6 & X0 = X8 & tab(X1,X8,X9) & tab(X0,X6,X7)) | ~main_query_0(X0,X1))) [rectify 47]
49. ! [X1,X0] : (? [X6,X7,X8,X9] : (X1 = X6 & X0 = X8 & tab(X1,X8,X9) & tab(X0,X6,X7)) => (sK0(X0,X1) = X1 & sK2(X0,X1) = X0 & tab(X1,sK2(X0,X1),sK3(X0,X1)) & tab(X0,sK0(X0,X1),sK1(X0,X1)))) [choice axiom]
50. ! [X0,X1] : ((main_query_0(X0,X1) | ! [X2,X3,X4,X5] : (X1 != X2 | X0 != X4 | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & ((sK0(X0,X1) = X1 & sK2(X0,X1) = X0 & tab(X1,sK2(X0,X1),sK3(X0,X1)) & tab(X0,sK0(X0,X1),sK1(X0,X1))) | ~main_query_0(X0,X1))) [skolemisation 48,49]
51. ! [X0,X1] : ((main_query_1(X0,X1) | ! [X2,X3,X4,X5,X6,X7,X8] : (X6 != X6 | X1 != X2 | X0 != X4 | ~tab(X6,X7,X8) | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & (? [X2,X3,X4,X5,X6,X7,X8] : (X6 = X6 & X1 = X2 & X0 = X4 & tab(X6,X7,X8) & tab(X1,X4,X5) & tab(X0,X2,X3)) | ~main_query_1(X0,X1))) [nnf transformation 17]
52. ! [X0,X1] : ((main_query_1(X0,X1) | ! [X2,X3,X4,X5,X6,X7,X8] : (X6 != X6 | X1 != X2 | X0 != X4 | ~tab(X6,X7,X8) | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & (? [X9,X10,X11,X12,X13,X14,X15] : (X13 = X13 & X1 = X9 & X0 = X11 & tab(X13,X14,X15) & tab(X1,X11,X12) & tab(X0,X9,X10)) | ~main_query_1(X0,X1))) [rectify 51]
53. ! [X1,X0] : (? [X9,X10,X11,X12,X13,X14,X15] : (X13 = X13 & X1 = X9 & X0 = X11 & tab(X13,X14,X15) & tab(X1,X11,X12) & tab(X0,X9,X10)) => (sK8(X0,X1) = sK8(X0,X1) & sK4(X0,X1) = X1 & sK6(X0,X1) = X0 & tab(sK8(X0,X1),sK9(X0,X1),sK10(X0,X1)) & tab(X1,sK6(X0,X1),sK7(X0,X1)) & tab(X0,sK4(X0,X1),sK5(X0,X1)))) [choice axiom]
54. ! [X0,X1] : ((main_query_1(X0,X1) | ! [X2,X3,X4,X5,X6,X7,X8] : (X6 != X6 | X1 != X2 | X0 != X4 | ~tab(X6,X7,X8) | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & ((sK8(X0,X1) = sK8(X0,X1) & sK4(X0,X1) = X1 & sK6(X0,X1) = X0 & tab(sK8(X0,X1),sK9(X0,X1),sK10(X0,X1)) & tab(X1,sK6(X0,X1),sK7(X0,X1)) & tab(X0,sK4(X0,X1),sK5(X0,X1))) | ~main_query_1(X0,X1))) [skolemisation 52,53]
55. ? [X0,X1] : ((~main_query_1(X0,X1) | ~main_query_0(X0,X1)) & (main_query_1(X0,X1) | main_query_0(X0,X1))) [nnf transformation 29]
56. ? [X0,X1] : ((~main_query_1(X0,X1) | ~main_query_0(X0,X1)) & (main_query_1(X0,X1) | main_query_0(X0,X1))) => ((~main_query_1(sK11,sK12) | ~main_query_0(sK11,sK12)) & (main_query_1(sK11,sK12) | main_query_0(sK11,sK12))) [choice axiom]
57. (~main_query_1(sK11,sK12) | ~main_query_0(sK11,sK12)) & (main_query_1(sK11,sK12) | main_query_0(sK11,sK12)) [skolemisation 55,56]
58. tab(X0,sK0(X0,X1),sK1(X0,X1)) | ~main_query_0(X0,X1) [cnf transformation 50]
59. tab(X1,sK2(X0,X1),sK3(X0,X1)) | ~main_query_0(X0,X1) [cnf transformation 50]
60. ~main_query_0(X0,X1) | sK2(X0,X1) = X0 [cnf transformation 50]
61. ~main_query_0(X0,X1) | sK0(X0,X1) = X1 [cnf transformation 50]
62. main_query_0(X0,X1) | X1 != X2 | X0 != X4 | ~tab(X1,X4,X5) | ~tab(X0,X2,X3) [cnf transformation 50]
63. tab(X0,sK4(X0,X1),sK5(X0,X1)) | ~main_query_1(X0,X1) [cnf transformation 54]
64. tab(X1,sK6(X0,X1),sK7(X0,X1)) | ~main_query_1(X0,X1) [cnf transformation 54]
66. ~main_query_1(X0,X1) | sK6(X0,X1) = X0 [cnf transformation 54]
67. ~main_query_1(X0,X1) | sK4(X0,X1) = X1 [cnf transformation 54]
69. main_query_1(X0,X1) | X6 != X6 | X1 != X2 | X0 != X4 | ~tab(X6,X7,X8) | ~tab(X1,X4,X5) | ~tab(X0,X2,X3) [cnf transformation 54]
70. main_query_1(sK11,sK12) | main_query_0(sK11,sK12) [cnf transformation 57]
71. ~main_query_1(sK11,sK12) | ~main_query_0(sK11,sK12) [cnf transformation 57]
83. main_query_0(X0,X2) | X0 != X4 | ~tab(X2,X4,X5) | ~tab(X0,X2,X3) [equality resolution 62]
84. ~tab(X4,X2,X3) | ~tab(X2,X4,X5) | main_query_0(X4,X2) [equality resolution 83]
85. main_query_1(X0,X2) | X6 != X6 | X0 != X4 | ~tab(X6,X7,X8) | ~tab(X2,X4,X5) | ~tab(X0,X2,X3) [equality resolution 69]
86. main_query_1(X4,X2) | X6 != X6 | ~tab(X6,X7,X8) | ~tab(X2,X4,X5) | ~tab(X4,X2,X3) [equality resolution 85]
95. main_query_1(X4,X2) | ~tab(X6,X7,X8) | ~tab(X2,X4,X5) | ~tab(X4,X2,X3) [trivial inequality removal 86]
97. 0 <=> ! [X7,X8,X6] : ~tab(X6,X7,X8) [avatar definition]
98. ~tab(X6,X7,X8) <- {0} [avatar component clause 97]
100. 2 <=> ! [X3,X5,X2,X4] : (main_query_1(X4,X2) | ~tab(X4,X2,X3) | ~tab(X2,X4,X5)) [avatar definition]
101. ~tab(X4,X2,X3) | main_query_1(X4,X2) | ~tab(X2,X4,X5) <- {2} [avatar component clause 100]
102. 0 | 2 [avatar split clause 95,100,97]
104. 4 <=> main_query_0(sK11,sK12) [avatar definition]
105. main_query_0(sK11,sK12) <- {4} [avatar component clause 104]
107. 5 <=> ~main_query_0(sK11,sK12) [avatar definition]
108. ~main_query_0(sK11,sK12) <- {5} [avatar component clause 107]
110. 6 <=> main_query_1(sK11,sK12) [avatar definition]
111. main_query_1(sK11,sK12) <- {6} [avatar component clause 110]
113. 7 <=> ~main_query_1(sK11,sK12) [avatar definition]
114. ~main_query_1(sK11,sK12) <- {7} [avatar component clause 113]
115. ~5 | ~7 [avatar split clause 71,113,107]
116. 4 | 6 [avatar split clause 70,110,104]
117. sK2(sK11,sK12) = sK11 <- {4} [resolution 60,105]
118. sK0(sK11,sK12) = sK12 <- {4} [resolution 61,105]
121. tab(sK11,sK12,sK1(sK11,sK12)) | ~main_query_0(sK11,sK12) <- {4} [superposition 58,118]
122. tab(sK11,sK12,sK1(sK11,sK12)) <- {4} [subsumption resolution 121,105]
123. tab(sK12,sK11,sK3(sK11,sK12)) | ~main_query_0(sK11,sK12) <- {4} [superposition 59,117]
124. tab(sK12,sK11,sK3(sK11,sK12)) <- {4} [subsumption resolution 123,105]
127. ~tab(sK2(X4,X5),X5,X6) | main_query_0(X5,sK2(X4,X5)) | ~main_query_0(X4,X5) [resolution 84,59]
128. ~tab(sK11,sK12,X7) | main_query_0(sK12,sK11) <- {4} [resolution 84,124]
130. ~tab(sK6(X11,X12),X12,X13) | main_query_0(X12,sK6(X11,X12)) | ~main_query_1(X11,X12) [resolution 84,64]
135. 8 <=> main_query_0(sK12,sK11) [avatar definition]
136. main_query_0(sK12,sK11) <- {8} [avatar component clause 135]
138. 10 <=> ! [X7] : ~tab(sK11,sK12,X7) [avatar definition]
139. ~tab(sK11,sK12,X7) <- {10} [avatar component clause 138]
140. 8 | 10 | ~4 [avatar split clause 128,104,138,135]
142. sK2(sK12,sK11) = sK12 <- {8} [resolution 136,60]
143. ~tab(sK0(X0,X1),X0,X2) | main_query_1(X0,sK0(X0,X1)) | ~main_query_0(X0,X1) <- {2} [resolution 101,58]
157. $false <- {4, 10} [resolution 139,122]
158. ~4 | ~10 [avatar contradiction clause 157]
159. sK4(sK11,sK12) = sK12 <- {6} [resolution 111,67]
160. sK6(sK11,sK12) = sK11 <- {6} [resolution 111,66]
163. tab(sK11,sK12,sK5(sK11,sK12)) | ~main_query_1(sK11,sK12) <- {6} [superposition 63,159]
164. ~main_query_1(sK11,sK12) <- {6, 10} [subsumption resolution 163,139]
165. $false <- {6, 10} [subsumption resolution 164,111]
166. ~6 | ~10 [avatar contradiction clause 165]
168. tab(sK12,sK11,sK7(sK11,sK12)) | ~main_query_1(sK11,sK12) <- {6} [superposition 64,160]
169. tab(sK12,sK11,sK7(sK11,sK12)) <- {6} [subsumption resolution 168,111]
177. ~tab(sK12,sK11,X0) | main_query_0(sK11,sK2(sK12,sK11)) | ~main_query_0(sK12,sK11) <- {8} [superposition 127,142]
178. ~tab(sK12,sK11,X0) | main_query_0(sK11,sK2(sK12,sK11)) <- {8} [subsumption resolution 177,136]
179. main_query_0(sK11,sK12) | ~tab(sK12,sK11,X0) <- {8} [forward demodulation 178,142]
180. ~tab(sK12,sK11,X0) <- {5, 8} [subsumption resolution 179,108]
184. ~tab(sK11,sK12,X0) | main_query_0(sK12,sK6(sK11,sK12)) | ~main_query_1(sK11,sK12) <- {6} [superposition 130,160]
185. ~tab(sK11,sK12,X0) | main_query_0(sK12,sK6(sK11,sK12)) <- {6} [subsumption resolution 184,111]
186. main_query_0(sK12,sK11) | ~tab(sK11,sK12,X0) <- {6} [forward demodulation 185,160]
189. $false <- {5, 6, 8} [resolution 169,180]
190. 5 | ~6 | ~8 [avatar contradiction clause 189]
193. 10 | 8 | ~6 [avatar split clause 186,110,135,138]
195. sK0(sK11,sK12) = sK12 <- {4} [resolution 105,61]
202. sK0(sK12,sK11) = sK11 <- {8} [resolution 136,61]
211. ~tab(sK12,sK11,X0) | main_query_1(sK11,sK0(sK11,sK12)) | ~main_query_0(sK11,sK12) <- {2, 4} [superposition 143,195]
212. ~tab(sK12,sK11,X0) | main_query_1(sK11,sK0(sK11,sK12)) <- {2, 4} [subsumption resolution 211,105]
213. main_query_1(sK11,sK12) | ~tab(sK12,sK11,X0) <- {2, 4} [forward demodulation 212,195]
214. ~tab(sK12,sK11,X0) <- {2, 4, 7} [subsumption resolution 213,114]
220. tab(sK12,sK11,sK1(sK12,sK11)) | ~main_query_0(sK12,sK11) <- {8} [superposition 58,202]
225. ~main_query_0(sK12,sK11) <- {2, 4, 7, 8} [subsumption resolution 220,214]
226. $false <- {2, 4, 7, 8} [subsumption resolution 225,136]
227. ~2 | ~4 | 7 | ~8 [avatar contradiction clause 226]
229. ~main_query_0(X0,X1) <- {0} [resolution 98,58]
235. $false <- {0, 8} [resolution 229,136]
236. ~0 | ~8 [avatar contradiction clause 235]
238. $false [avatar sat refutation 102,115,116,140,158,166,190,193,227,236]
% SZS output end Proof for test1_equal
% ------------------------------
% Version: Vampire 4.2.2 (commit e1949dd on 2017-12-14 18:39:21 +0000)
% Termination reason: Refutation

% Memory used [KB]: 4861
% Time elapsed: 0.062 s
% ------------------------------
% ------------------------------
