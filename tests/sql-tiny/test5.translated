% Equivallence check for file tests/sql-tiny/test5.sql...
% Database scheme:
% tab:
%	fst: Number
%	snd: Number
%	trd: Number
% tab2:
%	fst: Number
%	snd: Number
%	trd: Number
%	fourth: Number
%	fifth: Number

fof(main_query_0_definition_0, definition, ( ! [A_FST, B_FST] : ((( main_query_0(A_FST, B_FST)) <=> ( ? [A_SND, A_TRD, B_SND, B_TRD, B_FOURTH, B_FIFTH] : (((( tab(A_FST, A_SND, A_TRD)) & (( tab2(B_FST, B_SND, B_TRD, B_FOURTH, B_FIFTH)) & $true)) & (((a_fst = b_snd) & (b_fst = a_snd)) & ( lessthan(A_SND, B_SND)))))))))).

fof(tab_substitution_1, axiom, ( ! [X_0, X_1, X_2, X_3] : ((((X_0 = X_1) & ( tab(X_1, X_2, X_3))) => ( tab(X_0, X_2, X_3)))))).

fof(tab_substitution_2, axiom, ( ! [X_0, X_1, X_2, X_3] : ((((X_0 = X_2) & ( tab(X_1, X_2, X_3))) => ( tab(X_1, X_0, X_3)))))).

fof(tab_substitution_3, axiom, ( ! [X_0, X_1, X_2, X_3] : ((((X_0 = X_3) & ( tab(X_1, X_2, X_3))) => ( tab(X_1, X_2, X_0)))))).

fof(tab2_substitution_1, axiom, ( ! [X_0, X_1, X_2, X_3] : ((((X_0 = X_1) & ( tab2(X_1, X_2, X_3))) => ( tab2(X_0, X_2, X_3)))))).

fof(tab2_substitution_2, axiom, ( ! [X_0, X_1, X_2, X_3] : ((((X_0 = X_2) & ( tab2(X_1, X_2, X_3))) => ( tab2(X_1, X_0, X_3)))))).

fof(tab2_substitution_3, axiom, ( ! [X_0, X_1, X_2, X_3] : ((((X_0 = X_3) & ( tab2(X_1, X_2, X_3))) => ( tab2(X_1, X_2, X_0)))))).

fof(lessthan_substitution_1, axiom, ( ! [X_0, X_1, X_2] : ((((X_0 = X_1) & ( lessthan(X_1, X_2))) => ( lessthan(X_0, X_2)))))).

fof(lessthan_substitution_2, axiom, ( ! [X_0, X_1, X_2] : ((((X_0 = X_2) & ( lessthan(X_1, X_2))) => ( lessthan(X_1, X_0)))))).

fof(reflexivity_of_equality, axiom, ( ! [X] : ((X = X)))).

fof(symmetry_of_equality, axiom, ( ! [X, Y] : (((X = Y) => (Y = X))))).

fof(transitivity_of_equality, axiom, ( ! [X, Y, Z] : ((((X = Y) & (Y = X)) => (X = Z))))).

