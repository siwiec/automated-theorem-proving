% Refutation found. Thanks to Tanya!
% SZS status Theorem for test8
% SZS output start Proof for test8
1. ! [X0,X1] : (main_query_0(X0,X1) <=> ? [X2,X3,X4,X5] : ((b_snd = b_snd | lessthan(X4,X4)) & (b_snd = a_snd | lessthan(X2,X4)) & b_fst = a_snd & a_fst = b_snd & $true & tab(X1,X4,X5) & tab(X0,X2,X3))) [input]
2. ! [X0,X1] : (main_query_1(X0,X1) <=> ? [X2,X3,X4,X5] : (b_fst = a_snd & a_fst = b_snd & $true & tab(X1,X4,X5) & tab(X0,X2,X3))) [input]
3. ! [X0,X1] : (main_query_0(X0,X1) <=> main_query_1(X0,X1)) [input]
4. ~! [X0,X1] : (main_query_0(X0,X1) <=> main_query_1(X0,X1)) [negated conjecture 3]
15. ! [X10,X11,X12] : ((X10 = X11 & X10 = X11) => X10 = X12) [input]
16. ! [X0,X1] : (main_query_0(X0,X1) <=> ? [X2,X3,X4,X5] : ((b_snd = b_snd | lessthan(X4,X4)) & (b_snd = a_snd | lessthan(X2,X4)) & b_fst = a_snd & a_fst = b_snd & tab(X1,X4,X5) & tab(X0,X2,X3))) [true and false elimination 1]
17. ! [X0,X1] : (main_query_1(X0,X1) <=> ? [X2,X3,X4,X5] : (b_fst = a_snd & a_fst = b_snd & tab(X1,X4,X5) & tab(X0,X2,X3))) [true and false elimination 2]
28. ! [X0,X1,X2] : ((X0 = X1 & X0 = X1) => X0 = X2) [rectify 15]
29. ? [X0,X1] : (main_query_0(X0,X1) <~> main_query_1(X0,X1)) [ennf transformation 4]
47. ! [X0,X1,X2] : (X0 = X2 | (X0 != X1 | X0 != X1)) [ennf transformation 28]
48. ! [X0,X1,X2] : (X0 = X2 | X0 != X1 | X0 != X1) [flattening 47]
49. ! [X1,X0] : (sP0(X1,X0) <=> ? [X2,X3,X4,X5] : ((b_snd = b_snd | lessthan(X4,X4)) & (b_snd = a_snd | lessthan(X2,X4)) & b_fst = a_snd & a_fst = b_snd & tab(X1,X4,X5) & tab(X0,X2,X3))) [predicate definition introduction]
50. ! [X0,X1] : (main_query_0(X0,X1) <=> sP0(X1,X0)) [definition folding 16,49]
51. ! [X1,X0] : ((sP0(X1,X0) | ! [X2,X3,X4,X5] : ((b_snd != b_snd & ~lessthan(X4,X4)) | (b_snd != a_snd & ~lessthan(X2,X4)) | b_fst != a_snd | a_fst != b_snd | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & (? [X2,X3,X4,X5] : ((b_snd = b_snd | lessthan(X4,X4)) & (b_snd = a_snd | lessthan(X2,X4)) & b_fst = a_snd & a_fst = b_snd & tab(X1,X4,X5) & tab(X0,X2,X3)) | ~sP0(X1,X0))) [nnf transformation 49]
52. ! [X0,X1] : ((sP0(X0,X1) | ! [X2,X3,X4,X5] : ((b_snd != b_snd & ~lessthan(X4,X4)) | (b_snd != a_snd & ~lessthan(X2,X4)) | b_fst != a_snd | a_fst != b_snd | ~tab(X0,X4,X5) | ~tab(X1,X2,X3))) & (? [X6,X7,X8,X9] : ((b_snd = b_snd | lessthan(X8,X8)) & (b_snd = a_snd | lessthan(X6,X8)) & b_fst = a_snd & a_fst = b_snd & tab(X0,X8,X9) & tab(X1,X6,X7)) | ~sP0(X0,X1))) [rectify 51]
53. ! [X1,X0] : (? [X6,X7,X8,X9] : ((b_snd = b_snd | lessthan(X8,X8)) & (b_snd = a_snd | lessthan(X6,X8)) & b_fst = a_snd & a_fst = b_snd & tab(X0,X8,X9) & tab(X1,X6,X7)) => ((b_snd = b_snd | lessthan(sK3(X0,X1),sK3(X0,X1))) & (b_snd = a_snd | lessthan(sK1(X0,X1),sK3(X0,X1))) & b_fst = a_snd & a_fst = b_snd & tab(X0,sK3(X0,X1),sK4(X0,X1)) & tab(X1,sK1(X0,X1),sK2(X0,X1)))) [choice axiom]
54. ! [X0,X1] : ((sP0(X0,X1) | ! [X2,X3,X4,X5] : ((b_snd != b_snd & ~lessthan(X4,X4)) | (b_snd != a_snd & ~lessthan(X2,X4)) | b_fst != a_snd | a_fst != b_snd | ~tab(X0,X4,X5) | ~tab(X1,X2,X3))) & (((b_snd = b_snd | lessthan(sK3(X0,X1),sK3(X0,X1))) & (b_snd = a_snd | lessthan(sK1(X0,X1),sK3(X0,X1))) & b_fst = a_snd & a_fst = b_snd & tab(X0,sK3(X0,X1),sK4(X0,X1)) & tab(X1,sK1(X0,X1),sK2(X0,X1))) | ~sP0(X0,X1))) [skolemisation 52,53]
55. ! [X0,X1] : ((main_query_0(X0,X1) | ~sP0(X1,X0)) & (sP0(X1,X0) | ~main_query_0(X0,X1))) [nnf transformation 50]
56. ! [X0,X1] : ((main_query_1(X0,X1) | ! [X2,X3,X4,X5] : (b_fst != a_snd | a_fst != b_snd | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & (? [X2,X3,X4,X5] : (b_fst = a_snd & a_fst = b_snd & tab(X1,X4,X5) & tab(X0,X2,X3)) | ~main_query_1(X0,X1))) [nnf transformation 17]
57. ! [X0,X1] : ((main_query_1(X0,X1) | ! [X2,X3,X4,X5] : (b_fst != a_snd | a_fst != b_snd | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & (? [X6,X7,X8,X9] : (b_fst = a_snd & a_fst = b_snd & tab(X1,X8,X9) & tab(X0,X6,X7)) | ~main_query_1(X0,X1))) [rectify 56]
58. ! [X1,X0] : (? [X6,X7,X8,X9] : (b_fst = a_snd & a_fst = b_snd & tab(X1,X8,X9) & tab(X0,X6,X7)) => (b_fst = a_snd & a_fst = b_snd & tab(X1,sK7(X0,X1),sK8(X0,X1)) & tab(X0,sK5(X0,X1),sK6(X0,X1)))) [choice axiom]
59. ! [X0,X1] : ((main_query_1(X0,X1) | ! [X2,X3,X4,X5] : (b_fst != a_snd | a_fst != b_snd | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & ((b_fst = a_snd & a_fst = b_snd & tab(X1,sK7(X0,X1),sK8(X0,X1)) & tab(X0,sK5(X0,X1),sK6(X0,X1))) | ~main_query_1(X0,X1))) [skolemisation 57,58]
60. ? [X0,X1] : ((~main_query_1(X0,X1) | ~main_query_0(X0,X1)) & (main_query_1(X0,X1) | main_query_0(X0,X1))) [nnf transformation 29]
61. ? [X0,X1] : ((~main_query_1(X0,X1) | ~main_query_0(X0,X1)) & (main_query_1(X0,X1) | main_query_0(X0,X1))) => ((~main_query_1(sK9,sK10) | ~main_query_0(sK9,sK10)) & (main_query_1(sK9,sK10) | main_query_0(sK9,sK10))) [choice axiom]
62. (~main_query_1(sK9,sK10) | ~main_query_0(sK9,sK10)) & (main_query_1(sK9,sK10) | main_query_0(sK9,sK10)) [skolemisation 60,61]
63. tab(X1,sK1(X0,X1),sK2(X0,X1)) | ~sP0(X0,X1) [cnf transformation 54]
72. sP0(X0,X1) | b_snd != b_snd | b_snd != a_snd | b_fst != a_snd | a_fst != b_snd | ~tab(X0,X4,X5) | ~tab(X1,X2,X3) [cnf transformation 54]
73. ~main_query_0(X0,X1) | sP0(X1,X0) [cnf transformation 55]
74. ~sP0(X1,X0) | main_query_0(X0,X1) [cnf transformation 55]
75. tab(X0,sK5(X0,X1),sK6(X0,X1)) | ~main_query_1(X0,X1) [cnf transformation 59]
76. tab(X1,sK7(X0,X1),sK8(X0,X1)) | ~main_query_1(X0,X1) [cnf transformation 59]
79. main_query_1(X0,X1) | b_fst != a_snd | a_fst != b_snd | ~tab(X1,X4,X5) | ~tab(X0,X2,X3) [cnf transformation 59]
80. main_query_1(sK9,sK10) | main_query_0(sK9,sK10) [cnf transformation 62]
81. ~main_query_1(sK9,sK10) | ~main_query_0(sK9,sK10) [cnf transformation 62]
92. X0 = X2 | X0 != X1 | X0 != X1 [cnf transformation 48]
102. X1 = X2 | X1 != X1 [equality resolution 92]
103. X1 = X2 [trivial inequality removal 102]
105. sP0(X0,X1) | b_snd != a_snd | b_fst != a_snd | a_fst != b_snd | ~tab(X0,X4,X5) | ~tab(X1,X2,X3) [trivial inequality removal 72]
110. 1 <=> a_fst != b_snd [avatar definition]
111. a_fst != b_snd <- {1} [avatar component clause 110]
116. 3 <=> b_fst != a_snd [avatar definition]
117. b_fst != a_snd <- {3} [avatar component clause 116]
122. 5 <=> b_snd != a_snd [avatar definition]
123. b_snd != a_snd <- {5} [avatar component clause 122]
125. 6 <=> ! [X1,X3,X5,X0,X2,X4] : (sP0(X0,X1) | ~tab(X1,X2,X3) | ~tab(X0,X4,X5)) [avatar definition]
126. ~tab(X1,X2,X3) | sP0(X0,X1) | ~tab(X0,X4,X5) <- {6} [avatar component clause 125]
127. ~1 | ~3 | ~5 | 6 [avatar split clause 105,125,122,116,110]
150. 18 <=> ! [X1,X3,X5,X0,X2,X4] : (main_query_1(X0,X1) | ~tab(X0,X2,X3) | ~tab(X1,X4,X5)) [avatar definition]
151. ~tab(X1,X4,X5) | ~tab(X0,X2,X3) | main_query_1(X0,X1) <- {18} [avatar component clause 150]
152. ~1 | ~3 | 18 [avatar split clause 79,150,116,110]
154. 20 <=> ! [X1,X0] : ~main_query_1(X0,X1) [avatar definition]
155. ~main_query_1(X0,X1) <- {20} [avatar component clause 154]
159. 22 <=> main_query_0(sK9,sK10) [avatar definition]
160. main_query_0(sK9,sK10) <- {22} [avatar component clause 159]
162. 23 <=> ~main_query_0(sK9,sK10) [avatar definition]
163. ~main_query_0(sK9,sK10) <- {23} [avatar component clause 162]
165. 24 <=> main_query_1(sK9,sK10) [avatar definition]
166. main_query_1(sK9,sK10) <- {24} [avatar component clause 165]
168. 25 <=> ~main_query_1(sK9,sK10) [avatar definition]
169. ~main_query_1(sK9,sK10) <- {25} [avatar component clause 168]
170. ~23 | ~25 [avatar split clause 81,168,162]
171. 22 | 24 [avatar split clause 80,165,159]
172. $false <- {1} [subsumption resolution 111,103]
173. 1 [avatar contradiction clause 172]
174. $false <- {3} [subsumption resolution 117,103]
175. 3 [avatar contradiction clause 174]
176. ~tab(X0,X2,X3) | ~tab(X1,X4,X5) <- {18, 20} [subsumption resolution 151,155]
178. 26 <=> ! [X1,X5,X4] : ~tab(X1,X4,X5) [avatar definition]
179. ~tab(X1,X4,X5) <- {26} [avatar component clause 178]
180. 26 | 26 | ~18 | ~20 [avatar split clause 176,154,150,178,178]
183. $false <- {5} [subsumption resolution 123,103]
184. 5 [avatar contradiction clause 183]
192. ~main_query_1(X0,sK10) <- {25} [superposition 169,103]
193. main_query_0(X0,sK10) <- {22} [superposition 160,103]
201. ~main_query_1(X1,X0) <- {25} [superposition 192,103]
203. 20 | 25 [avatar split clause 201,168,154]
204. main_query_0(X1,X0) <- {22} [superposition 193,103]
217. sP0(X0,X1) <- {22} [resolution 204,73]
231. tab(X1,sK1(X0,X1),X2) | ~sP0(X0,X1) [superposition 63,103]
243. ~sP0(X0,X1) <- {26} [subsumption resolution 231,179]
244. $false <- {22, 26} [subsumption resolution 243,217]
245. ~22 | ~26 [avatar contradiction clause 244]
246. ~main_query_0(X0,sK10) <- {23} [superposition 163,103]
250. main_query_1(X0,sK10) <- {24} [superposition 166,103]
254. ~main_query_0(X1,X0) <- {23} [superposition 246,103]
266. main_query_1(X1,X0) <- {24} [superposition 250,103]
268. tab(X1,X2,sK8(X0,X1)) | ~main_query_1(X0,X1) [superposition 76,103]
272. tab(X1,X2,sK8(X0,X1)) <- {24} [subsumption resolution 268,266]
278. sP0(X10,X11) | ~tab(X10,X12,X13) | ~main_query_1(X11,X14) <- {6} [resolution 126,75]
280. ~tab(X10,X12,X13) | sP0(X10,X11) <- {6, 24} [subsumption resolution 278,266]
316. sP0(X0,X1) <- {6, 24} [resolution 280,272]
323. main_query_0(X0,X1) <- {6, 24} [resolution 316,74]
324. $false <- {6, 23, 24} [subsumption resolution 323,254]
325. ~6 | 23 | ~24 [avatar contradiction clause 324]
326. $false [avatar sat refutation 127,152,170,171,173,175,180,184,203,245,325]
% SZS output end Proof for test8
% ------------------------------
% Version: Vampire 4.2.2 (commit e1949dd on 2017-12-14 18:39:21 +0000)
% Termination reason: Refutation

% Memory used [KB]: 4989
% Time elapsed: 0.086 s
% ------------------------------
% ------------------------------
