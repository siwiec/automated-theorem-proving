% Refutation found. Thanks to Tanya!
% SZS status Theorem for equivalent0
% SZS output start Proof for equivalent0
1. ! [X0] : (main_query_0(X0) <=> main_query_1(X0)) [input]
2. ~! [X0] : (main_query_0(X0) <=> main_query_1(X0)) [negated conjecture 1]
3. ! [X0] : (main_query_0(X0) <=> ? [X1,X2] : (X1 = X1 & $true & a(X0,X1,X2) & ! [X3,X4,X5] : (a(X3,X4,X5) <=> tab(X3,X4,X5)))) [input]
4. ! [X0] : (main_query_1(X0) <=> ? [X1,X2] : (X0 = X0 & $true & a(X0,X1,X2) & ! [X3,X4,X5] : (a(X3,X4,X5) <=> tab(X3,X4,X5)))) [input]
14. ! [X0] : (main_query_0(X0) <=> ? [X1,X2] : (X1 = X1 & a(X0,X1,X2) & ! [X3,X4,X5] : (a(X3,X4,X5) <=> tab(X3,X4,X5)))) [true and false elimination 3]
15. ! [X0] : (main_query_1(X0) <=> ? [X1,X2] : (X0 = X0 & a(X0,X1,X2) & ! [X3,X4,X5] : (a(X3,X4,X5) <=> tab(X3,X4,X5)))) [true and false elimination 4]
25. ? [X0] : (main_query_0(X0) <~> main_query_1(X0)) [ennf transformation 2]
39. ? [X0] : ((~main_query_1(X0) | ~main_query_0(X0)) & (main_query_1(X0) | main_query_0(X0))) [nnf transformation 25]
40. ? [X0] : ((~main_query_1(X0) | ~main_query_0(X0)) & (main_query_1(X0) | main_query_0(X0))) => ((~main_query_1(sK0) | ~main_query_0(sK0)) & (main_query_1(sK0) | main_query_0(sK0))) [choice axiom]
41. (~main_query_1(sK0) | ~main_query_0(sK0)) & (main_query_1(sK0) | main_query_0(sK0)) [skolemisation 39,40]
42. ! [X0] : ((main_query_0(X0) | ! [X1,X2] : (X1 != X1 | ~a(X0,X1,X2) | ? [X3,X4,X5] : ((~tab(X3,X4,X5) | ~a(X3,X4,X5)) & (tab(X3,X4,X5) | a(X3,X4,X5))))) & (? [X1,X2] : (X1 = X1 & a(X0,X1,X2) & ! [X3,X4,X5] : ((a(X3,X4,X5) | ~tab(X3,X4,X5)) & (tab(X3,X4,X5) | ~a(X3,X4,X5)))) | ~main_query_0(X0))) [nnf transformation 14]
43. ! [X0] : ((main_query_0(X0) | ! [X1,X2] : (X1 != X1 | ~a(X0,X1,X2) | ? [X3,X4,X5] : ((~tab(X3,X4,X5) | ~a(X3,X4,X5)) & (tab(X3,X4,X5) | a(X3,X4,X5))))) & (? [X6,X7] : (X6 = X6 & a(X0,X6,X7) & ! [X8,X9,X10] : ((a(X8,X9,X10) | ~tab(X8,X9,X10)) & (tab(X8,X9,X10) | ~a(X8,X9,X10)))) | ~main_query_0(X0))) [rectify 42]
44. ? [X3,X4,X5] : ((~tab(X3,X4,X5) | ~a(X3,X4,X5)) & (tab(X3,X4,X5) | a(X3,X4,X5))) => ((~tab(sK1,sK2,sK3) | ~a(sK1,sK2,sK3)) & (tab(sK1,sK2,sK3) | a(sK1,sK2,sK3))) [choice axiom]
45. ! [X0] : (? [X6,X7] : (X6 = X6 & a(X0,X6,X7) & ! [X8,X9,X10] : ((a(X8,X9,X10) | ~tab(X8,X9,X10)) & (tab(X8,X9,X10) | ~a(X8,X9,X10)))) => (sK4(X0) = sK4(X0) & a(X0,sK4(X0),sK5(X0)) & ! [X8,X9,X10] : ((a(X8,X9,X10) | ~tab(X8,X9,X10)) & (tab(X8,X9,X10) | ~a(X8,X9,X10))))) [choice axiom]
46. ! [X0] : ((main_query_0(X0) | ! [X1,X2] : (X1 != X1 | ~a(X0,X1,X2) | ((~tab(sK1,sK2,sK3) | ~a(sK1,sK2,sK3)) & (tab(sK1,sK2,sK3) | a(sK1,sK2,sK3))))) & ((sK4(X0) = sK4(X0) & a(X0,sK4(X0),sK5(X0)) & ! [X8,X9,X10] : ((a(X8,X9,X10) | ~tab(X8,X9,X10)) & (tab(X8,X9,X10) | ~a(X8,X9,X10)))) | ~main_query_0(X0))) [skolemisation 43,45,44]
47. ! [X0] : ((main_query_1(X0) | ! [X1,X2] : (X0 != X0 | ~a(X0,X1,X2) | ? [X3,X4,X5] : ((~tab(X3,X4,X5) | ~a(X3,X4,X5)) & (tab(X3,X4,X5) | a(X3,X4,X5))))) & (? [X1,X2] : (X0 = X0 & a(X0,X1,X2) & ! [X3,X4,X5] : ((a(X3,X4,X5) | ~tab(X3,X4,X5)) & (tab(X3,X4,X5) | ~a(X3,X4,X5)))) | ~main_query_1(X0))) [nnf transformation 15]
48. ! [X0] : ((main_query_1(X0) | ! [X1,X2] : (X0 != X0 | ~a(X0,X1,X2) | ? [X3,X4,X5] : ((~tab(X3,X4,X5) | ~a(X3,X4,X5)) & (tab(X3,X4,X5) | a(X3,X4,X5))))) & (? [X6,X7] : (X0 = X0 & a(X0,X6,X7) & ! [X8,X9,X10] : ((a(X8,X9,X10) | ~tab(X8,X9,X10)) & (tab(X8,X9,X10) | ~a(X8,X9,X10)))) | ~main_query_1(X0))) [rectify 47]
49. ? [X3,X4,X5] : ((~tab(X3,X4,X5) | ~a(X3,X4,X5)) & (tab(X3,X4,X5) | a(X3,X4,X5))) => ((~tab(sK6,sK7,sK8) | ~a(sK6,sK7,sK8)) & (tab(sK6,sK7,sK8) | a(sK6,sK7,sK8))) [choice axiom]
50. ! [X0] : (? [X6,X7] : (X0 = X0 & a(X0,X6,X7) & ! [X8,X9,X10] : ((a(X8,X9,X10) | ~tab(X8,X9,X10)) & (tab(X8,X9,X10) | ~a(X8,X9,X10)))) => (X0 = X0 & a(X0,sK9(X0),sK10(X0)) & ! [X8,X9,X10] : ((a(X8,X9,X10) | ~tab(X8,X9,X10)) & (tab(X8,X9,X10) | ~a(X8,X9,X10))))) [choice axiom]
51. ! [X0] : ((main_query_1(X0) | ! [X1,X2] : (X0 != X0 | ~a(X0,X1,X2) | ((~tab(sK6,sK7,sK8) | ~a(sK6,sK7,sK8)) & (tab(sK6,sK7,sK8) | a(sK6,sK7,sK8))))) & ((X0 = X0 & a(X0,sK9(X0),sK10(X0)) & ! [X8,X9,X10] : ((a(X8,X9,X10) | ~tab(X8,X9,X10)) & (tab(X8,X9,X10) | ~a(X8,X9,X10)))) | ~main_query_1(X0))) [skolemisation 48,50,49]
52. main_query_1(sK0) | main_query_0(sK0) [cnf transformation 41]
53. ~main_query_1(sK0) | ~main_query_0(sK0) [cnf transformation 41]
54. tab(X8,X9,X10) | ~a(X8,X9,X10) | ~main_query_0(X0) [cnf transformation 46]
55. a(X8,X9,X10) | ~tab(X8,X9,X10) | ~main_query_0(X0) [cnf transformation 46]
56. a(X0,sK4(X0),sK5(X0)) | ~main_query_0(X0) [cnf transformation 46]
58. main_query_0(X0) | X1 != X1 | ~a(X0,X1,X2) | tab(sK1,sK2,sK3) | a(sK1,sK2,sK3) [cnf transformation 46]
59. main_query_0(X0) | X1 != X1 | ~a(X0,X1,X2) | ~tab(sK1,sK2,sK3) | ~a(sK1,sK2,sK3) [cnf transformation 46]
60. tab(X8,X9,X10) | ~a(X8,X9,X10) | ~main_query_1(X0) [cnf transformation 51]
61. a(X8,X9,X10) | ~tab(X8,X9,X10) | ~main_query_1(X0) [cnf transformation 51]
62. a(X0,sK9(X0),sK10(X0)) | ~main_query_1(X0) [cnf transformation 51]
64. main_query_1(X0) | X0 != X0 | ~a(X0,X1,X2) | tab(sK6,sK7,sK8) | a(sK6,sK7,sK8) [cnf transformation 51]
65. main_query_1(X0) | X0 != X0 | ~a(X0,X1,X2) | ~tab(sK6,sK7,sK8) | ~a(sK6,sK7,sK8) [cnf transformation 51]
81. main_query_1(X0) | ~a(X0,X1,X2) | tab(sK6,sK7,sK8) | a(sK6,sK7,sK8) [trivial inequality removal 64]
82. main_query_1(X0) | ~a(X0,X1,X2) | ~tab(sK6,sK7,sK8) | ~a(sK6,sK7,sK8) [trivial inequality removal 65]
83. main_query_0(X0) | ~a(X0,X1,X2) | tab(sK1,sK2,sK3) | a(sK1,sK2,sK3) [trivial inequality removal 58]
84. main_query_0(X0) | ~a(X0,X1,X2) | ~tab(sK1,sK2,sK3) | ~a(sK1,sK2,sK3) [trivial inequality removal 59]
86. 0 <=> main_query_0(sK0) [avatar definition]
87. main_query_0(sK0) <- {0} [avatar component clause 86]
89. 1 <=> ~main_query_0(sK0) [avatar definition]
90. ~main_query_0(sK0) <- {1} [avatar component clause 89]
92. 2 <=> main_query_1(sK0) [avatar definition]
93. main_query_1(sK0) <- {2} [avatar component clause 92]
95. 3 <=> ~main_query_1(sK0) [avatar definition]
96. ~main_query_1(sK0) <- {3} [avatar component clause 95]
97. ~1 | ~3 [avatar split clause 53,95,89]
98. 0 | 2 [avatar split clause 52,92,86]
100. 4 <=> a(sK1,sK2,sK3) [avatar definition]
101. a(sK1,sK2,sK3) <- {4} [avatar component clause 100]
103. 5 <=> ~a(sK1,sK2,sK3) [avatar definition]
104. ~a(sK1,sK2,sK3) <- {5} [avatar component clause 103]
106. 6 <=> tab(sK1,sK2,sK3) [avatar definition]
107. tab(sK1,sK2,sK3) <- {6} [avatar component clause 106]
109. 7 <=> ~tab(sK1,sK2,sK3) [avatar definition]
112. 8 <=> ! [X1,X0,X2] : (main_query_0(X0) | ~a(X0,X1,X2)) [avatar definition]
113. ~a(X0,X1,X2) | main_query_0(X0) <- {8} [avatar component clause 112]
114. ~5 | ~7 | 8 [avatar split clause 84,112,109,103]
115. 4 | 6 | 8 [avatar split clause 83,112,106,100]
117. 10 <=> ! [X0] : ~main_query_0(X0) [avatar definition]
118. ~main_query_0(X0) <- {10} [avatar component clause 117]
120. 12 <=> ! [X9,X8,X10] : (a(X8,X9,X10) | ~tab(X8,X9,X10)) [avatar definition]
121. ~tab(X8,X9,X10) | a(X8,X9,X10) <- {12} [avatar component clause 120]
122. 10 | 12 [avatar split clause 55,120,117]
124. 14 <=> ! [X9,X8,X10] : (tab(X8,X9,X10) | ~a(X8,X9,X10)) [avatar definition]
125. ~a(X8,X9,X10) | tab(X8,X9,X10) <- {14} [avatar component clause 124]
126. 10 | 14 [avatar split clause 54,124,117]
128. 16 <=> a(sK6,sK7,sK8) [avatar definition]
129. a(sK6,sK7,sK8) <- {16} [avatar component clause 128]
131. 17 <=> ~a(sK6,sK7,sK8) [avatar definition]
132. ~a(sK6,sK7,sK8) <- {17} [avatar component clause 131]
134. 18 <=> tab(sK6,sK7,sK8) [avatar definition]
135. tab(sK6,sK7,sK8) <- {18} [avatar component clause 134]
137. 19 <=> ~tab(sK6,sK7,sK8) [avatar definition]
138. ~tab(sK6,sK7,sK8) <- {19} [avatar component clause 137]
140. 20 <=> ! [X1,X0,X2] : (main_query_1(X0) | ~a(X0,X1,X2)) [avatar definition]
141. ~a(X0,X1,X2) | main_query_1(X0) <- {20} [avatar component clause 140]
142. ~17 | ~19 | 20 [avatar split clause 82,140,137,131]
143. 16 | 18 | 20 [avatar split clause 81,140,134,128]
145. 22 <=> ! [X0] : ~main_query_1(X0) [avatar definition]
146. ~main_query_1(X0) <- {22} [avatar component clause 145]
147. 22 | 12 [avatar split clause 61,120,145]
148. 22 | 14 [avatar split clause 60,124,145]
149. tab(sK1,sK2,sK3) <- {4, 14} [resolution 125,101]
150. tab(sK6,sK7,sK8) <- {14, 16} [resolution 125,129]
155. $false <- {14, 16, 19} [subsumption resolution 150,138]
156. ~14 | ~16 | 19 [avatar contradiction clause 155]
157. 6 | ~4 | ~14 [avatar split clause 149,124,100,106]
159. a(sK6,sK7,sK8) <- {12, 18} [resolution 135,121]
160. $false <- {12, 17, 18} [subsumption resolution 159,132]
161. ~12 | 17 | ~18 [avatar contradiction clause 160]
162. $false <- {2, 22} [resolution 146,93]
163. ~2 | ~22 [avatar contradiction clause 162]
164. $false <- {0, 10} [subsumption resolution 87,118]
165. ~0 | ~10 [avatar contradiction clause 164]
173. ~main_query_0(X0) | main_query_1(X0) <- {20} [resolution 141,56]
175. a(sK1,sK2,sK3) <- {6, 12} [resolution 121,107]
176. $false <- {5, 6, 12} [subsumption resolution 175,104]
177. 5 | ~6 | ~12 [avatar contradiction clause 176]
179. ~main_query_1(X1) | main_query_0(X1) <- {8} [resolution 113,62]
180. main_query_0(sK0) <- {2, 8} [resolution 179,93]
181. $false <- {1, 2, 8} [subsumption resolution 180,90]
182. 1 | ~2 | ~8 [avatar contradiction clause 181]
183. main_query_1(sK0) <- {0, 20} [resolution 87,173]
184. $false <- {0, 3, 20} [subsumption resolution 183,96]
185. ~0 | 3 | ~20 [avatar contradiction clause 184]
186. $false [avatar sat refutation 97,98,114,115,122,126,142,143,147,148,156,157,161,163,165,177,182,185]
% SZS output end Proof for equivalent0
% ------------------------------
% Version: Vampire 4.2.2 (commit e1949dd on 2017-12-14 18:39:21 +0000)
% Termination reason: Refutation

% Memory used [KB]: 4861
% Time elapsed: 0.059 s
% ------------------------------
% ------------------------------
