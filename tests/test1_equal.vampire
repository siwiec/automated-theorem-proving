% Refutation found. Thanks to Tanya!
% SZS status Theorem for test1_equal
% SZS output start Proof for test1_equal
1. ! [X0,X1] : (main_query_0(X0,X1) <=> ? [X2,X3,X4,X5] : (b_fst = a_snd & a_fst = b_snd & $true & tab(X1,X4,X5) & tab(X0,X2,X3))) [input]
2. ! [X0,X1] : (main_query_1(X0,X1) <=> ? [X2,X3,X4,X5,X6,X7,X8] : (c_fst = c_fst & b_fst = a_snd & a_fst = b_snd & $true & tab(X6,X7,X8) & tab(X1,X4,X5) & tab(X0,X2,X3))) [input]
3. ! [X0,X1] : (main_query_0(X0,X1) <=> main_query_1(X0,X1)) [input]
4. ~! [X0,X1] : (main_query_0(X0,X1) <=> main_query_1(X0,X1)) [negated conjecture 3]
5. ! [X0,X1] : (main_query_0(X0,X1) <=> ? [X2,X3,X4,X5] : (b_fst = a_snd & a_fst = b_snd & tab(X1,X4,X5) & tab(X0,X2,X3))) [true and false elimination 1]
6. ! [X0,X1] : (main_query_1(X0,X1) <=> ? [X2,X3,X4,X5,X6,X7,X8] : (c_fst = c_fst & b_fst = a_snd & a_fst = b_snd & tab(X6,X7,X8) & tab(X1,X4,X5) & tab(X0,X2,X3))) [true and false elimination 2]
7. ? [X0,X1] : (main_query_0(X0,X1) <~> main_query_1(X0,X1)) [ennf transformation 4]
8. ! [X0,X1] : ((main_query_0(X0,X1) | ! [X2,X3,X4,X5] : (b_fst != a_snd | a_fst != b_snd | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & (? [X2,X3,X4,X5] : (b_fst = a_snd & a_fst = b_snd & tab(X1,X4,X5) & tab(X0,X2,X3)) | ~main_query_0(X0,X1))) [nnf transformation 5]
9. ! [X0,X1] : ((main_query_0(X0,X1) | ! [X2,X3,X4,X5] : (b_fst != a_snd | a_fst != b_snd | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & (? [X6,X7,X8,X9] : (b_fst = a_snd & a_fst = b_snd & tab(X1,X8,X9) & tab(X0,X6,X7)) | ~main_query_0(X0,X1))) [rectify 8]
10. ! [X1,X0] : (? [X6,X7,X8,X9] : (b_fst = a_snd & a_fst = b_snd & tab(X1,X8,X9) & tab(X0,X6,X7)) => (b_fst = a_snd & a_fst = b_snd & tab(X1,sK2(X0,X1),sK3(X0,X1)) & tab(X0,sK0(X0,X1),sK1(X0,X1)))) [choice axiom]
11. ! [X0,X1] : ((main_query_0(X0,X1) | ! [X2,X3,X4,X5] : (b_fst != a_snd | a_fst != b_snd | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & ((b_fst = a_snd & a_fst = b_snd & tab(X1,sK2(X0,X1),sK3(X0,X1)) & tab(X0,sK0(X0,X1),sK1(X0,X1))) | ~main_query_0(X0,X1))) [skolemisation 9,10]
12. ! [X0,X1] : ((main_query_1(X0,X1) | ! [X2,X3,X4,X5,X6,X7,X8] : (c_fst != c_fst | b_fst != a_snd | a_fst != b_snd | ~tab(X6,X7,X8) | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & (? [X2,X3,X4,X5,X6,X7,X8] : (c_fst = c_fst & b_fst = a_snd & a_fst = b_snd & tab(X6,X7,X8) & tab(X1,X4,X5) & tab(X0,X2,X3)) | ~main_query_1(X0,X1))) [nnf transformation 6]
13. ! [X0,X1] : ((main_query_1(X0,X1) | ! [X2,X3,X4,X5,X6,X7,X8] : (c_fst != c_fst | b_fst != a_snd | a_fst != b_snd | ~tab(X6,X7,X8) | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & (? [X9,X10,X11,X12,X13,X14,X15] : (c_fst = c_fst & b_fst = a_snd & a_fst = b_snd & tab(X13,X14,X15) & tab(X1,X11,X12) & tab(X0,X9,X10)) | ~main_query_1(X0,X1))) [rectify 12]
14. ! [X1,X0] : (? [X9,X10,X11,X12,X13,X14,X15] : (c_fst = c_fst & b_fst = a_snd & a_fst = b_snd & tab(X13,X14,X15) & tab(X1,X11,X12) & tab(X0,X9,X10)) => (c_fst = c_fst & b_fst = a_snd & a_fst = b_snd & tab(sK8(X0,X1),sK9(X0,X1),sK10(X0,X1)) & tab(X1,sK6(X0,X1),sK7(X0,X1)) & tab(X0,sK4(X0,X1),sK5(X0,X1)))) [choice axiom]
15. ! [X0,X1] : ((main_query_1(X0,X1) | ! [X2,X3,X4,X5,X6,X7,X8] : (c_fst != c_fst | b_fst != a_snd | a_fst != b_snd | ~tab(X6,X7,X8) | ~tab(X1,X4,X5) | ~tab(X0,X2,X3))) & ((c_fst = c_fst & b_fst = a_snd & a_fst = b_snd & tab(sK8(X0,X1),sK9(X0,X1),sK10(X0,X1)) & tab(X1,sK6(X0,X1),sK7(X0,X1)) & tab(X0,sK4(X0,X1),sK5(X0,X1))) | ~main_query_1(X0,X1))) [skolemisation 13,14]
16. ? [X0,X1] : ((~main_query_1(X0,X1) | ~main_query_0(X0,X1)) & (main_query_1(X0,X1) | main_query_0(X0,X1))) [nnf transformation 7]
17. ? [X0,X1] : ((~main_query_1(X0,X1) | ~main_query_0(X0,X1)) & (main_query_1(X0,X1) | main_query_0(X0,X1))) => ((~main_query_1(sK11,sK12) | ~main_query_0(sK11,sK12)) & (main_query_1(sK11,sK12) | main_query_0(sK11,sK12))) [choice axiom]
18. (~main_query_1(sK11,sK12) | ~main_query_0(sK11,sK12)) & (main_query_1(sK11,sK12) | main_query_0(sK11,sK12)) [skolemisation 16,17]
19. tab(X0,sK0(X0,X1),sK1(X0,X1)) | ~main_query_0(X0,X1) [cnf transformation 11]
20. tab(X1,sK2(X0,X1),sK3(X0,X1)) | ~main_query_0(X0,X1) [cnf transformation 11]
21. a_fst = b_snd | ~main_query_0(X0,X1) [cnf transformation 11]
22. b_fst = a_snd | ~main_query_0(X0,X1) [cnf transformation 11]
23. main_query_0(X0,X1) | b_fst != a_snd | a_fst != b_snd | ~tab(X1,X4,X5) | ~tab(X0,X2,X3) [cnf transformation 11]
24. tab(X0,sK4(X0,X1),sK5(X0,X1)) | ~main_query_1(X0,X1) [cnf transformation 15]
25. tab(X1,sK6(X0,X1),sK7(X0,X1)) | ~main_query_1(X0,X1) [cnf transformation 15]
27. a_fst = b_snd | ~main_query_1(X0,X1) [cnf transformation 15]
28. b_fst = a_snd | ~main_query_1(X0,X1) [cnf transformation 15]
30. main_query_1(X0,X1) | c_fst != c_fst | b_fst != a_snd | a_fst != b_snd | ~tab(X6,X7,X8) | ~tab(X1,X4,X5) | ~tab(X0,X2,X3) [cnf transformation 15]
31. main_query_1(sK11,sK12) | main_query_0(sK11,sK12) [cnf transformation 18]
32. ~main_query_1(sK11,sK12) | ~main_query_0(sK11,sK12) [cnf transformation 18]
33. main_query_1(X0,X1) | b_fst != a_snd | a_fst != b_snd | ~tab(X6,X7,X8) | ~tab(X1,X4,X5) | ~tab(X0,X2,X3) [trivial inequality removal 30]
35. 0 <=> a_fst = b_snd [avatar definition]
38. 1 <=> a_fst != b_snd [avatar definition]
41. 2 <=> b_fst = a_snd [avatar definition]
44. 3 <=> b_fst != a_snd [avatar definition]
47. 4 <=> ! [X1,X3,X5,X0,X2,X4] : (main_query_0(X0,X1) | ~tab(X0,X2,X3) | ~tab(X1,X4,X5)) [avatar definition]
48. ~tab(X1,X4,X5) | ~tab(X0,X2,X3) | main_query_0(X0,X1) <- {4} [avatar component clause 47]
49. ~1 | ~3 | 4 [avatar split clause 23,47,44,38]
51. 6 <=> ! [X1,X0] : ~main_query_0(X0,X1) [avatar definition]
52. ~main_query_0(X0,X1) <- {6} [avatar component clause 51]
53. 6 | 2 [avatar split clause 22,41,51]
54. 6 | 0 [avatar split clause 21,35,51]
56. 8 <=> ! [X7,X8,X6] : ~tab(X6,X7,X8) [avatar definition]
57. ~tab(X6,X7,X8) <- {8} [avatar component clause 56]
59. 10 <=> ! [X1,X3,X5,X0,X2,X4] : (main_query_1(X0,X1) | ~tab(X0,X2,X3) | ~tab(X1,X4,X5)) [avatar definition]
60. ~tab(X1,X4,X5) | ~tab(X0,X2,X3) | main_query_1(X0,X1) <- {10} [avatar component clause 59]
61. 8 | ~1 | ~3 | 10 [avatar split clause 33,59,44,38,56]
63. 12 <=> ! [X1,X0] : ~main_query_1(X0,X1) [avatar definition]
64. ~main_query_1(X0,X1) <- {12} [avatar component clause 63]
65. 12 | 2 [avatar split clause 28,41,63]
66. 12 | 0 [avatar split clause 27,35,63]
68. 14 <=> main_query_0(sK11,sK12) [avatar definition]
69. main_query_0(sK11,sK12) <- {14} [avatar component clause 68]
71. 15 <=> ~main_query_0(sK11,sK12) [avatar definition]
72. ~main_query_0(sK11,sK12) <- {15} [avatar component clause 71]
74. 16 <=> main_query_1(sK11,sK12) [avatar definition]
75. main_query_1(sK11,sK12) <- {16} [avatar component clause 74]
77. 17 <=> ~main_query_1(sK11,sK12) [avatar definition]
78. ~main_query_1(sK11,sK12) <- {17} [avatar component clause 77]
79. ~15 | ~17 [avatar split clause 32,77,71]
80. 14 | 16 [avatar split clause 31,74,68]
81. $false <- {6, 14} [resolution 52,69]
82. ~6 | ~14 [avatar contradiction clause 81]
83. $false <- {12, 16} [subsumption resolution 75,64]
84. ~12 | ~16 [avatar contradiction clause 83]
85. ~main_query_0(X0,X1) <- {8} [resolution 19,57]
86. 6 | ~8 [avatar split clause 85,56,51]
89. ~tab(X0,X1,X2) | main_query_0(X0,X3) | ~main_query_0(X3,X4) <- {4} [resolution 48,19]
91. ~tab(X10,X11,X12) | main_query_0(X10,X13) | ~main_query_1(X13,X14) <- {4} [resolution 48,24]
93. ~tab(X0,X1,X2) | main_query_1(X0,X3) | ~main_query_0(X3,X4) <- {10} [resolution 60,19]
97. ~main_query_0(X1,X2) | main_query_0(X0,X1) | ~main_query_0(X0,X3) <- {4} [resolution 89,19]
98. ~main_query_0(X7,X4) | ~main_query_0(X5,X6) | main_query_0(X4,X5) <- {4} [resolution 89,20]
99. ~main_query_1(X8,X11) | ~main_query_0(X9,X10) | main_query_0(X8,X9) <- {4} [resolution 89,24]
100. ~main_query_1(X15,X12) | ~main_query_0(X13,X14) | main_query_0(X12,X13) <- {4} [resolution 89,25]
104. ~main_query_0(X0,X1) | main_query_0(X0,sK11) <- {4, 14} [resolution 97,69]
110. main_query_0(sK11,sK11) <- {4, 14} [resolution 104,69]
113. ~main_query_1(X9,X10) | main_query_0(X8,X9) | ~main_query_1(X8,X11) <- {4} [resolution 91,24]
123. ~main_query_0(X0,X1) | main_query_0(sK12,X0) <- {4, 14} [resolution 98,69]
125. ~main_query_0(X1,X2) | main_query_1(X0,X1) | ~main_query_0(X0,X3) <- {10} [resolution 93,19]
130. main_query_0(sK12,sK11) <- {4, 14} [resolution 123,69]
191. ~main_query_0(X4,X5) | main_query_1(X4,sK12) <- {4, 10, 14} [resolution 125,130]
266. main_query_1(sK11,sK12) <- {4, 10, 14} [resolution 191,110]
271. $false <- {4, 10, 14, 17} [subsumption resolution 266,78]
272. ~4 | ~10 | ~14 | 17 [avatar contradiction clause 271]
273. ~main_query_0(X0,X1) | main_query_0(sK11,X0) <- {4, 16} [resolution 75,99]
274. ~main_query_0(X2,X3) | main_query_0(sK12,X2) <- {4, 16} [resolution 75,100]
279. ~main_query_1(X12,X13) | main_query_0(X12,sK11) <- {4, 16} [resolution 75,113]
296. main_query_0(sK11,sK11) <- {4, 16} [resolution 279,75]
307. main_query_0(sK12,sK11) <- {4, 16} [resolution 296,274]
321. main_query_0(sK11,sK12) <- {4, 16} [resolution 307,273]
327. $false <- {4, 15, 16} [subsumption resolution 321,72]
328. ~4 | 15 | ~16 [avatar contradiction clause 327]
329. $false [avatar sat refutation 49,53,54,61,65,66,79,80,82,84,86,272,328]
% SZS output end Proof for test1_equal
% ------------------------------
% Version: Vampire 4.2.2 (commit e1949dd on 2017-12-14 18:39:21 +0000)
% Termination reason: Refutation

% Memory used [KB]: 4861
% Time elapsed: 0.063 s
% ------------------------------
% ------------------------------
