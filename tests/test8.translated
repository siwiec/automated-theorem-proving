% Equivallence check for file tests/test8.sql...
% Database scheme:
% tab:
%	fst: Number
%	snd: Number
%	trd: Number

fof(main_query_0_definition_0, definition, ( ! [A_FST, B_FST] : ((( main_query_0(A_FST, B_FST)) <=> ( ? [A_SND, A_TRD, B_SND, B_TRD] : (((( tab(A_FST, A_SND, A_TRD)) & (( tab(B_FST, B_SND, B_TRD)) & $true)) & ((((a_fst = b_snd) & (b_fst = a_snd)) & (( lessthan(A_SND, B_SND)) | (a_snd = b_snd))) & (( lessthan(B_SND, B_SND)) | (b_snd = b_snd)))))))))).

fof(main_query_1_definition_0, definition, ( ! [A_FST, B_FST] : ((( main_query_1(A_FST, B_FST)) <=> ( ? [A_SND, A_TRD, B_SND, B_TRD] : (((( tab(A_FST, A_SND, A_TRD)) & (( tab(B_FST, B_SND, B_TRD)) & $true)) & ((a_fst = b_snd) & (b_fst = a_snd))))))))).

fof(equivalence_check_1, conjecture, ( ! [A_FST, B_FST] : ((( main_query_0(A_FST, B_FST)) <=> ( main_query_1(A_FST, B_FST)))))).

fof(tab_substitution_1, axiom, ( ! [X_0, X_1, X_2, X_3] : ((((X_0 = X_1) & ( tab(X_1, X_2, X_3))) => ( tab(X_0, X_2, X_3)))))).

fof(tab_substitution_2, axiom, ( ! [X_0, X_1, X_2, X_3] : ((((X_0 = X_2) & ( tab(X_1, X_2, X_3))) => ( tab(X_1, X_0, X_3)))))).

fof(tab_substitution_3, axiom, ( ! [X_0, X_1, X_2, X_3] : ((((X_0 = X_3) & ( tab(X_1, X_2, X_3))) => ( tab(X_1, X_2, X_0)))))).

fof(tab2_substitution_1, axiom, ( ! [X_0, X_1, X_2, X_3] : ((((X_0 = X_1) & ( tab2(X_1, X_2, X_3))) => ( tab2(X_0, X_2, X_3)))))).

fof(tab2_substitution_2, axiom, ( ! [X_0, X_1, X_2, X_3] : ((((X_0 = X_2) & ( tab2(X_1, X_2, X_3))) => ( tab2(X_1, X_0, X_3)))))).

fof(tab2_substitution_3, axiom, ( ! [X_0, X_1, X_2, X_3] : ((((X_0 = X_3) & ( tab2(X_1, X_2, X_3))) => ( tab2(X_1, X_2, X_0)))))).

fof(lessthan_substitution_1, axiom, ( ! [X_0, X_1, X_2] : ((((X_0 = X_1) & ( lessthan(X_1, X_2))) => ( lessthan(X_0, X_2)))))).

fof(lessthan_substitution_2, axiom, ( ! [X_0, X_1, X_2] : ((((X_0 = X_2) & ( lessthan(X_1, X_2))) => ( lessthan(X_1, X_0)))))).

fof(reflexivity_of_equality, axiom, ( ! [X] : ((X = X)))).

fof(symmetry_of_equality, axiom, ( ! [X, Y] : (((X = Y) => (Y = X))))).

fof(transitivity_of_equality, axiom, ( ! [X, Y, Z] : ((((X = Y) & (Y = X)) => (X = Z))))).

