% Refutation found. Thanks to Tanya!
% SZS status Theorem for output_query10_query11
% SZS output start Proof for output_query10_query11
1. ! [X0,X1,X2,X3,X4] : (from_2(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [input]
2. ! [X5,X6] : (where_3(X5,X6) <=> eq(X5,X6)) [input]
3. ! [X5] : (select_1(X5) <=> ? [X0,X1,X2,X3,X4] : (where_3(X5,X6) & from_2(X0,X1,X2,X3,X4))) [input]
4. ! [X7] : (main_query_1(X7) <=> select_1(X7)) [input]
5. ! [X0,X1,X2,X3,X4] : (from_5(X0,X1,X2,X3,X4) <=> tab1(X0,X1,X2,X3,X4)) [input]
6. ! [X1,X5] : (where_6(X1,X5) <=> eq(X5,X1)) [input]
7. ! [X5] : (select_4(X5) <=> ? [X0,X1,X2,X3,X4] : (where_6(X1,X5) & from_5(X0,X1,X2,X3,X4))) [input]
8. ! [X7] : (main_query_2(X7) <=> select_4(X7)) [input]
49. ! [X7] : (main_query_1(X7) <=> main_query_2(X7)) [input]
50. ~! [X7] : (main_query_1(X7) <=> main_query_2(X7)) [negated conjecture 49]
51. ! [X0,X1] : (where_3(X0,X1) <=> eq(X0,X1)) [rectify 2]
52. ! [X0] : (select_1(X0) <=> ? [X1,X2,X3,X4,X5] : (where_3(X0,X6) & from_2(X1,X2,X3,X4,X5))) [rectify 3]
53. ! [X6] : ! [X0] : (select_1(X0) <=> ? [X1,X2,X3,X4,X5] : (where_3(X0,X6) & from_2(X1,X2,X3,X4,X5))) [closure 52]
54. ! [X6,X0] : (select_1(X0) <=> ? [X1,X2,X3,X4,X5] : (where_3(X0,X6) & from_2(X1,X2,X3,X4,X5))) [flattening 53]
55. ! [X0] : (main_query_1(X0) <=> select_1(X0)) [rectify 4]
56. ! [X0,X1] : (where_6(X0,X1) <=> eq(X1,X0)) [rectify 6]
57. ! [X0] : (select_4(X0) <=> ? [X1,X2,X3,X4,X5] : (where_6(X2,X0) & from_5(X1,X2,X3,X4,X5))) [rectify 7]
58. ! [X0] : (main_query_2(X0) <=> select_4(X0)) [rectify 8]
99. ~! [X0] : (main_query_1(X0) <=> main_query_2(X0)) [rectify 50]
175. ? [X0] : (main_query_1(X0) <~> main_query_2(X0)) [ennf transformation 99]
176. ! [X0,X1,X2,X3,X4] : ((from_2(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_2(X0,X1,X2,X3,X4))) [nnf transformation 1]
177. ! [X0,X1] : ((where_3(X0,X1) | ~eq(X0,X1)) & (eq(X0,X1) | ~where_3(X0,X1))) [nnf transformation 51]
178. ! [X6,X0] : ((select_1(X0) | ! [X1,X2,X3,X4,X5] : (~where_3(X0,X6) | ~from_2(X1,X2,X3,X4,X5))) & (? [X1,X2,X3,X4,X5] : (where_3(X0,X6) & from_2(X1,X2,X3,X4,X5)) | ~select_1(X0))) [nnf transformation 54]
179. ! [X0,X1] : ((select_1(X1) | ! [X2,X3,X4,X5,X6] : (~where_3(X1,X0) | ~from_2(X2,X3,X4,X5,X6))) & (? [X7,X8,X9,X10,X11] : (where_3(X1,X0) & from_2(X7,X8,X9,X10,X11)) | ~select_1(X1))) [rectify 178]
180. ! [X1,X0] : (? [X7,X8,X9,X10,X11] : (where_3(X1,X0) & from_2(X7,X8,X9,X10,X11)) => (where_3(X1,X0) & from_2(sK0(X0,X1),sK1(X0,X1),sK2(X0,X1),sK3(X0,X1),sK4(X0,X1)))) [choice axiom]
181. ! [X0,X1] : ((select_1(X1) | ! [X2,X3,X4,X5,X6] : (~where_3(X1,X0) | ~from_2(X2,X3,X4,X5,X6))) & ((where_3(X1,X0) & from_2(sK0(X0,X1),sK1(X0,X1),sK2(X0,X1),sK3(X0,X1),sK4(X0,X1))) | ~select_1(X1))) [skolemisation 179,180]
182. ! [X0] : ((main_query_1(X0) | ~select_1(X0)) & (select_1(X0) | ~main_query_1(X0))) [nnf transformation 55]
183. ! [X0,X1,X2,X3,X4] : ((from_5(X0,X1,X2,X3,X4) | ~tab1(X0,X1,X2,X3,X4)) & (tab1(X0,X1,X2,X3,X4) | ~from_5(X0,X1,X2,X3,X4))) [nnf transformation 5]
184. ! [X0,X1] : ((where_6(X0,X1) | ~eq(X1,X0)) & (eq(X1,X0) | ~where_6(X0,X1))) [nnf transformation 56]
185. ! [X0] : ((select_4(X0) | ! [X1,X2,X3,X4,X5] : (~where_6(X2,X0) | ~from_5(X1,X2,X3,X4,X5))) & (? [X1,X2,X3,X4,X5] : (where_6(X2,X0) & from_5(X1,X2,X3,X4,X5)) | ~select_4(X0))) [nnf transformation 57]
186. ! [X0] : ((select_4(X0) | ! [X1,X2,X3,X4,X5] : (~where_6(X2,X0) | ~from_5(X1,X2,X3,X4,X5))) & (? [X6,X7,X8,X9,X10] : (where_6(X7,X0) & from_5(X6,X7,X8,X9,X10)) | ~select_4(X0))) [rectify 185]
187. ! [X0] : (? [X6,X7,X8,X9,X10] : (where_6(X7,X0) & from_5(X6,X7,X8,X9,X10)) => (where_6(sK6(X0),X0) & from_5(sK5(X0),sK6(X0),sK7(X0),sK8(X0),sK9(X0)))) [choice axiom]
188. ! [X0] : ((select_4(X0) | ! [X1,X2,X3,X4,X5] : (~where_6(X2,X0) | ~from_5(X1,X2,X3,X4,X5))) & ((where_6(sK6(X0),X0) & from_5(sK5(X0),sK6(X0),sK7(X0),sK8(X0),sK9(X0))) | ~select_4(X0))) [skolemisation 186,187]
189. ! [X0] : ((main_query_2(X0) | ~select_4(X0)) & (select_4(X0) | ~main_query_2(X0))) [nnf transformation 58]
190. ? [X0] : ((~main_query_2(X0) | ~main_query_1(X0)) & (main_query_2(X0) | main_query_1(X0))) [nnf transformation 175]
191. ? [X0] : ((~main_query_2(X0) | ~main_query_1(X0)) & (main_query_2(X0) | main_query_1(X0))) => ((~main_query_2(sK10) | ~main_query_1(sK10)) & (main_query_2(sK10) | main_query_1(sK10))) [choice axiom]
192. (~main_query_2(sK10) | ~main_query_1(sK10)) & (main_query_2(sK10) | main_query_1(sK10)) [skolemisation 190,191]
193. ~from_2(X0,X1,X2,X3,X4) | tab1(X0,X1,X2,X3,X4) [cnf transformation 176]
194. ~tab1(X0,X1,X2,X3,X4) | from_2(X0,X1,X2,X3,X4) [cnf transformation 176]
195. ~where_3(X0,X1) | eq(X0,X1) [cnf transformation 177]
196. ~eq(X0,X1) | where_3(X0,X1) [cnf transformation 177]
197. from_2(sK0(X0,X1),sK1(X0,X1),sK2(X0,X1),sK3(X0,X1),sK4(X0,X1)) | ~select_1(X1) [cnf transformation 181]
198. where_3(X1,X0) | ~select_1(X1) [cnf transformation 181]
199. select_1(X1) | ~where_3(X1,X0) | ~from_2(X2,X3,X4,X5,X6) [cnf transformation 181]
200. ~main_query_1(X0) | select_1(X0) [cnf transformation 182]
201. ~select_1(X0) | main_query_1(X0) [cnf transformation 182]
202. ~from_5(X0,X1,X2,X3,X4) | tab1(X0,X1,X2,X3,X4) [cnf transformation 183]
203. ~tab1(X0,X1,X2,X3,X4) | from_5(X0,X1,X2,X3,X4) [cnf transformation 183]
204. ~where_6(X0,X1) | eq(X1,X0) [cnf transformation 184]
205. ~eq(X1,X0) | where_6(X0,X1) [cnf transformation 184]
206. from_5(sK5(X0),sK6(X0),sK7(X0),sK8(X0),sK9(X0)) | ~select_4(X0) [cnf transformation 188]
207. where_6(sK6(X0),X0) | ~select_4(X0) [cnf transformation 188]
208. ~from_5(X1,X2,X3,X4,X5) | ~where_6(X2,X0) | select_4(X0) [cnf transformation 188]
209. ~main_query_2(X0) | select_4(X0) [cnf transformation 189]
210. ~select_4(X0) | main_query_2(X0) [cnf transformation 189]
251. main_query_2(sK10) | main_query_1(sK10) [cnf transformation 192]
252. ~main_query_2(sK10) | ~main_query_1(sK10) [cnf transformation 192]
291. 0 <=> ! [X3,X5,X2,X4,X6] : ~from_2(X2,X3,X4,X5,X6) [avatar definition]
292. ~from_2(X2,X3,X4,X5,X6) <- {0} [avatar component clause 291]
294. 2 <=> ! [X1,X0] : (select_1(X1) | ~where_3(X1,X0)) [avatar definition]
295. ~where_3(X1,X0) | select_1(X1) <- {2} [avatar component clause 294]
296. 0 | 2 [avatar split clause 199,294,291]
298. 4 <=> main_query_1(sK10) [avatar definition]
299. main_query_1(sK10) <- {4} [avatar component clause 298]
301. 5 <=> ~main_query_1(sK10) [avatar definition]
302. ~main_query_1(sK10) <- {5} [avatar component clause 301]
304. 6 <=> main_query_2(sK10) [avatar definition]
305. main_query_2(sK10) <- {6} [avatar component clause 304]
307. 7 <=> ~main_query_2(sK10) [avatar definition]
308. ~main_query_2(sK10) <- {7} [avatar component clause 307]
309. ~5 | ~7 [avatar split clause 252,307,301]
310. 4 | 6 [avatar split clause 251,304,298]
311. select_1(sK10) <- {4} [resolution 200,299]
314. eq(X0,X1) | ~select_1(X0) [resolution 195,198]
316. where_6(X0,X1) | ~select_1(X1) [resolution 205,314]
317. eq(X0,sK6(X0)) | ~select_4(X0) [resolution 207,204]
321. where_3(X1,sK6(X1)) | ~select_4(X1) [resolution 317,196]
324. ~select_4(X1) | select_1(X1) <- {2} [resolution 321,295]
325. tab1(sK5(X0),sK6(X0),sK7(X0),sK8(X0),sK9(X0)) | ~select_4(X0) [resolution 206,202]
326. ~where_6(sK6(X1),X2) | ~select_4(X1) | select_4(X2) [resolution 206,208]
328. ~select_4(X1) | select_4(X2) | ~select_1(X2) [resolution 326,316]
331. 8 <=> ! [X2] : (select_4(X2) | ~select_1(X2)) [avatar definition]
332. ~select_1(X2) | select_4(X2) <- {8} [avatar component clause 331]
334. 10 <=> ! [X1] : ~select_4(X1) [avatar definition]
335. ~select_4(X1) <- {10} [avatar component clause 334]
336. 8 | 10 [avatar split clause 328,334,331]
337. tab1(sK0(X1,X0),sK1(X1,X0),sK2(X1,X0),sK3(X1,X0),sK4(X1,X0)) | ~select_1(X0) [resolution 197,193]
338. select_4(sK10) <- {4, 8} [resolution 332,311]
340. from_2(sK5(X1),sK6(X1),sK7(X1),sK8(X1),sK9(X1)) | ~select_4(X1) [resolution 325,194]
342. main_query_2(sK10) <- {4, 8} [resolution 338,210]
343. $false <- {4, 7, 8} [subsumption resolution 342,308]
344. ~4 | 7 | ~8 [avatar contradiction clause 343]
345. from_5(sK0(X1,X0),sK1(X1,X0),sK2(X1,X0),sK3(X1,X0),sK4(X1,X0)) | ~select_1(X0) [resolution 337,203]
349. ~select_1(X2) | ~where_6(sK1(X3,X2),X4) | select_4(X4) [resolution 345,208]
350. ~where_6(sK1(X3,X2),X4) | ~select_1(X2) <- {10} [subsumption resolution 349,335]
351. ~select_1(X0) | ~select_1(X1) <- {10} [resolution 350,316]
353. 12 <=> ! [X1] : ~select_1(X1) [avatar definition]
354. ~select_1(X1) <- {12} [avatar component clause 353]
355. 12 | 12 | ~10 [avatar split clause 351,334,353,353]
356. select_4(sK10) <- {6} [resolution 305,209]
357. select_1(sK10) <- {2, 6} [resolution 356,324]
360. main_query_1(sK10) <- {2, 6} [resolution 357,201]
361. $false <- {2, 5, 6} [subsumption resolution 360,302]
362. ~2 | 5 | ~6 [avatar contradiction clause 361]
363. ~select_1(X0) <- {0} [resolution 292,197]
364. ~select_4(X1) <- {0} [resolution 292,340]
365. 12 | ~0 [avatar split clause 363,291,353]
366. 10 | ~0 [avatar split clause 364,291,334]
367. $false <- {6, 10} [resolution 335,356]
368. ~6 | ~10 [avatar contradiction clause 367]
370. select_1(sK10) <- {4} [resolution 299,200]
371. $false <- {4, 12} [subsumption resolution 370,354]
372. ~4 | ~12 [avatar contradiction clause 371]
373. $false [avatar sat refutation 296,309,310,336,344,355,362,365,366,368,372]
% SZS output end Proof for output_query10_query11
% ------------------------------
% Version: Vampire 4.2.2 (commit e1949dd on 2017-12-14 18:39:21 +0000)
% Termination reason: Refutation

% Memory used [KB]: 4989
% Time elapsed: 0.029 s
% ------------------------------
% ------------------------------
